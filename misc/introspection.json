{
  "AccountDataDialogInput": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Retrieve the dialog for confirming account data access request",
        "name": "CONFIRM"
      },
      {
        "description": "Retrieve the dialog for requesting account data access",
        "name": "REQUEST"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AccountDataDialogInput",
    "possibleTypes": []
  },
  "AccountDataDialogOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Provides prompt text for either a data access REQUEST or CONFIRM",
        "kind": "",
        "list": false,
        "name": "prompt",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "A prompt to instruct Amazon Account Pool customers to initiate the data request process on Amazon page.\nNull if not Amazon Account Pool customers.",
        "kind": "",
        "list": false,
        "name": "redirectionPrompt",
        "nullable": true,
        "type": "AccountDataDialogRedirectionPrompt"
      },
      {
        "args": [],
        "description": "Provides supporting body text for either a data access REQUEST or CONFIRM",
        "kind": "",
        "list": false,
        "name": "supportMessage",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AccountDataDialogOutput",
    "possibleTypes": []
  },
  "AccountDataDialogRedirectionPrompt": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Link to the Amazon page.",
        "kind": "",
        "list": false,
        "name": "action",
        "nullable": false,
        "type": "RedirectLink"
      },
      {
        "args": [],
        "description": "Text to instruct customers to initiate the data request process on Amazon page.",
        "kind": "",
        "list": false,
        "name": "message",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AccountDataDialogRedirectionPrompt",
    "possibleTypes": []
  },
  "ActionLink": {
    "args": [],
    "description": "Generic type for an action link which has a url and optionally associated label (localized text)",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Optional label (localized text) to associate with URL.\nThe label could be used with a button, text link, or other UI component.",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": true,
        "type": "CallToActionText"
      },
      {
        "args": [],
        "description": "The URL for the action link",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ActionLink",
    "possibleTypes": []
  },
  "ActionLinkName": {
    "args": [],
    "description": "A name identifier for a given action link in a CTA. This value is only unique within a list of action links.\nIt is not globally unique.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "SCALAR",
    "name": "ActionLinkName",
    "possibleTypes": []
  },
  "AdCreativeInfo": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Flag used to communicate if the ad creative contains a video to be autoplayed by the client.",
        "kind": "",
        "list": false,
        "name": "hasAutoplay",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag that determines if the app slot is eligible to render 3p ad.",
        "kind": "",
        "list": false,
        "name": "isEligibleFor3pAd",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag used to communicate if the ad returned is premium.",
        "kind": "",
        "list": false,
        "name": "isPremium",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag used to indicate if the client should fit the ad creative to the width of the screen.",
        "kind": "",
        "list": false,
        "name": "shouldFitToWidth",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Metadata including height and width of the returned creative",
        "kind": "",
        "list": false,
        "name": "size",
        "nullable": false,
        "type": "CreativeSize"
      },
      {
        "args": [],
        "description": "HTML markup for the slot containing the ad creative",
        "kind": "",
        "list": false,
        "name": "slotMarkup",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdCreativeInfo",
    "possibleTypes": []
  },
  "AdLayoutConfiguration": {
    "args": [],
    "description": "An entry to the ad layout slot configuration map containing an ad layout type and a list of supported slots\nand their configurations.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The ad layout type represented as a string.",
        "kind": "",
        "list": false,
        "name": "adLayoutType",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "A list of AdSlotConfigurations.",
        "kind": "",
        "list": true,
        "name": "adSlotConfigs",
        "nullable": false,
        "type": "AdSlotConfiguration"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdLayoutConfiguration",
    "possibleTypes": []
  },
  "AdParametersApp": {
    "args": [],
    "description": "Required and optional parameters used to form the VAES request URL that come from the context of the app client.\nOptional params default to null when not present.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Flag used to communicate whether the ad is for an autostarted video. Impacts slot name and placement type.",
        "list": false,
        "name": "autoStartVideo",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional context of the page used for special section targeting - i.e. oscars.bestOf",
        "list": false,
        "name": "context",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The device id of the client",
        "list": false,
        "name": "deviceId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The device info of the client. Used in the backend IMDb advertising systems to determine ad placement related info.",
        "list": false,
        "name": "deviceInfo",
        "nullable": false,
        "type": "DeviceInfo"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The Identifier For Advertising of the user",
        "list": false,
        "name": "idfa",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The page type the query was made from",
        "list": false,
        "name": "pageType",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The subpage type the query was made from",
        "list": false,
        "name": "subPageType",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The user agent of the client. This field is passed to Amazon ad systems via the backend ad requests.",
        "list": false,
        "name": "userAgent",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The viewport size of the client's device",
        "list": false,
        "name": "viewportSize",
        "nullable": true,
        "type": "ViewPortSize"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AdParametersApp",
    "possibleTypes": []
  },
  "AdParametersWeb": {
    "args": [],
    "description": "Optional parameters used to form the VAES request URL that come from the context of the web client.\nAll params default to null when not present.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Flag used to communicate whether the ad is for an autostarted video. Impacts slot name and placement type.",
        "list": false,
        "name": "autoStartVideo",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional context of the page used for special section targeting - i.e. oscars.bestOf",
        "list": false,
        "name": "context",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The page type the query was made from",
        "list": false,
        "name": "pageType",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The subpage type the query was made from",
        "list": false,
        "name": "subPageType",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The user agent of the client",
        "list": false,
        "name": "userAgent",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The viewport size of the client's device",
        "list": false,
        "name": "viewportSize",
        "nullable": true,
        "type": "ViewPortSize"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AdParametersWeb",
    "possibleTypes": []
  },
  "AdProductType": {
    "args": [],
    "description": "Attributes of an ad product",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Enumeration of the relative specialness of this AdProductType.\nValues include \"standard\" and \"premium\".",
        "kind": "",
        "list": false,
        "name": "grade",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Name of the ad product. Human readable, but not intended for display.\nValues include \"premium-page\".",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "A 3-character symbol for this ad product.\nValues include \"prm\".",
        "kind": "",
        "list": false,
        "name": "symbol",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdProductType",
    "possibleTypes": []
  },
  "AdSite": {
    "args": [],
    "description": "The IMDb site variant on which the ads are intended to be shown",
    "enumValues": [
      {
        "description": null,
        "name": "BOX_OFFICE_MOJO"
      },
      {
        "description": null,
        "name": "CONSUMER"
      },
      {
        "description": null,
        "name": "MOBILE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AdSite",
    "possibleTypes": []
  },
  "AdSlot": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Ad feedback URL to be linked in the sponsored label of the ad",
        "kind": "",
        "list": false,
        "name": "adFeedbackUrl",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "The creative metadata and slotsMarkup returned for the given ad slot",
        "kind": "",
        "list": false,
        "name": "creativeInfo",
        "nullable": false,
        "type": "AdCreativeInfo"
      },
      {
        "args": [],
        "description": "The name of the ad slot",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdSlot",
    "possibleTypes": []
  },
  "AdSlotConfiguration": {
    "args": [],
    "description": "The configuration for an ad slot.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The APS configuration for the ad slot in this AdSlotConfiguration. The config\ncontain information for each supported APS placement for the slot.\nWhen this field is missing, the client will not make any 3p ad requests for this slot.",
        "kind": "",
        "list": false,
        "name": "apsConfig",
        "nullable": true,
        "type": "ApsConfiguration"
      },
      {
        "args": [],
        "description": "The IMDb slot name (e.g. inline20).",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The width and height of the slot.",
        "kind": "",
        "list": false,
        "name": "size",
        "nullable": false,
        "type": "CreativeSize"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdSlotConfiguration",
    "possibleTypes": []
  },
  "AdditionalCreditCategoriesInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The categories to be excluded from the request.\n\nIf no value is provided, no categories are excluded.",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The categories to be include in the request.\n\nIf no value is provided, all categories are returned.",
        "list": true,
        "name": "includeCategories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AdditionalCreditCategoriesInput",
    "possibleTypes": []
  },
  "AdditionalCreditItem": {
    "args": [],
    "description": "This is an unverified Resume credit, which Pro customers can create for display on\n  their pro name page. These credits are not vetted and are accepted as is.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " The name of the category of the credit. ",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name of the company or director that made the project. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Unique identifier for the additional credit object. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The role or position the individual had on the project. ",
        "kind": "",
        "list": false,
        "name": "job",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name or title of the project.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdditionalCreditItem",
    "possibleTypes": []
  },
  "AdditionalResumeInfo": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " The details for an additional resume info section. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Unique identifier for the additional resume info object. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The title for the additional resume info section. ",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdditionalResumeInfo",
    "possibleTypes": []
  },
  "AdditionalResumeInfoConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AdditionalResumeInfoEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdditionalResumeInfoConnection",
    "possibleTypes": []
  },
  "AdditionalResumeInfoEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AdditionalResumeInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdditionalResumeInfoEdge",
    "possibleTypes": []
  },
  "AdditionalWebAuthContext": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "'Unique browser ID' i.e ubid context identifier, which in practice means an identifier for the domain+browser combination.",
        "list": false,
        "name": "clientContext",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AdditionalWebAuthContext",
    "possibleTypes": []
  },
  "AdvancedNameSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AdvancedNameSearchEdge"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "facetField",
            "nullable": false,
            "type": "NameFacetField"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "facet",
        "nullable": true,
        "type": "SearchFacet"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdvancedNameSearchConnection",
    "possibleTypes": []
  },
  "AdvancedNameSearchConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their awards (Oscar-winner, Oscar-nominated, etc..)",
        "list": false,
        "name": "awardConstraint",
        "nullable": true,
        "type": "AwardSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on words in their biography, or the biography's author (currently only searches in miniBiography)",
        "list": false,
        "name": "biographyConstraint",
        "nullable": true,
        "type": "BiographySearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on when they were born",
        "list": false,
        "name": "birthDateConstraint",
        "nullable": true,
        "type": "BirthDateSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their birth place",
        "list": false,
        "name": "birthPlaceConstraint",
        "nullable": true,
        "type": "BirthPlaceSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on when they died",
        "list": false,
        "name": "deathDateConstraint",
        "nullable": true,
        "type": "DeathDateSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their death place",
        "list": false,
        "name": "deathPlaceConstraint",
        "nullable": true,
        "type": "DeathPlaceSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on the adult flag (explicit), with the default being exluding names flagged as adult",
        "list": false,
        "name": "explicitContentConstraint",
        "nullable": true,
        "type": "ExplicitContentSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on titles they've been credited in",
        "list": false,
        "name": "filmographyConstraint",
        "nullable": true,
        "type": "FilmographySearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their gender identity",
        "list": false,
        "name": "genderIdentityConstraint",
        "nullable": true,
        "type": "GenderIdentitySearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their presence in lists.\n\nIf any list specified in this constraint is not a list of Names then\n`GRAPHQL_VALIDATION_FAILED` will be thrown.\n\nSpecifying lists that contain in aggregate a large number of Names may\ntrigger an error due to query term limits imposed by the implementation. Note\nthat this term count limit is for the overall query, not just this constraint.",
        "list": false,
        "name": "listConstraint",
        "nullable": true,
        "type": "ListSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their name (name text)",
        "list": false,
        "name": "nameTextConstraint",
        "nullable": true,
        "type": "NameTextSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their profession categories",
        "list": false,
        "name": "professionCategoryConstraint",
        "nullable": true,
        "type": "NameProfessionCategorySearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their professions",
        "list": false,
        "name": "professionConstraint",
        "nullable": true,
        "type": "NameProfessionSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on the words in quotes",
        "list": false,
        "name": "quoteMatchingConstraint",
        "nullable": true,
        "type": "NameQuoteMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on the words in trivia",
        "list": false,
        "name": "triviaMatchingConstraint",
        "nullable": true,
        "type": "NameTriviaMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names based on their available data (has trivia data, has a birth place, etc..)",
        "list": false,
        "name": "withNameDataConstraint",
        "nullable": true,
        "type": "WithNameDataSearchConstraint"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AdvancedNameSearchConstraints",
    "possibleTypes": []
  },
  "AdvancedNameSearchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AdvancedNameSearchResult"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdvancedNameSearchEdge",
    "possibleTypes": []
  },
  "AdvancedNameSearchResult": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdvancedNameSearchResult",
    "possibleTypes": []
  },
  "AdvancedNameSearchSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "sortBy",
        "nullable": false,
        "type": "AdvancedNameSearchSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "sortOrder",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AdvancedNameSearchSort",
    "possibleTypes": []
  },
  "AdvancedNameSearchSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort names based on their birth date\nASC: Earliest dates to Highest dates (Oldest - Youngest)",
        "name": "BIRTH_DATE"
      },
      {
        "description": "Sort names based on their death date\nASC: Earliest dates to last dates (Died First - Died Last)",
        "name": "DEATH_DATE"
      },
      {
        "description": "Sort names alphabetically\nASC: A-Z",
        "name": "NAME"
      },
      {
        "description": "Sort names based on their starMeterCurrentWeekRank\nASC: Lower popularity score means that the name is more popular, so the most popular names will be first",
        "name": "POPULARITY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AdvancedNameSearchSortBy",
    "possibleTypes": []
  },
  "AdvancedTitleSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AdvancedTitleSearchEdge"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "facetField",
            "nullable": false,
            "type": "TitleFacetField"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "facet",
        "nullable": true,
        "type": "SearchFacet"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdvancedTitleSearchConnection",
    "possibleTypes": []
  },
  "AdvancedTitleSearchConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the words in alternate versions",
        "list": false,
        "name": "alternateVersionMatchingConstraint",
        "nullable": true,
        "type": "AlternateVersionMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on awards they have been nominated for and/or won.\nUse query `searchMetadata.advancedSearchAwardOptions` to fetch a curated list of options to use for this constraint.",
        "list": false,
        "name": "awardConstraint",
        "nullable": true,
        "type": "AwardSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the certificate ratings they are assigned",
        "list": false,
        "name": "certificateConstraint",
        "nullable": true,
        "type": "CertificateSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "This constraint is deprecated in favor of the titleCreditsConstraint.\n\nMatch titles based on the names of their characters.",
        "list": false,
        "name": "characterConstraint",
        "nullable": true,
        "type": "CharacterSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the color info",
        "list": false,
        "name": "colorationConstraint",
        "nullable": true,
        "type": "ColorationSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the words in crazy credits",
        "list": false,
        "name": "crazyCreditMatchingConstraint",
        "nullable": true,
        "type": "CrazyCreditMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the company",
        "list": false,
        "name": "creditedCompanyConstraint",
        "nullable": true,
        "type": "CreditedCompanySearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "This constraint is deprecated in favor of the titleCreditsConstraint.\n\nMatch titles based on cast/crew names",
        "list": false,
        "name": "creditedNameConstraint",
        "nullable": true,
        "type": "CreditedNameConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their current production status stage.\n\nThrows UNAUTHENTICATED if not logged in\nThrows FORBIDDEN if customer w/o any IMDbPro subscription",
        "list": false,
        "name": "currentProductionStatusStageConstraint",
        "nullable": true,
        "type": "CurrentProductionStatusStageConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on episode data",
        "list": false,
        "name": "episodicConstraint",
        "nullable": true,
        "type": "EpisodicSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental experimental field, match titles based on title box office earnings",
        "list": false,
        "name": "experimental_boxOfficeEarningsConstraint",
        "nullable": true,
        "type": "Experimental_BoxOfficeEarningsSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental experimental field, match titles based on title occupation credits",
        "list": false,
        "name": "experimental_occupationCreditConstraint",
        "nullable": true,
        "type": "Experimental_OccupationCreditSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental experimental field, match titles based profession catagories",
        "list": false,
        "name": "experimental_professionCatagoryConstraint",
        "nullable": true,
        "type": "Experimental_ProfessionCatagorySearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their explicit content classification",
        "list": false,
        "name": "explicitContentConstraint",
        "nullable": true,
        "type": "ExplicitContentSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on filming location",
        "list": false,
        "name": "filmingLocationConstraint",
        "nullable": true,
        "type": "FilmingLocationSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their genre",
        "list": false,
        "name": "genreConstraint",
        "nullable": true,
        "type": "GenreSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the words in goofs",
        "list": false,
        "name": "goofMatchingConstraint",
        "nullable": true,
        "type": "GoofMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their availability in theaters",
        "list": false,
        "name": "inTheatersConstraint",
        "nullable": true,
        "type": "InTheatersSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their interests",
        "list": false,
        "name": "interestConstraint",
        "nullable": true,
        "type": "InterestSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on keywords",
        "list": false,
        "name": "keywordConstraint",
        "nullable": true,
        "type": "KeywordSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their language",
        "list": false,
        "name": "languageConstraint",
        "nullable": true,
        "type": "LanguageSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their presence in lists.\n\nIf any list specified in this constraint is not a list of Titles then\n`GRAPHQL_VALIDATION_FAILED` will be thrown.\n\nSpecifying lists that contain in aggregate a large number of Titles may\ntrigger an error due to query term limits imposed by the implementation. Note\nthat this term count limit is for the overall query, not just this constraint.",
        "list": false,
        "name": "listConstraint",
        "nullable": true,
        "type": "ListSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on rating given by the requesting user",
        "list": false,
        "name": "myRatingConstraint",
        "nullable": true,
        "type": "MyRatingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their country of origin",
        "list": false,
        "name": "originCountryConstraint",
        "nullable": true,
        "type": "OriginCountrySearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the words in plot summary and outline, or plot author",
        "list": false,
        "name": "plotMatchingConstraint",
        "nullable": true,
        "type": "PlotMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the words in quotes",
        "list": false,
        "name": "quoteMatchingConstraint",
        "nullable": true,
        "type": "TitleQuoteMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on ranked list type",
        "list": false,
        "name": "rankedTitleListConstraint",
        "nullable": true,
        "type": "RankedTitleListSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on when they were released",
        "list": false,
        "name": "releaseDateConstraint",
        "nullable": true,
        "type": "ReleaseDateSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their runtime",
        "list": false,
        "name": "runtimeConstraint",
        "nullable": true,
        "type": "RuntimeSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on ratings given by a single user",
        "list": false,
        "name": "singleUserRatingConstraint",
        "nullable": true,
        "type": "SingleUserRatingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the sound mix",
        "list": false,
        "name": "soundMixConstraint",
        "nullable": true,
        "type": "SoundMixSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the words in soundtracks",
        "list": false,
        "name": "soundtrackMatchingConstraint",
        "nullable": true,
        "type": "SoundtrackMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their credits.",
        "list": false,
        "name": "titleCreditsConstraint",
        "nullable": true,
        "type": "TitleCreditsConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "This constraint is deprecated in favor of the rankedTitleListConstraint.\n\nMatch titles based on meter ranking",
        "list": false,
        "name": "titleMeterConstraint",
        "nullable": true,
        "type": "TitleMeterSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their name (title text)",
        "list": false,
        "name": "titleTextConstraint",
        "nullable": true,
        "type": "TitleTextSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their type (tv, movie, etc.)",
        "list": false,
        "name": "titleTypeConstraint",
        "nullable": true,
        "type": "TitleTypeSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the words in trivia",
        "list": false,
        "name": "triviaMatchingConstraint",
        "nullable": true,
        "type": "TitleTriviaMatchingSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their user ratings",
        "list": false,
        "name": "userRatingsConstraint",
        "nullable": true,
        "type": "UserRatingsSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their available watch options",
        "list": false,
        "name": "watchOptionsConstraint",
        "nullable": true,
        "type": "WatchOptionsSearchConstraint"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the data for the title (locations, trivia, crazyCredits, etc. ) ",
        "list": false,
        "name": "withTitleDataConstraint",
        "nullable": true,
        "type": "WithTitleDataSearchConstraint"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AdvancedTitleSearchConstraints",
    "possibleTypes": []
  },
  "AdvancedTitleSearchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AdvancedTitleSearchResult"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdvancedTitleSearchEdge",
    "possibleTypes": []
  },
  "AdvancedTitleSearchResult": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AdvancedTitleSearchResult",
    "possibleTypes": []
  },
  "AdvancedTitleSearchSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "sortBy",
        "nullable": false,
        "type": "AdvancedTitleSearchSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "sortOrder",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AdvancedTitleSearchSort",
    "possibleTypes": []
  },
  "AdvancedTitleSearchSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Gross revenue pulled in via box-office in Domestic market for entire lifetime of title.\nDomestic refers to North America (U.S., Canada, and Puerto Rico)\nASC: Lower numbers means the title has pulled in less box-office revenue, so poorer performing titles will be first.",
        "name": "BOX_OFFICE_GROSS_DOMESTIC"
      },
      {
        "description": "Overall Metascore based on critic reviews. Titles without a metascore are\nplaced at the end when using ASC sort order.\nASC: Lower Metacritic score means the title is rated more poorly, so titles with worse scores will be first.",
        "name": "METACRITIC_SCORE"
      },
      {
        "description": "Star Rating given by the requesting user.\nASC: Lower star rating means the title the user rated the title more poorly, so most disliked titles will be first.",
        "name": "MY_RATING"
      },
      {
        "description": "Date when customer rated a title.\nASC: Earlier (older) ratings will be first.",
        "name": "MY_RATING_DATE"
      },
      {
        "description": "TitleMeterType.TITLE_METER (aka Pro MOVIEMeter). Score given to non-episodic title types.\nASC: Lower popularity score means that the title is more popular, so the most popular titles will be first.",
        "name": "POPULARITY"
      },
      {
        "description": "Sort results based on specified ranking algorithm.  For the advancedTitleSearch query, exactly one ranked title list\nconstraint must be specified for using this sort option.\nASC: Higher ranks will be first.",
        "name": "RANKING"
      },
      {
        "description": "Earliest wide release date of a title. Titles without a release date are\nplaced at the end when using ASC sort order.\nASC: Earlier (older) released title will be first.",
        "name": "RELEASE_DATE"
      },
      {
        "description": "The length of the title in terms of runtime.\nASC: Lower runtime means the title is shorter, so shortest titles will be first.",
        "name": "RUNTIME"
      },
      {
        "description": "Star Rating given by the specified user in the SpecifiedUserRatingSearchConstraint.\nThrows BAD_USER_INPUT if the SpecifiedUserRatingSearchConstraint is not specified.\nASC: Lower star rating means the title the user rated the title more poorly, so most disliked titles will be first.",
        "name": "SINGLE_USER_RATING"
      },
      {
        "description": "Date when the specified user rated a title.\nThrows BAD_USER_INPUT if the SpecifiedUserRatingSearchConstraint is not specified.\nASC: Earlier (older) ratings will be first.",
        "name": "SINGLE_USER_RATING_DATE"
      },
      {
        "description": "Alphabetical sorting based on regional title text as determined by user language preferences.\nLanguage preference is determined by x-imdb-user-country and x-imdb-user-language headers.\nOnly supports the languages/regions we support for localized search. Defaults to original title otherwise.\nASC: Lower numbers and letters near the top of the alphabet will be returned first.",
        "name": "TITLE_REGIONAL"
      },
      {
        "description": "Weighted IMDb Star Rating as determined by users\nNote: IMDb maintains a threshold to a minimum number of ratings before it is considered.\nASC: Lower star rating means the title is rated more poorly, so titles with worse ratings will be first.",
        "name": "USER_RATING"
      },
      {
        "description": "Count of ratings given by users\nNote: IMDb maintains a threshold to a minimum number of ratings before it is considered.\nASC: Lower count of ratings means the title has been rated a fewer number of\ntimes, so titles with least ratings will be first.",
        "name": "USER_RATING_COUNT"
      },
      {
        "description": "The recognized year of the title. Typically, the release year, but guidelines are here:\nhttps://help.imdb.com/article/contribution/titles/title-formatting/G56U5ERK7YY47CQB\nASC: Earlier (older) titles will be first.",
        "name": "YEAR"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AdvancedTitleSearchSortBy",
    "possibleTypes": []
  },
  "Age": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "AGE_18_29"
      },
      {
        "description": null,
        "name": "AGE_30_44"
      },
      {
        "description": null,
        "name": "AGE_45_PLUS"
      },
      {
        "description": null,
        "name": "AGE_UNDER_18"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "Age",
    "possibleTypes": []
  },
  "AgeDetails": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Age displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNameAgeDetailsProperty"
      },
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Age display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Number which represents person's age",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AgeDetails",
    "possibleTypes": []
  },
  "AgePlayingRange": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "from",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "to",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AgePlayingRange",
    "possibleTypes": []
  },
  "Agency": {
    "args": [],
    "description": "An agency that represents a name",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The employees at this company who specifically represent a person.\n\nA name can be represented by 0, 1, or many people at a specific company.",
        "kind": "",
        "list": true,
        "name": "agents",
        "nullable": true,
        "type": "Agent"
      },
      {
        "args": [],
        "description": "The company representing a name",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Agency",
    "possibleTypes": []
  },
  "Agent": {
    "args": [],
    "description": "An employee of a company who represents a name in some capacity",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "branch",
        "nullable": true,
        "type": "CompanyBranch"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "employeeContact",
        "nullable": true,
        "type": "CompanyContactDetails"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Whether or not this person is the primary representative.\n\nEach representation type and company combination can have one point of contact\nbut is not guaranteed to have one, even if there is only one associated representative.\n\nFor example, if a person has multiple Talent Agents at CAA, this being\ntrue would indicate the associated name is the person's main Talent Agent\nat CAA",
        "kind": "",
        "list": false,
        "name": "isPrimaryAgent",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "jobTitle",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "occupation",
        "nullable": true,
        "type": "OccupationValue"
      },
      {
        "args": [],
        "description": "The type of relationship this representation has with their client",
        "kind": "",
        "list": false,
        "name": "relationshipType",
        "nullable": false,
        "type": "RepresentationRelationshipType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Agent",
    "possibleTypes": []
  },
  "AggregateRatingsBreakdown": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "{userCategory: IMDB_USERS}",
            "description": "",
            "kind": "DemographicFilter",
            "list": false,
            "name": "demographicFilter",
            "nullable": true,
            "type": "DemographicFilter"
          }
        ],
        "description": "Default value for demographicFilter",
        "kind": "",
        "list": false,
        "name": "histogram",
        "nullable": true,
        "type": "Histogram"
      },
      {
        "args": [],
        "description": "Whether the aggregate rating breakdown info display should be hidden by default",
        "kind": "",
        "list": false,
        "name": "isCollapsed",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Country is set by detection during registration or the user, the latter taking precedence.\nRatingsSummaryByCountry will vend only the top N country summary ordered specifically by number of ratings.\nWe will only return countries with a voting count and rating data, countries with no votes will be filtered\nout. If there is no limit we will return all country rating data available for a title.",
        "kind": "",
        "list": true,
        "name": "ratingsSummaryByCountry",
        "nullable": true,
        "type": "RatingsSummaryByCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "ratingsSummaryByDemographics",
        "nullable": true,
        "type": "DemographicRatings"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AggregateRatingsBreakdown",
    "possibleTypes": []
  },
  "Aka": {
    "args": [],
    "description": "Aka details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Other attributes about this aka",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "If applicable, the country where this was the title text",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "Aka as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleAkaProperty"
      },
      {
        "args": [],
        "description": "The language of this title text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The alternative title text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Aka",
    "possibleTypes": []
  },
  "AkaConnection": {
    "args": [],
    "description": "Pagination for AKA types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of AKAs",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AkaEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AkaConnection",
    "possibleTypes": []
  },
  "AkaEdge": {
    "args": [],
    "description": "Page of Akas",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A AKA node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Aka"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: AKA 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AkaEdge",
    "possibleTypes": []
  },
  "AkaFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Filter the AKAs to a list of 1 AKA per region and language",
        "name": "DISPLAY_TITLES_ONLY"
      },
      {
        "description": "Exclude the aka if it's the same as the primary title text",
        "name": "EXCLUDE_IF_SAME_AS_PRIMARY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AkaFilter",
    "possibleTypes": []
  },
  "AkaSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "AkaSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AkaSort",
    "possibleTypes": []
  },
  "AkaSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "COUNTRY"
      },
      {
        "description": null,
        "name": "RELEVANCE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AkaSortBy",
    "possibleTypes": []
  },
  "AlexaQuestion": {
    "args": [],
    "description": "An Alexa question.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The answer",
        "kind": "",
        "list": false,
        "name": "answer",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "An id representing the attribute that the question/answer concerns (e.g.\n'height'). Unique within a group of questions for an entity",
        "kind": "",
        "list": false,
        "name": "attributeId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The question",
        "kind": "",
        "list": false,
        "name": "question",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AlexaQuestion",
    "possibleTypes": []
  },
  "AlexaQuestionConnection": {
    "args": [],
    "description": "Pagination for Alexa questions which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Alexa questions.",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AlexaQuestionEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AlexaQuestionConnection",
    "possibleTypes": []
  },
  "AlexaQuestionEdge": {
    "args": [],
    "description": "Page of Alexa questions.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A Alexa question node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AlexaQuestion"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AlexaQuestionEdge",
    "possibleTypes": []
  },
  "AlternateVersion": {
    "args": [],
    "description": "Alternate version details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Alternate version as displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": false,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "The alternate version text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AlternateVersion",
    "possibleTypes": []
  },
  "AlternateVersionConnection": {
    "args": [],
    "description": "Pagination for alternate version types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of alternate versions",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AlternateVersionEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AlternateVersionConnection",
    "possibleTypes": []
  },
  "AlternateVersionEdge": {
    "args": [],
    "description": "Page of alternate versions",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An alternate version node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AlternateVersion"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: AlternateVersion 4 out of 46",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AlternateVersionEdge",
    "possibleTypes": []
  },
  "AlternateVersionMatchingSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of alternate version 'car chase' OR 'excessive', PLUS\nthe title must contain 'omits nudity', specify anyAlternateTextTerms: ['car chase', 'excessive'] plus\nallAlternateTextTerms: ['omits nudity']. Note that this is term match rather than\nphrase match. 'omits nudity' would match titles that contain 'omits the nudity'; 'chase car' would\nmatch titles that contain 'car chase'.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these search terms in at least one of its alternate versions.",
        "list": true,
        "name": "allAlternateVersionTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these search terms in at least one of its alternate versions.",
        "list": true,
        "name": "anyAlternateVersionTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AlternateVersionMatchingSearchConstraint",
    "possibleTypes": []
  },
  "AmazonMusicProduct": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The Amazon Standard Identification Number for the product",
        "kind": "",
        "list": false,
        "name": "amazonId",
        "nullable": false,
        "type": "AmazonStandardId"
      },
      {
        "args": [],
        "description": "Artist data for the product",
        "kind": "",
        "list": true,
        "name": "artists",
        "nullable": true,
        "type": "AmazonMusicProductArtist"
      },
      {
        "args": [],
        "description": "The format of the product being offered, e.g. CD",
        "kind": "",
        "list": false,
        "name": "format",
        "nullable": false,
        "type": "AmazonMusicProductFormat"
      },
      {
        "args": [],
        "description": "Image for the product",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [],
        "description": "The product title",
        "kind": "",
        "list": false,
        "name": "productTitle",
        "nullable": false,
        "type": "AmazonMusicProductTitle"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AmazonMusicProduct",
    "possibleTypes": []
  },
  "AmazonMusicProductArtist": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name of the artist",
        "kind": "",
        "list": false,
        "name": "artistName",
        "nullable": false,
        "type": "AmazonMusicProductArtistName"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AmazonMusicProductArtist",
    "possibleTypes": []
  },
  "AmazonMusicProductArtistName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The text for format",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AmazonMusicProductArtistName",
    "possibleTypes": []
  },
  "AmazonMusicProductFormat": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The text for format",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AmazonMusicProductFormat",
    "possibleTypes": []
  },
  "AmazonMusicProductTitle": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The product title",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AmazonMusicProductTitle",
    "possibleTypes": []
  },
  "AmazonStandardId": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Amazon Standard Identification Number",
        "kind": "",
        "list": false,
        "name": "asin",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Amazon marketplace identifier",
        "kind": "",
        "list": false,
        "name": "obfuscatedMarketplaceId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Region of the external identifier e.g. US",
        "kind": "",
        "list": false,
        "name": "region",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AmazonStandardId",
    "possibleTypes": []
  },
  "AnswerItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "AnswerItem",
    "possibleTypes": [
      "Image",
      "Name",
      "Title"
    ]
  },
  "AppAdsInfoOutput": {
    "args": [],
    "description": "Contains the eligibility status for apps to serve 3p ads and configuration map for slots on each mobile app page.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A map using ad layout types as keys containing a list of slots and their information as values.",
        "kind": "",
        "list": true,
        "name": "adLayoutSlotConfig",
        "nullable": false,
        "type": "AdLayoutConfiguration"
      },
      {
        "args": [],
        "description": "Represents whether the app is currently eligible to request and serve 3p ads\nbased on user's geo and the enablement status of the feature.\nA value of true indicates the apps can request 3p ads and a value of false indicates they should not.",
        "kind": "",
        "list": false,
        "name": "thirdPartyAdsEligibility",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AppAdsInfoOutput",
    "possibleTypes": []
  },
  "ApsConfiguration": {
    "args": [],
    "description": "The configuration of APS placements for an individual IMDb ad slot.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The APS slot object for the given IMDb ad slot.",
        "kind": "",
        "list": false,
        "name": "apsSlot",
        "nullable": false,
        "type": "ApsSlot"
      },
      {
        "args": [],
        "description": "The APS slot object for the given IMDb ad slot on ad refresh requests.\nA missing value indicates the client cannot make a 3p ad request for this slot on ad refresh.",
        "kind": "",
        "list": false,
        "name": "apsSlotAdRefresh",
        "nullable": true,
        "type": "ApsSlot"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ApsConfiguration",
    "possibleTypes": []
  },
  "ApsSlot": {
    "args": [],
    "description": "The APS slot level information needed for 3p ad requests.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The slot id generated by APS for the given ad slot.",
        "kind": "",
        "list": false,
        "name": "apsSlotId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The slot name associated with the slot id in APS for the given ad slot (e.g. app-title-inline20).",
        "kind": "",
        "list": false,
        "name": "apsSlotName",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ApsSlot",
    "possibleTypes": []
  },
  "ApsSlotParam": {
    "args": [],
    "description": "Key-value pair for APS slot parameters.\n(e.g. { key: \"ggProduct\", value: \"inScreen\" } used for APS adhesion ads)",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The key of the parameter",
        "kind": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The value of the parameter",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ApsSlotParam",
    "possibleTypes": []
  },
  "ArchivedOrUnarchivedFilter": {
    "args": [],
    "description": "Filter of Archived  or Unarchived credits",
    "enumValues": [
      {
        "description": null,
        "name": "ALL_CREDITS"
      },
      {
        "description": null,
        "name": "ARCHIVED_ONLY"
      },
      {
        "description": null,
        "name": "UNARCHIVED_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ArchivedOrUnarchivedFilter",
    "possibleTypes": []
  },
  "AspectRatio": {
    "args": [],
    "description": "An aspect ratio, along with any attributes. For example, the aspect ratio for the IMAX and IMAX3D versions might be\n2.35:1.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Aspect ratio",
        "kind": "",
        "list": false,
        "name": "aspectRatio",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Aspect ratio as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationProperty"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AspectRatio",
    "possibleTypes": []
  },
  "AspectRatios": {
    "args": [],
    "description": "Aspect ratios for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of aspect ratio items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "AspectRatio"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of aspect ratio items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AspectRatios",
    "possibleTypes": []
  },
  "AttachmentGroup": {
    "args": [],
    "description": "The broad groups of professions that attachments can be filtered on",
    "enumValues": [
      {
        "description": null,
        "name": "CAST"
      },
      {
        "description": null,
        "name": "CASTING_DIRECTORS"
      },
      {
        "description": null,
        "name": "FILMMAKERS"
      },
      {
        "description": null,
        "name": "WRITERS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AttachmentGroup",
    "possibleTypes": []
  },
  "AttachmentSearchConstraint": {
    "args": [],
    "description": "Filter search by broad groups of professions\n\nExample:\nAttachmentSearchConstraint: {\n    attachmentGroup: 'CASTING_DIRECTORS'\n}",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "attachmentGroup",
        "nullable": false,
        "type": "AttachmentGroup"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AttachmentSearchConstraint",
    "possibleTypes": []
  },
  "AuthProviderDeprecationMessage": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Deprecation reason message with a user's obfuscated email address.",
        "kind": "",
        "list": false,
        "name": "message",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "URLs for actions to take based on this deprecated provider (i.e. resetting password, learn more, etc.)",
        "kind": "",
        "list": true,
        "name": "urls",
        "nullable": false,
        "type": "AuthProviderDeprecationUrl"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AuthProviderDeprecationMessage",
    "possibleTypes": []
  },
  "AuthProviderDeprecationUrl": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The url label to create a hyperlink.",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "AuthProviderDeprecationUrlLabel"
      },
      {
        "args": [],
        "description": "The url value.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AuthProviderDeprecationUrl",
    "possibleTypes": []
  },
  "AuthProviderDeprecationUrlLabel": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AuthProviderDeprecationUrlLabel",
    "possibleTypes": []
  },
  "AuthProviderStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The auth provider type",
        "kind": "",
        "list": false,
        "name": "provider",
        "nullable": false,
        "type": "AuthProviderType"
      },
      {
        "args": [],
        "description": "Link if the provider is not linked.\nNot provided if provider is already linked.",
        "kind": "",
        "list": false,
        "name": "providerLinkingURL",
        "nullable": true,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AuthProviderStatus",
    "possibleTypes": []
  },
  "AuthProviderType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "For LWA login",
        "name": "AMAZON"
      },
      {
        "description": "For AAP Login",
        "name": "AMAZON_AAP"
      },
      {
        "description": "For Amazon login with email gating association handle",
        "name": "AMAZON_EMAIL_GATING"
      },
      {
        "description": null,
        "name": "APPLE"
      },
      {
        "description": null,
        "name": "GOOGLE"
      },
      {
        "description": null,
        "name": "IMDB"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AuthProviderType",
    "possibleTypes": []
  },
  "AwardCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardCategory",
    "possibleTypes": []
  },
  "AwardCompany": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The associated company",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "The award company displayable property, e.g. '[link=co0274041] (production company/broadcaster)'",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableAwardedEntity"
      },
      {
        "args": [],
        "description": "Note associated with the company",
        "kind": "",
        "list": false,
        "name": "note",
        "nullable": true,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardCompany",
    "possibleTypes": []
  },
  "AwardDetails": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Nominations for an award grouped by its category",
        "kind": "",
        "list": false,
        "name": "awardNominationCategories",
        "nullable": true,
        "type": "AwardNominationsWithCategoryConnection"
      },
      {
        "args": [],
        "description": "Edition of this event (e.g. The Golden Globes 2013) for which this award nomination occurred.",
        "kind": "",
        "list": false,
        "name": "eventEdition",
        "nullable": false,
        "type": "EventEdition"
      },
      {
        "args": [],
        "description": "Award Id",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Award name",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardDetails",
    "possibleTypes": []
  },
  "AwardDetailsConnection": {
    "args": [],
    "description": "Pagination for AwardDetails types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of award details",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AwardDetailsEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardDetailsConnection",
    "possibleTypes": []
  },
  "AwardDetailsEdge": {
    "args": [],
    "description": "Page of award details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An AwardDetails node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AwardDetails"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: AwardDetails 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardDetailsEdge",
    "possibleTypes": []
  },
  "AwardEventNominationSearchInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Event Id associated with an award.\nFor example, specify `ev0000003` to match titles that have been nominated for an Oscar",
        "list": false,
        "name": "eventId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Search-specific identifier for an award category associated with the event, limited options available.\nIf not specified, titles that have been nominated for any award from the specified event will be matched.\nFetch a curated list of award events with category ids via query `searchMetadata.advancedSearchAwardOptions`\nAn invalid award category id will cause an error. For more information about what options are available,\nsee https://w.amazon.com/bin/view/IMDb/GraphQL/Search/ClientUsage/#HAwardConstraintCategories",
        "list": false,
        "name": "searchAwardCategoryId",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optionally specify whether a title can only be matched if it was, or was not, selected as a winner of an award.\nIf omitted, a title will be matched if it was nominated for the award, regardless of whether it won or not.",
        "list": false,
        "name": "winnerFilter",
        "nullable": true,
        "type": "AwardWinnerSearchFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AwardEventNominationSearchInput",
    "possibleTypes": []
  },
  "AwardName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The award name displayable property, e.g. '[link=nm0745074] (unit production manager) (plaque)'",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableAwardedEntity"
      },
      {
        "args": [],
        "description": "The associated name",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "Note associated with the name",
        "kind": "",
        "list": false,
        "name": "note",
        "nullable": true,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardName",
    "possibleTypes": []
  },
  "AwardNomination": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Details about the award, such as the name and year",
        "kind": "",
        "list": false,
        "name": "award",
        "nullable": false,
        "type": "AwardDetails"
      },
      {
        "args": [],
        "description": "Title(s) and/or name(s) the award is for",
        "kind": "",
        "list": false,
        "name": "awardedEntities",
        "nullable": false,
        "type": "AwardedEntities"
      },
      {
        "args": [],
        "description": "The category in which the award was given. Example: Best Motion Picture of the Year.",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "AwardCategory"
      },
      {
        "args": [],
        "description": "Optional specific episode(s) for which the nomination is associated with",
        "kind": "",
        "list": true,
        "name": "forEpisodes",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Optional song title(s) for which the nomination is associated with",
        "kind": "",
        "list": true,
        "name": "forSongTitles",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Award Nomination ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Did the title/name win this award",
        "kind": "",
        "list": false,
        "name": "isWinner",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Additional notes associated with the award.",
        "kind": "",
        "list": false,
        "name": "notes",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "Optional date and time when the award win was officially announced.",
        "kind": "",
        "list": false,
        "name": "winAnnouncementDate",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "The ranking of this nomination, when applicable.",
        "kind": "",
        "list": false,
        "name": "winningRank",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardNomination",
    "possibleTypes": []
  },
  "AwardNominationCategoriesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for/out given nomination award categories",
        "list": false,
        "name": "categories",
        "nullable": true,
        "type": "NominationCategoriesFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AwardNominationCategoriesFilter",
    "possibleTypes": []
  },
  "AwardNominationConnection": {
    "args": [],
    "description": "Pagination for award types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of award nominations",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AwardNominationEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardNominationConnection",
    "possibleTypes": []
  },
  "AwardNominationEdge": {
    "args": [],
    "description": "Page of awards",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An award nomination node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AwardNomination"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Award 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardNominationEdge",
    "possibleTypes": []
  },
  "AwardNominationsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter awards by award id",
        "list": true,
        "name": "awards",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter awards by event id",
        "list": true,
        "name": "events",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter nominations on win status",
        "list": false,
        "name": "wins",
        "nullable": true,
        "type": "WinsFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AwardNominationsFilter",
    "possibleTypes": []
  },
  "AwardNominationsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "AwardNominationsSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AwardNominationsSort",
    "possibleTypes": []
  },
  "AwardNominationsSortBy": {
    "args": [],
    "description": "Default sort is done by sorting nomination id",
    "enumValues": [
      {
        "description": "Sorts by prestigious awards first, then reverse chronological by year",
        "name": "PRESTIGIOUS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AwardNominationsSortBy",
    "possibleTypes": []
  },
  "AwardNominationsWithCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AwardNominationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AwardNominationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AwardNominationsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "AwardNominationsSort"
          }
        ],
        "description": "Nominations belong to the category",
        "kind": "",
        "list": false,
        "name": "awardNominations",
        "nullable": true,
        "type": "AwardNominationConnection"
      },
      {
        "args": [],
        "description": "The category of the nomination e.g. 'Best Picture'\nCategory can be null because we have nominations without category, those\nnominations will be listed under the category 'null'",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "AwardCategory"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardNominationsWithCategory",
    "possibleTypes": []
  },
  "AwardNominationsWithCategoryConnection": {
    "args": [],
    "description": "Pagination for AwardNominationsWithCategory types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of awardNominations with category",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "AwardNominationsWithCategoryEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardNominationsWithCategoryConnection",
    "possibleTypes": []
  },
  "AwardNominationsWithCategoryEdge": {
    "args": [],
    "description": "Page of awardNominations with category",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An AwardNominationsWithCategory node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AwardNominationsWithCategory"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: AwardNominationsWithCategory 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardNominationsWithCategoryEdge",
    "possibleTypes": []
  },
  "AwardSearchConstraint": {
    "args": [],
    "description": "Constrain title search results based on the awards they have been nominated for and/or won.\nAny combination of `any`, `all`, and `exclude` inputs can be specified.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title must match ALL of the specified award event nominations.",
        "list": true,
        "name": "allEventNominations",
        "nullable": true,
        "type": "AwardEventNominationSearchInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title must match AT LEAST ONE of the specified award event nominations.",
        "list": true,
        "name": "anyEventNominations",
        "nullable": true,
        "type": "AwardEventNominationSearchInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title must match NONE of the specified award event nominations.\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeEventNominations",
        "nullable": true,
        "type": "AwardEventNominationSearchInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental experimental field, constrain to awards in this date range",
        "list": false,
        "name": "experimental_awardDateRange",
        "nullable": true,
        "type": "DateRange"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental experimental field, constrain to any titles that have a number of award wins in this range",
        "list": false,
        "name": "experimental_numAwardsRange",
        "nullable": true,
        "type": "IntRangeInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental experimental field, constrain to any titles that have a number of award nominations in this range",
        "list": false,
        "name": "experimental_numNominationsRange",
        "nullable": true,
        "type": "IntRangeInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AwardSearchConstraint",
    "possibleTypes": []
  },
  "AwardTitle": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The award title displayable property, e.g. '[link=tt3513498] (as Queen Watevra Wa'Nabi)'",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableAwardedEntity"
      },
      {
        "args": [],
        "description": "Note associated with the title",
        "kind": "",
        "list": false,
        "name": "note",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The associated title",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardTitle",
    "possibleTypes": []
  },
  "AwardWinnerSearchFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "NON_WINNER_ONLY"
      },
      {
        "description": null,
        "name": "WINNER_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "AwardWinnerSearchFilter",
    "possibleTypes": []
  },
  "AwardedCompanies": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The company/companies that this nomination is primarily form, multiple companies may share\nan award. Ordered by display preference",
        "kind": "",
        "list": true,
        "name": "awardCompanies",
        "nullable": true,
        "type": "AwardCompany"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardedCompanies",
    "possibleTypes": []
  },
  "AwardedEntities": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "AwardedEntities",
    "possibleTypes": [
      "AwardedNames",
      "AwardedTitles"
    ]
  },
  "AwardedNames": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name(s) that this nomination is primarily for. There is typically one name, but multiple names may share\nan award. Ordered by display preference.",
        "kind": "",
        "list": true,
        "name": "awardNames",
        "nullable": false,
        "type": "AwardName"
      },
      {
        "args": [],
        "description": "Optional companies associated with the primary name(s) for this award nomination",
        "kind": "",
        "list": true,
        "name": "secondaryAwardCompanies",
        "nullable": true,
        "type": "AwardCompany"
      },
      {
        "args": [],
        "description": "Optional titles associated with the primary name(s) for this award nomination",
        "kind": "",
        "list": true,
        "name": "secondaryAwardTitles",
        "nullable": true,
        "type": "AwardTitle"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardedNames",
    "possibleTypes": []
  },
  "AwardedTitles": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The title(s) that this nomination is primarily for. There is typically one title, but multiple titles may share\nan award. Ordered by display preference.",
        "kind": "",
        "list": true,
        "name": "awardTitles",
        "nullable": false,
        "type": "AwardTitle"
      },
      {
        "args": [],
        "description": "Optional companies associated with the primary name(s) for this award nomination",
        "kind": "",
        "list": true,
        "name": "secondaryAwardCompanies",
        "nullable": true,
        "type": "AwardCompany"
      },
      {
        "args": [],
        "description": "Optional names associated with the primary title(s) for this award nomination",
        "kind": "",
        "list": true,
        "name": "secondaryAwardNames",
        "nullable": true,
        "type": "AwardName"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardedTitles",
    "possibleTypes": []
  },
  "AwardsEvent": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "A list of all the event's editions sorted by year, followed by\ninstanceWithinYear, with the most recent first (e.g. 2023, 2022 edition 2,\n2022 edition 1, ...)",
        "kind": "",
        "list": false,
        "name": "editions",
        "nullable": true,
        "type": "EventEditionConnection"
      },
      {
        "args": [],
        "description": "Event ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The location of the event",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "DisplayableLocation"
      },
      {
        "args": [],
        "description": "Event name",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "List of trivia items related to the event with potential markdown links for movies/people",
        "kind": "",
        "list": true,
        "name": "trivia",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The urls for the event",
        "kind": "",
        "list": true,
        "name": "urls",
        "nullable": true,
        "type": "EventUrl"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "AwardsEvent",
    "possibleTypes": []
  },
  "AwardsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out given Awards IDs",
        "list": true,
        "name": "excludeAwards",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for given Awards IDs",
        "list": true,
        "name": "includeAwards",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "AwardsFilter",
    "possibleTypes": []
  },
  "Badge": {
    "args": [],
    "description": "Badge represents an achievement that can be earned by customers",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Localized description of the badge and awarding criteria",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Unique identifier for the badge",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "fileType",
            "nullable": false,
            "type": "ImageFileType"
          }
        ],
        "description": "Image data associated with the badge.\nIncludes `url` field for fetching the image asset from media storage.\nIncludes `fileType` field indicating the delivered image type.\nIncludes `accessibilityText` field which is intended to be used for screen reader accessibility.\nIncludes `height` and `width` fields for determining image size ratio.\nThrows UNSUPPORTED_IMAGE_TYPE if the service cannot provide the requested image type. Supports SVG initially.",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": false,
        "type": "MediaServiceImage"
      },
      {
        "args": [],
        "description": "Additional title information e.g. 2025 for an Oscars titled badge",
        "kind": "",
        "list": false,
        "name": "subtitle",
        "nullable": true,
        "type": "CommonLocalizedDisplayableConcept"
      },
      {
        "args": [],
        "description": "The localized display title of the badge",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "CommonLocalizedDisplayableConcept"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Badge",
    "possibleTypes": []
  },
  "BadgeConnection": {
    "args": [],
    "description": "Connection type for paginated badge results",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A list of edges containing badge nodes",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "BadgeEdge"
      },
      {
        "args": [],
        "description": "Information about pagination in a connection",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of badges for the user",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BadgeConnection",
    "possibleTypes": []
  },
  "BadgeEdge": {
    "args": [],
    "description": "An edge in a connection",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A cursor for use in pagination",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The earned badge node at the end of the edge",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Badge"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BadgeEdge",
    "possibleTypes": []
  },
  "BadgeGuideEntry": {
    "args": [],
    "description": "BadgeGuideEntry is a help page description for directions on how to achieve one or many badges.\ne.g. All Oscars badge awarding criteria is represented as the Oscars BadgeGuideEntry",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Localized description of the entry and awarding criteria",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "fileType",
            "nullable": false,
            "type": "ImageFileType"
          }
        ],
        "description": "Image data associated with the entry.\nIncludes `url` field for fetching the image asset from media storage.\nIncludes `fileType` field indicating the delivered image type.\nIncludes `accessibilityText` field which is intended to be used for screen reader accessibility.\nIncludes `height` and `width` fields for determining image size ratio.\nThrows UNSUPPORTED_IMAGE_TYPE if the service cannot provide the requested image type. Supports SVG initially.",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": false,
        "type": "MediaServiceImage"
      },
      {
        "args": [],
        "description": "Additional title information e.g. 20XX for the Oscars entry",
        "kind": "",
        "list": false,
        "name": "subtitle",
        "nullable": true,
        "type": "CommonLocalizedDisplayableConcept"
      },
      {
        "args": [],
        "description": "Localized display title of the entry. e.g. Oscars",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "CommonLocalizedDisplayableConcept"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BadgeGuideEntry",
    "possibleTypes": []
  },
  "BadgeGuideEntryConnection": {
    "args": [],
    "description": "Connection type for paginated badge guide entry results",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A list of edges containing badge guide entry nodes",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "BadgeGuideEntryEdge"
      },
      {
        "args": [],
        "description": "Information about pagination in a connection",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of badges for the user",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BadgeGuideEntryConnection",
    "possibleTypes": []
  },
  "BadgeGuideEntryEdge": {
    "args": [],
    "description": "An edge in a connection",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A cursor for use in pagination",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The badge guide entry node at the end of the edge",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "BadgeGuideEntry"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BadgeGuideEntryEdge",
    "possibleTypes": []
  },
  "Banner": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Link provided by the image source, if required by the license",
        "kind": "",
        "list": false,
        "name": "attributionUrl",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Original height of the banner image resource, in pixels",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "DEPRECATED: recommend using `url` instead - URL for the image resource",
        "kind": "",
        "list": false,
        "name": "imageUrl",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "URL for the image resource",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Original width of the banner image resource, in pixels",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Banner",
    "possibleTypes": []
  },
  "BiographySearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names whose biography was written by AT LEAST ONE of these authors",
        "list": true,
        "name": "anyBiographyAuthors",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names containing searchText in their biography",
        "list": false,
        "name": "searchText",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "BiographySearchConstraint",
    "possibleTypes": []
  },
  "BirthDateSearchConstraint": {
    "args": [],
    "description": "The constraints here are combined (AND), using both allows matching names born on a certain date in a certain range.\nexample: \nbirthDateConstraint: {\n    birthday: \"--09-02\",\n    birthDateRange: {\n        start:\"1996-01-01\",\n        end: \"2022-12-31\"\n    }\n}\nthe above constraint will match names born on September 2nd, between 1996 and 2022.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "birthDateRange",
        "nullable": true,
        "type": "DateRange"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "birthday",
        "nullable": true,
        "type": "MonthDay"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "BirthDateSearchConstraint",
    "possibleTypes": []
  },
  "BirthName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The birthName as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableBirthNameProperty"
      },
      {
        "args": [],
        "description": "The birthName as raw data",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BirthName",
    "possibleTypes": []
  },
  "BirthPlaceSearchConstraint": {
    "args": [],
    "description": "Matches names based on where they were born.\nThere is no fuzzy matching.\nFor example: 'Venice Italy' will be matched by 'Venice' and 'Italy' but not 'Venice Ita'",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "birthPlace",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "BirthPlaceSearchConstraint",
    "possibleTypes": []
  },
  "BlogLink": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BlogLink",
    "possibleTypes": []
  },
  "BooleanValidationConstraint": {
    "args": [],
    "description": "Represents a boolean validation constraint with associated error feedback that can be evaluated client-side.\nUsed to enforce true/false conditions in form elements such as whether input is required or optional.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The feedback to display to the customer related to the constraint.",
        "kind": "",
        "list": false,
        "name": "feedback",
        "nullable": false,
        "type": "ValidationFeedbackContent"
      },
      {
        "args": [],
        "description": "The required boolean value for validation",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BooleanValidationConstraint",
    "possibleTypes": []
  },
  "BoxOfficeArea": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Domestic refers to gross box-office revenue from North America (U.S., Canada, and Puerto Rico)",
        "name": "DOMESTIC"
      },
      {
        "description": "International covers the entire world excluding Domestic",
        "name": "INTERNATIONAL"
      },
      {
        "description": "Worldwide covers the entire world",
        "name": "WORLDWIDE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "BoxOfficeArea",
    "possibleTypes": []
  },
  "BoxOfficeAreaType": {
    "args": [],
    "description": "Displayable BoxOfficeArea type.\nSee sections 'Area Rollups and Special Areas' and 'Individual Areas' at\nhttps://developer.imdb.com/documentation/bulk-data-documentation/data-dictionary/box-office.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A non-localized field representing the BoxOfficeAreaType code, e.g. 'XDOM'.",
        "kind": "",
        "list": false,
        "name": "code",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "An Opaque unique Identifier for the BoxOfficeAreaType.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is written in.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayable BoxOfficeAreaType, e.g. 'Domestic'.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BoxOfficeAreaType",
    "possibleTypes": []
  },
  "BoxOfficeGross": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Money"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BoxOfficeGross",
    "possibleTypes": []
  },
  "BoxOfficeRelease": {
    "args": [],
    "description": "BoxOfficeRelease: a program of content designed to be consumed in a single\nsession that is exhibited in a specific Box Office Area in a continuous period of time.\nMost releases consist of a single film shown during a limited run in a cinema, but other cases refer to more than one title.\nFor example a double-bill (two full-length movies shown back-to-back with a single ticket)\nor the \"Oscar Shorts\" program (theatrically exhibited collection of multiple films back to back with a single ticket). ",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Titles in the release",
        "kind": "",
        "list": true,
        "name": "titles",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Number of weeks this release has been running",
        "kind": "",
        "list": false,
        "name": "weeksRunning",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BoxOfficeRelease",
    "possibleTypes": []
  },
  "BoxOfficeReleasesAreaFilter": {
    "args": [],
    "description": "Box Office Area Filter for box office results. Please provide either the Box Office Area or the Country, not both.\nThrows GRAPHQL_VALIDATION_FAILED if both boxOfficeArea and country code fields are not empty.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Box Office Area code: Box Office area codes for which the grosses are calculated.\nSee sections 'Area Rollups and Special Areas' and 'Individual Areas' at\nhttps://developer.imdb.com/documentation/bulk-data-documentation/data-dictionary/box-office.\nThrows GRAPHQL_VALIDATION_FAILED if an invalid box office area code is provided.",
        "list": false,
        "name": "boxOfficeArea",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Country code in ISO 3166 (IMDbLocaleConfig:region_codes.json)\nThis is a convenience option: will be mapped internally to the Box Office Area code of interest to users of this country.\nThrows GRAPHQL_VALIDATION_FAILED if an invalid country code is provided.",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "BoxOfficeReleasesAreaFilter",
    "possibleTypes": []
  },
  "BoxOfficeWeekendChart": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "entries",
        "nullable": false,
        "type": "ChartEntry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "weekendEndDate",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "weekendStartDate",
        "nullable": false,
        "type": "Date"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "BoxOfficeWeekendChart",
    "possibleTypes": []
  },
  "BusinessDomain": {
    "args": [],
    "description": "Domain type based on business",
    "enumValues": [
      {
        "description": null,
        "name": "CONSUMER"
      },
      {
        "description": null,
        "name": "PRO"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "BusinessDomain",
    "possibleTypes": []
  },
  "CallToAction": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "landingPagePro",
        "nullable": true,
        "type": "LinkCallToAction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "nameBanner",
        "nullable": true,
        "type": "MarkdownSlotCallToAction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "nameClaimPageForFree",
        "nullable": true,
        "type": "SectionCallToAction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "nameDiscoverMoreInsights",
        "nullable": true,
        "type": "LinkCallToAction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "nameImagesReels",
        "nullable": true,
        "type": "LinkCallToAction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "nameProUpsell",
        "nullable": true,
        "type": "MultiLinkCallToAction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "nameViewStarMeter",
        "nullable": true,
        "type": "LinkCallToAction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "navbarProFlyout",
        "nullable": true,
        "type": "ImageAndLinkCallToAction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ResultID",
            "list": false,
            "name": "resultOverride",
            "nullable": true,
            "type": "ResultID"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "titleProUpsell",
        "nullable": true,
        "type": "LinkCallToAction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CallToAction",
    "possibleTypes": []
  },
  "CallToActionContextInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional parameter specifying the const ID for the context.\nFor example, CTAs on name pages would provide the nconst, while CTAs on title pages would provide\nthe tconst. If all requested CTAs do not need a constId, then it could be omitted.",
        "list": false,
        "name": "constId",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional parameter to specify if the user is logged in.\nThis parameter is provided for browser cache to allow query to differ for logged in/logged out user.\nResponses for logged out user can be cached, while responses for logged in user can not.\nThe back-end graphlet ignores this input argument.",
        "list": false,
        "name": "isLoggedIn",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CallToActionContextInput",
    "possibleTypes": []
  },
  "CallToActionImage": {
    "args": [],
    "description": "Generic type for an image resource which has height, url, width, and optional caption for accessibility",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Image caption text",
        "kind": "",
        "list": false,
        "name": "caption",
        "nullable": true,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Original height of the image resource, in pixels",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "URL for the image resource",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Original width of the image resource, in pixels",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CallToActionImage",
    "possibleTypes": []
  },
  "CallToActionText": {
    "args": [],
    "description": "Generic type for a localized text which has an ID or token, associated display text, and the language of the display text",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The text ID or token",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language for the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CallToActionText",
    "possibleTypes": []
  },
  "Camera": {
    "args": [],
    "description": "A camera (or lens), along with any attributes. For example, a wide angle lens used for outdoor shots.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Camera",
        "kind": "",
        "list": false,
        "name": "camera",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Camera as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationProperty"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Camera",
    "possibleTypes": []
  },
  "Cameras": {
    "args": [],
    "description": "Cameras for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of camera items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "Camera"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of camera items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Cameras",
    "possibleTypes": []
  },
  "CanRate": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "isRatable",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CanRate",
    "possibleTypes": []
  },
  "Cast": {
    "args": [],
    "description": "Cast details",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "CreditAttribute"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Characters (e.g. 'Neo')",
        "kind": "",
        "list": true,
        "name": "characters",
        "nullable": true,
        "type": "Character"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodeCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "EpisodeCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodeCreditsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodeCreditsSort"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "episodeCredits",
        "nullable": true,
        "type": "EpisodeCastConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "A cast credit may have an optional position attribute indicating the order of\nappearance within the title\u2019s ending credits. This position can be null for\nsome or all of the title\u2019s credits. By default (see CreditConnection.orderBy),\nthe cast credit that has a value in their position field will be ordered first\n(by that number), then all other cast credits that have a null in their\nposition field will be ordered alphabetically.",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Cast",
    "possibleTypes": []
  },
  "CategorizedWatchOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Localized categoryName of the watch option category.",
        "kind": "",
        "list": false,
        "name": "categoryName",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Returns a list with the maximum number of watch options in this category.\nNO FILTERS, NO PAGINATION",
        "kind": "",
        "list": true,
        "name": "watchOptions",
        "nullable": false,
        "type": "WatchOption"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CategorizedWatchOptions",
    "possibleTypes": []
  },
  "CategorizedWatchOptionsList": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "categorizedWatchOptionsList",
        "nullable": false,
        "type": "CategorizedWatchOptions"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CategorizedWatchOptionsList",
    "possibleTypes": []
  },
  "Certificate": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Additional descriptive attributes about the rating",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": false,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "rating",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "ratingReason",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "ratingsBody",
        "nullable": true,
        "type": "RatingsBody"
      },
      {
        "args": [],
        "description": "The certificate id assigned by the ratings body",
        "kind": "",
        "list": false,
        "name": "ratingsBodyCertificateId",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Certificate",
    "possibleTypes": []
  },
  "CertificateSearchConstraint": {
    "args": [],
    "description": "Match titles that are assigned the specified certificates",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Specify certificates by their region and rating name.\nFor example: region 'US' and rating name 'R'.",
        "list": true,
        "name": "anyRegionCertificateRatings",
        "nullable": true,
        "type": "RegionCertificateRatingInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Titles with any of the specified certificates will not be matched.\n\nIf the same input is specified in the any and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeRegionCertificateRatings",
        "nullable": true,
        "type": "RegionCertificateRatingInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CertificateSearchConstraint",
    "possibleTypes": []
  },
  "CertificatesConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of certificates",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CertificatesEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CertificatesConnection",
    "possibleTypes": []
  },
  "CertificatesEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Certificate node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Certificate"
      },
      {
        "args": [],
        "description": "Position of the node in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CertificatesEdge",
    "possibleTypes": []
  },
  "CertificatesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out for specific country code e.g FR, CA",
        "list": true,
        "name": "excludeCountries",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific country code e.g FR, CA",
        "list": true,
        "name": "includeCountries",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "ratingsBody",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CertificatesFilter",
    "possibleTypes": []
  },
  "ChangeLoginSecurityRedirectURLInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Association handle of the login context i.e. imdb_us",
        "list": false,
        "name": "associationHandle",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Unique identifier for client request.\nFor web, 'Unique browser ID' i.e ubid context identifier, which in practice means an identifier for the domain+browser combination.",
        "list": false,
        "name": "clientContext",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional URL to return to post login & security change, otherwise defaults to main IMDb account settings page (/registration/accountsettings/)",
        "list": false,
        "name": "returnURL",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "'Login & Security' sub page to redirect to, if omitted redirects to the root 'Login & Security' page",
        "list": false,
        "name": "subPageType",
        "nullable": true,
        "type": "ChangeLoginSecuritySubPageType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ChangeLoginSecurityRedirectURLInput",
    "possibleTypes": []
  },
  "ChangeLoginSecurityRedirectURLOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Redirect URL for user login & security page or user instructions to access their login & security settings",
        "kind": "",
        "list": false,
        "name": "redirectURL",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ChangeLoginSecurityRedirectURLOutput",
    "possibleTypes": []
  },
  "ChangeLoginSecuritySubPageType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Change Email page",
        "name": "CHANGE_EMAIL"
      },
      {
        "description": "Change Password page",
        "name": "CHANGE_PASSWORD"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ChangeLoginSecuritySubPageType",
    "possibleTypes": []
  },
  "Character": {
    "args": [],
    "description": "Character details.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Opaque ID, suitable for caching this concept.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Character",
    "possibleTypes": []
  },
  "CharacterConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Character",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CharacterEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CharacterConnection",
    "possibleTypes": []
  },
  "CharacterEdge": {
    "args": [],
    "description": "Page of Character",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the Character",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Character"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CharacterEdge",
    "possibleTypes": []
  },
  "CharacterSearchConstraint": {
    "args": [],
    "description": "Example:\n1. if you want to match titles with character name ('Micky Mouse' OR 'Pluto')\nspecify anyCharacterName: ['Micky Mouse', 'Pluto'].\n\n2. if you want to match titles where name const ('nm0000138') played a character called ('Jordan')\nspecify characterSearchConstraint: { anyCharacterName: ['Jordan'], shouldLimitToCreditedNameIds: true } and\ncreditedNameConstraint: { anyNameIds: ['nm0000138'] }",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these character names.",
        "list": true,
        "name": "anyCharacterNames",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "If this is set to true when a CreditedNameConstraint anyNameIds, or allNameIds is specified, then a title match\nmust contain AT LEAST ONE of these character names, where AT LEAST ONE of the name ids\nis playing them.\n\nthe constraint will behave the same whether anyNameIds or allNameIds were used, meaning\ncharacterSearchConstraint: { anyCharacterName: ['Jordan'], shouldLimitToCreditedNameIds: true } and\ncreditedNameConstraint: { anyNameIds: ['nm1706767', 'nm0000138', 'nm0000190'] } will return the same results\nif anyNameIds was replaced with allNameIds, and specifying both allNameIds and anyNameIds will just combine the\nname ids that are matched against the specified characters.",
        "list": false,
        "name": "shouldLimitToCreditedNameIds",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CharacterSearchConstraint",
    "possibleTypes": []
  },
  "ChartEntry": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "weekendGross",
        "nullable": false,
        "type": "BoxOfficeGross"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ChartEntry",
    "possibleTypes": []
  },
  "ChartNameEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Current rank of the chart item",
        "kind": "",
        "list": false,
        "name": "currentRank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "If a previous rank exists, this is a set of fields comparing the current rank\nto the previous rank",
        "kind": "",
        "list": false,
        "name": "rankChange",
        "nullable": true,
        "type": "RankChange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ChartNameEdge",
    "possibleTypes": []
  },
  "ChartNameOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "chartType",
        "nullable": false,
        "type": "ChartNameType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ChartNameOptions",
    "possibleTypes": []
  },
  "ChartNameSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ChartNameEdge"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "facetField",
            "nullable": false,
            "type": "NameFacetField"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "facet",
        "nullable": true,
        "type": "SearchFacet"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ChartNameSearchConnection",
    "possibleTypes": []
  },
  "ChartNameType": {
    "args": [],
    "description": "Enum exposing all the available name chart types",
    "enumValues": [
      {
        "description": null,
        "name": "MOST_POPULAR_NAMES"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ChartNameType",
    "possibleTypes": []
  },
  "ChartTitleEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Current rank of the chart item",
        "kind": "",
        "list": false,
        "name": "currentRank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "If a previous rank exists, this is a set of fields comparing the current rank\nto the previous rank",
        "kind": "",
        "list": false,
        "name": "rankChange",
        "nullable": true,
        "type": "RankChange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ChartTitleEdge",
    "possibleTypes": []
  },
  "ChartTitleOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "chartType",
        "nullable": false,
        "type": "ChartTitleType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ChartTitleOptions",
    "possibleTypes": []
  },
  "ChartTitleSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ChartTitleEdge"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "facetField",
            "nullable": false,
            "type": "TitleFacetField"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "facet",
        "nullable": true,
        "type": "SearchFacet"
      },
      {
        "args": [],
        "description": "The number of titles in the filtered list that a customer has rated.\nCustomer Id is required for this field or an authentication error will be thrown.",
        "kind": "",
        "list": false,
        "name": "myRatedCount",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The percentage of titles in the filtered list that a customer has rated.  We round the percentage to the nearest\ninteger but we may change the precision depending on Product's requirement update.\nCustomer Id is required for this field or an authentication error will be thrown.",
        "kind": "",
        "list": false,
        "name": "myRatedPercentage",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ChartTitleSearchConnection",
    "possibleTypes": []
  },
  "ChartTitleType": {
    "args": [],
    "description": "Enum exposing all the available title chart types",
    "enumValues": [
      {
        "description": null,
        "name": "LOWEST_RATED_MOVIES"
      },
      {
        "description": null,
        "name": "MOST_POPULAR_MOVIES"
      },
      {
        "description": null,
        "name": "MOST_POPULAR_TV_SHOWS"
      },
      {
        "description": null,
        "name": "TOP_RATED_ENGLISH_MOVIES"
      },
      {
        "description": null,
        "name": "TOP_RATED_INDIAN_MOVIES"
      },
      {
        "description": null,
        "name": "TOP_RATED_MALAYALAM_MOVIES"
      },
      {
        "description": null,
        "name": "TOP_RATED_MOVIES"
      },
      {
        "description": null,
        "name": "TOP_RATED_TAMIL_MOVIES"
      },
      {
        "description": null,
        "name": "TOP_RATED_TELUGU_MOVIES"
      },
      {
        "description": null,
        "name": "TOP_RATED_TV_SHOWS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ChartTitleType",
    "possibleTypes": []
  },
  "CheckboxFieldConstraints": {
    "args": [],
    "description": "Defines standard form constraints for a checkbox type of input.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Specifies whether selecting the checkbox is required, i.e.:\n- If isRequired is true, the checkbox must be checked by the customer (e.g. a\nconfirmation dialog or \"I agree to the terms and conditions\").\n- If isRequired is false, the checkbox can be either checked or unchecked\n(e.g. a checkbox to confirm if a credit is uncredited/not listed in the end credits)",
        "kind": "",
        "list": false,
        "name": "isRequired",
        "nullable": true,
        "type": "BooleanValidationConstraint"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CheckboxFieldConstraints",
    "possibleTypes": []
  },
  "Cinema": {
    "args": [],
    "description": "Cinema type\nExtends external type.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Accessibility information for the cinema.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "accessibility",
        "nullable": true,
        "type": "CinemaAccessibility"
      },
      {
        "args": [],
        "description": "Contact details for the cinema.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "contactDetails",
        "nullable": true,
        "type": "CinemaContactDetails"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "location",
            "nullable": false,
            "type": "ShowtimesLocation"
          }
        ],
        "description": "Distance from the requested location to the cinema.\n'location.radiusInMeters' has no effect on the result of this query\n  \nErrors:\n- Throws `BAD_USER_INPUT` with symbol `location.postalCode` if the location is unknown.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "distanceToCinema",
        "nullable": true,
        "type": "DistanceToCinema"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Location information for the cinema.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "CinemaLocation"
      },
      {
        "args": [],
        "description": "Name of the cinema.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "CinemaName"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Cinema",
    "possibleTypes": []
  },
  "CinemaAccessibility": {
    "args": [],
    "description": "Accessibility information for a cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Indicates if the cinema provides hearing devices.",
        "kind": "",
        "list": false,
        "name": "audioAccessibility",
        "nullable": true,
        "type": "CinemaAudioAccessibility"
      },
      {
        "args": [],
        "description": "Indicates if the cinema has wheelchair access.",
        "kind": "",
        "list": false,
        "name": "wheelchairAccessibility",
        "nullable": true,
        "type": "CinemaWheelchairAccessibility"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CinemaAccessibility",
    "possibleTypes": []
  },
  "CinemaAudioAccessibility": {
    "args": [],
    "description": "Audio accessibility information for a cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Indicates if the cinema provides hearing devices.",
        "kind": "",
        "list": false,
        "name": "hasHearingDevices",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CinemaAudioAccessibility",
    "possibleTypes": []
  },
  "CinemaConnection": {
    "args": [],
    "description": "Connection type for a paginated cinema result.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Edges of CinemaConnection.",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CinemaEdge"
      },
      {
        "args": [],
        "description": "Pagination information.",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CinemaConnection",
    "possibleTypes": []
  },
  "CinemaContactDetails": {
    "args": [],
    "description": "Contact details for a cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Phone number for the cinema.\nA null `phoneNumber` value indicates that there is no phoneNumber available.",
        "kind": "",
        "list": false,
        "name": "phoneNumber",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CinemaContactDetails",
    "possibleTypes": []
  },
  "CinemaEdge": {
    "args": [],
    "description": "Edge type for a Cinema in a paginated result.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor for pagination.",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Cinema information.",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Cinema"
      },
      {
        "args": [],
        "description": "Position of this edge in the result set.",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CinemaEdge",
    "possibleTypes": []
  },
  "CinemaLocation": {
    "args": [],
    "description": "Location data of a cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for this cinema location.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the cinema location display text.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Displayable text for this cinema location.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CinemaLocation",
    "possibleTypes": []
  },
  "CinemaName": {
    "args": [],
    "description": "The name of a cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for this cinema name.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the cinema name display text.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Text indicating the name of this cinema.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CinemaName",
    "possibleTypes": []
  },
  "CinemaWheelchairAccessibility": {
    "args": [],
    "description": "Wheelchair accessibility information for a cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Indicates if the cinema has wheelchair access.",
        "kind": "",
        "list": false,
        "name": "hasWheelchairAccess",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CinemaWheelchairAccessibility",
    "possibleTypes": []
  },
  "ClaimedName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The requesting customer's claimed name",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The status of name claiming",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ClaimedNameStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ClaimedName",
    "possibleTypes": []
  },
  "ClaimedNameStatus": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Customer's name claiming is blocked (usually by customer service admins)",
        "name": "BLOCKED"
      },
      {
        "description": "Customer has claimed the name",
        "name": "CLAIMED"
      },
      {
        "description": "Customer has not requested to claim a name",
        "name": "NOT_REQUESTED"
      },
      {
        "description": "Customer's name claiming is pending manual approval",
        "name": "PENDING_APPROVAL"
      },
      {
        "description": "The new name page requested by customer is being created",
        "name": "PENDING_CREATION"
      },
      {
        "description": "Customer had claimed the name page before but not anymore",
        "name": "PREVIOUS_CLAIMED"
      },
      {
        "description": "Customer's name claiming is in an unknown status",
        "name": "UNKNOWN"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ClaimedNameStatus",
    "possibleTypes": []
  },
  "ClientSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "ClientSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ClientSort",
    "possibleTypes": []
  },
  "ClientSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort names alphabetically ASC: A-Z",
        "name": "NAME"
      },
      {
        "description": "Sort names based on their starMeterCurrentWeekRank\n\nASC: Lower popularity score means that the name is more popular,\nso the most popular names will be first",
        "name": "POPULARITY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ClientSortBy",
    "possibleTypes": []
  },
  "Coloration": {
    "args": [],
    "description": "A coloration, along with any attributes. For example, we could have a color picture that used technicolor, with black\nand white flashback scenes.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "An ID for this coloration, suitable for use in URLs. For example, `black_and_white` or `color`.",
        "kind": "",
        "list": false,
        "name": "conceptId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Coloration as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationProperty"
      },
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Coloration",
    "possibleTypes": []
  },
  "ColorationSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of colorations COLOR OR ACES AND NOT BLACK_AND_WHITE,\nspecify anyColorationTypes: [COLOR,ACES] plus excludeColorationTypes: [BLACK_AND_WHITE]",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these colorations",
        "list": true,
        "name": "anyColorationTypes",
        "nullable": true,
        "type": "ColorationType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain NONE of these colorations\n\nIf the same input is specified in the any and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeColorationTypes",
        "nullable": true,
        "type": "ColorationType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ColorationSearchConstraint",
    "possibleTypes": []
  },
  "ColorationType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ACES"
      },
      {
        "description": null,
        "name": "BLACK_AND_WHITE"
      },
      {
        "description": null,
        "name": "COLOR"
      },
      {
        "description": null,
        "name": "COLORIZED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ColorationType",
    "possibleTypes": []
  },
  "Colorations": {
    "args": [],
    "description": "Colorations for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of coloration items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "Coloration"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of coloration items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Colorations",
    "possibleTypes": []
  },
  "ComingSoonSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Field to sort by",
        "list": false,
        "name": "sortBy",
        "nullable": false,
        "type": "ComingSoonSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "ASC or DESC sorting order",
        "list": false,
        "name": "sortOrder",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ComingSoonSort",
    "possibleTypes": []
  },
  "ComingSoonSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Movie meter value",
        "name": "POPULARITY"
      },
      {
        "description": "Release Date for sorting purposes",
        "name": "RELEASE_DATE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ComingSoonSortBy",
    "possibleTypes": []
  },
  "ComingSoonType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Feature films",
        "name": "MOVIE"
      },
      {
        "description": "Series/miniseries with upcoming episodes and made-for-TV movies",
        "name": "TV"
      },
      {
        "description": "TV Episodes",
        "name": "TV_EPISODE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ComingSoonType",
    "possibleTypes": []
  },
  "CommonLocalizedDisplayableConcept": {
    "args": [],
    "description": "Implementation of the LocalizedDisplayableConcept interface. See LocalizedDisplayableConcept docs",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Type token",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CommonLocalizedDisplayableConcept",
    "possibleTypes": []
  },
  "Company": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The acronyms of a given company\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "acronyms",
        "nullable": true,
        "type": "CompanyAcronymConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Sort options. Defaults to COMPANY_ID ASC if omitted",
            "kind": "CompanyAffiliationSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "CompanyAffiliationSort"
          }
        ],
        "description": "The affiliations of a given company\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "affiliations",
        "nullable": true,
        "type": "CompanyAffiliationConnection"
      },
      {
        "args": [],
        "description": "Details of the company bio. Returns null if no bio available.\n\n---------------------\nGraphlet Details:\n- Name: managedCompany\n- CTI: IMDb/GraphQL/Managed Company\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "bio",
        "nullable": true,
        "type": "CompanyBio"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Details about the branches (generally the different offices) of this company.\nLarger companies like Disney have offices in multiple locations, each one\nwith its own staff, contact details, etc.\n\nNot all companies have branch information, and some companies only have one.\n\nWill return an empty set of edges if we have no branch information for the\ncompany.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "branches",
        "nullable": true,
        "type": "CompanyBranchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ClientSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ClientSort"
          }
        ],
        "description": "The names represented by this company in some capacity, like\nthe names this company provides PR or Legal services for.\n\nGenerally when a company represents a name there are employees\nat the company specifically associated with that representation\nbut not all companies have associated representatives.\n\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "clients",
        "nullable": true,
        "type": "CompanyClientConnection"
      },
      {
        "args": [],
        "description": "The localized text for the company.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "companyText",
        "nullable": true,
        "type": "CompanyText"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The types of a given company\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "companyTypes",
        "nullable": true,
        "type": "CompanyType"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "LocalizedDisplayableCountry"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "@experimental Experimental: DO NOT USE\n\nDetails about the branches (generally the different offices) of this company.\nLarger companies like Disney have offices in multiple locations, each one\nwith its own staff, contact details, etc.\n\nNot all companies have branch information, and some companies only have one.\n\nWill return an empty set of edges if we have no branch information for the\ncompany.\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "experimental_branches",
        "nullable": true,
        "type": "Experimental_CompanyBranchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ClientSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ClientSort"
          }
        ],
        "description": "@experimental Experimental: DO NOT USE\n\nThe names represented by this company in some capacity, like\nthe names this company provides PR or Legal services for.\n\nGenerally when a company represents a name there are employees\nat the company specifically associated with that representation\nbut not all companies have associated representatives.\n\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "experimental_clients",
        "nullable": true,
        "type": "Experimental_CompanyClientConnection"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Parameter to go around cache, expected to use cursor as a value",
            "kind": "String",
            "list": false,
            "name": "bust",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "CompanyImagesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "CompanyImagesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "images",
        "nullable": true,
        "type": "ImageConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "KeyStaffFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "KeyStaffFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "KeyStaffSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "KeyStaffSort"
          }
        ],
        "description": "Key staff for the company, ordered by StarMeter ranking (ASC) by default.\nDefaults to 10 results if first is omitted.\n\n---------------------\nGraphlet Details:\n- Name: managedCompany\n- CTI: IMDb/GraphQL/Managed Company\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "keyStaff",
        "nullable": true,
        "type": "CompanyKeyStaffConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Known for clients for this company, ordered by relevance.\nDefaults to 10 results if first is omitted.\n\n---------------------\nGraphlet Details:\n- Name: managedCompany\n- CTI: IMDb/GraphQL/Managed Company\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "knownForClients",
        "nullable": true,
        "type": "CompanyKnownForClientConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Known for titles for this company, ordered by relevance.\nDefaults to 10 results if first is omitted.\n\n---------------------\nGraphlet Details:\n- Name: managedCompany\n- CTI: IMDb/GraphQL/Managed Company\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "knownForTitles",
        "nullable": true,
        "type": "CompanyKnownForTitleConnection"
      },
      {
        "args": [],
        "description": "Data that company managers control for consumption by company manager and IMDb admins.\n\n---------------------\nGraphlet Details:\n- Name: managedCompany\n- CTI: IMDb/GraphQL/Managed Company\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "managedData",
        "nullable": true,
        "type": "ManagedCompanyData"
      },
      {
        "args": [
          {
            "defaultValue": "true",
            "description": "",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "CompanyMeter rank information\nRanking information beyond 5000 requires entitlement proving Pro subscription.\nUse useEntitlement = false to access non entitled version.\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: ranking\n- CTI: IMDb/GraphQL/ProRanking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "meterRank",
        "nullable": true,
        "type": "CompanyMeterRanking"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "CompanyMeterRankingHistoryInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "CompanyMeterRankingHistoryInput"
          }
        ],
        "description": "History of IMDbPro COMPANYmeter rankings of a company.\nRequires entitlement proving Pro subscription.\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: ranking\n- CTI: IMDb/GraphQL/ProRanking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "meterRankingHistory",
        "nullable": true,
        "type": "CompanyMeterRankingHistory"
      },
      {
        "args": [],
        "description": "The primary image for the company.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [],
        "description": "All occupations used by staff at this company. Returns null if the company has no staff.\nOccupations is a limited set of 10 possibilities (as of 2025) so there is no need for pagination.\n\n---------------------\nGraphlet Details:\n- Name: managedCompany\n- CTI: IMDb/GraphQL/Managed Company\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": true,
        "name": "staffOccupations",
        "nullable": true,
        "type": "CompanyEmployeeOccupation"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Company",
    "possibleTypes": []
  },
  "CompanyAcronym": {
    "args": [],
    "description": "An acronym of a company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Company acronym ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is written in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayable acronym , e.g. 'CAA' for Creative Artists Agency",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyAcronym",
    "possibleTypes": []
  },
  "CompanyAcronymConnection": {
    "args": [],
    "description": "Pagination for CompanyAcronym which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of CompanyAcronym",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyAcronymEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyAcronymConnection",
    "possibleTypes": []
  },
  "CompanyAcronymEdge": {
    "args": [],
    "description": "Page of CompanyAcronym",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CompanyAcronym"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CompanyAcronym 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyAcronymEdge",
    "possibleTypes": []
  },
  "CompanyAffiliation": {
    "args": [],
    "description": "The affiliated company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The company that is affiliated",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "Company affiliation ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is written in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayable affiliation, e.g. 'Subsidiary of'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyAffiliation",
    "possibleTypes": []
  },
  "CompanyAffiliationConnection": {
    "args": [],
    "description": "Pagination for CompanyAffiliation which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of CompanyAffiliation",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyAffiliationEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyAffiliationConnection",
    "possibleTypes": []
  },
  "CompanyAffiliationEdge": {
    "args": [],
    "description": "Page of CompanyAffiliation",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CompanyAffiliation"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CompanyAffiliation 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyAffiliationEdge",
    "possibleTypes": []
  },
  "CompanyAffiliationSort": {
    "args": [],
    "description": "Sort options for company affiliations",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Field to sort by",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "CompanyAffiliationSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Sort order",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CompanyAffiliationSort",
    "possibleTypes": []
  },
  "CompanyAffiliationSortBy": {
    "args": [],
    "description": "Fields available for sorting company affiliations",
    "enumValues": [
      {
        "description": "Sort by affiliation type alphabetically using CompanyAffiliation.text",
        "name": "AFFILIATION_TYPE"
      },
      {
        "description": "Sort by affiliated company ID (default behavior)",
        "name": "COMPANY_ID"
      },
      {
        "description": "Sort by affiliated company name alphabetically using Company.companyText",
        "name": "COMPANY_NAME"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "CompanyAffiliationSortBy",
    "possibleTypes": []
  },
  "CompanyBio": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The bio as a displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": false,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "Unique ID for this bio item",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the bio text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The bio text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyBio",
    "possibleTypes": []
  },
  "CompanyBranch": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Ways to contact this part of the company directly",
        "kind": "",
        "list": false,
        "name": "directContact",
        "nullable": true,
        "type": "CompanyContactDetails"
      },
      {
        "args": [],
        "description": "An obfuscated persistent id to uniquely identify this data",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Branch name",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyBranch",
    "possibleTypes": []
  },
  "CompanyBranchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyBranchEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyBranchConnection",
    "possibleTypes": []
  },
  "CompanyBranchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CompanyBranch"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyBranchEdge",
    "possibleTypes": []
  },
  "CompanyClient": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The employees working at this company who work with the client\nin this type of relationship\n\nReturns nothing if we have no information about the individual\nemployees at this company who work specifically with this client.",
        "kind": "",
        "list": true,
        "name": "agents",
        "nullable": true,
        "type": "Agent"
      },
      {
        "args": [],
        "description": "The name being represented",
        "kind": "",
        "list": false,
        "name": "client",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "An obfuscated persistent id to uniquely identify this data",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyClient",
    "possibleTypes": []
  },
  "CompanyClientConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyClientEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyClientConnection",
    "possibleTypes": []
  },
  "CompanyClientEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CompanyClient"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyClientEdge",
    "possibleTypes": []
  },
  "CompanyContactDetails": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "emailAddress",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "faxNumber",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "phoneNumbers",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "A physical mailing address for this company or this company's specific office",
        "kind": "",
        "list": false,
        "name": "physicalAddress",
        "nullable": true,
        "type": "Location"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "website",
        "nullable": true,
        "type": "WebsiteLink"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyContactDetails",
    "possibleTypes": []
  },
  "CompanyCredit": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "This field may contain distribution format, opening credit and other attributes related to credit of a company",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Category (e.g. 'Production').",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CompanyCreditCategory"
      },
      {
        "args": [],
        "description": "The company credited",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The countries in which this company was involved with this title",
        "kind": "",
        "list": true,
        "name": "countries",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "Company credit as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleCompanyCreditProperty"
      },
      {
        "args": [],
        "description": "For distribution companies it lists the different formats the company is\ndistributing the title in. For other company credits it always returns null.",
        "kind": "",
        "list": true,
        "name": "distributionFormats",
        "nullable": true,
        "type": "DistributionFormat"
      },
      {
        "args": [],
        "description": "The title on which this credit appears",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Start and optionally end year(s) that this company was involved with this title",
        "kind": "",
        "list": false,
        "name": "yearsInvolved",
        "nullable": true,
        "type": "YearRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyCredit",
    "possibleTypes": []
  },
  "CompanyCreditCategory": {
    "args": [],
    "description": "The category for the company credit, e.g. sales, distribution etc.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The unique identifier for the credit category",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The displayable text for the credit category",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyCreditCategory",
    "possibleTypes": []
  },
  "CompanyCreditCategoryWithCompanyCredits": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "CompanyCreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "companyCredits",
        "nullable": true,
        "type": "CompanyCreditConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CompanyCreditRestriction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyCreditCategoryWithCompanyCredits",
    "possibleTypes": []
  },
  "CompanyCreditConnection": {
    "args": [],
    "description": "Pagination for CompanyCredit type.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of credits",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyCreditEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CompanyCreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyCreditConnection",
    "possibleTypes": []
  },
  "CompanyCreditEdge": {
    "args": [],
    "description": "Page of credits",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A CompanyCredit node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CompanyCredit"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: credit 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyCreditEdge",
    "possibleTypes": []
  },
  "CompanyCreditRestriction": {
    "args": [],
    "description": "Information about restrictions applied to Company Credits",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyCreditRestriction",
    "possibleTypes": []
  },
  "CompanyCreditsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CompanyCreditsFilter",
    "possibleTypes": []
  },
  "CompanyEmployeeOccupation": {
    "args": [],
    "description": "The occupation the client held while employed by the company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The unique identifier for a particular occupation",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language that the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text describing the job, e.g. talent agent, executive",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyEmployeeOccupation",
    "possibleTypes": []
  },
  "CompanyEmployeeTitle": {
    "args": [],
    "description": "The title a company employee held while working for a company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The unique identifier for a particular title",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language that the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text describing the title, e.g. managing partner",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyEmployeeTitle",
    "possibleTypes": []
  },
  "CompanyEmployment": {
    "args": [],
    "description": "The employment relationship a staff member has with a company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name of the branch that the employee works",
        "kind": "",
        "list": false,
        "name": "branch",
        "nullable": true,
        "type": "EmployeeBranchName"
      },
      {
        "args": [],
        "description": "The occupation the staff memeber performed for this company, e.g. talent agent, executive",
        "kind": "",
        "list": false,
        "name": "occupation",
        "nullable": false,
        "type": "CompanyEmployeeOccupation"
      },
      {
        "args": [],
        "description": "The title the staff member had at this company, e.g. managing partner",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "CompanyEmployeeTitle"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyEmployment",
    "possibleTypes": []
  },
  "CompanyImagesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Return only images which are one of these types",
        "list": true,
        "name": "types",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CompanyImagesFilter",
    "possibleTypes": []
  },
  "CompanyJob": {
    "args": [],
    "description": "The job for a company credit that has detail beyond the job category, free form text",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier that matches the text string itself since jobs are free form text",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language that the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The text describing the job",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyJob",
    "possibleTypes": []
  },
  "CompanyKeyStaff": {
    "args": [],
    "description": "A key staff memeber of a company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A key staff memeber for this company",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "A summary of the relationship the staff member has with this company",
        "kind": "",
        "list": false,
        "name": "summary",
        "nullable": false,
        "type": "CompanyKeyStaffSummary"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKeyStaff",
    "possibleTypes": []
  },
  "CompanyKeyStaffConnection": {
    "args": [],
    "description": "Pagination for company key staff which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of company key staff for this company",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyKeyStaffEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of staff members available in the pool for this company",
        "kind": "",
        "list": false,
        "name": "recordPoolSize",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKeyStaffConnection",
    "possibleTypes": []
  },
  "CompanyKeyStaffEdge": {
    "args": [],
    "description": "Page of company key staff",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A company key staff node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CompanyKeyStaff"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CompanyKeyStaffEdge 4 out of 100",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKeyStaffEdge",
    "possibleTypes": []
  },
  "CompanyKeyStaffSummary": {
    "args": [],
    "description": "A summary of the relationship a company has a the key staff member",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "How this company has employed this staff member",
        "kind": "",
        "list": true,
        "name": "employment",
        "nullable": true,
        "type": "CompanyEmployment"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKeyStaffSummary",
    "possibleTypes": []
  },
  "CompanyKeyStaffVersionEdge": {
    "args": [],
    "description": "Page of company key staff version",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A key saff version node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ManagedCompanyKnownForKeyStaffVersion"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: ManagedCompanyKnownForKeyStaffVersion 4 out of 100",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKeyStaffVersionEdge",
    "possibleTypes": []
  },
  "CompanyKnownForClient": {
    "args": [],
    "description": "A known for client for a company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A client this company is known for",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "A summary of the relationship the known for client has with this company",
        "kind": "",
        "list": false,
        "name": "summary",
        "nullable": false,
        "type": "CompanyKnownForClientSummary"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForClient",
    "possibleTypes": []
  },
  "CompanyKnownForClientConnection": {
    "args": [],
    "description": "Pagination for company known for client which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of company known for client for this company",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyKnownForClientEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of clients available in the pool for this company",
        "kind": "",
        "list": false,
        "name": "recordPoolSize",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForClientConnection",
    "possibleTypes": []
  },
  "CompanyKnownForClientEdge": {
    "args": [],
    "description": "Page of company known for client",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A company known for client node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CompanyKnownForClient"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CompanyKnownForClient 4 out of 100",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForClientEdge",
    "possibleTypes": []
  },
  "CompanyKnownForClientSummary": {
    "args": [],
    "description": "A summary of the relationship the company has with the client it is known for",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The ways in which this company represented this client",
        "kind": "",
        "list": true,
        "name": "representation",
        "nullable": true,
        "type": "CompanyRepresentationCategory"
      },
      {
        "args": [],
        "description": "The ways in which this company represents this client aggregated by representation type",
        "kind": "",
        "list": true,
        "name": "representationCategories",
        "nullable": true,
        "type": "CompanyRepresentationCategories"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForClientSummary",
    "possibleTypes": []
  },
  "CompanyKnownForClientVersionEdge": {
    "args": [],
    "description": "Page of company known for client version",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A known for client version node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ManagedCompanyKnownForClientVersion"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: ManagedCompanyKnownForClientVersion 4 out of 100",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForClientVersionEdge",
    "possibleTypes": []
  },
  "CompanyKnownForCreditCategory": {
    "args": [],
    "description": "The job category for a company credit",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for the credit category",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The text describing the credit category",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForCreditCategory",
    "possibleTypes": []
  },
  "CompanyKnownForJob": {
    "args": [],
    "description": "The job a company did on a particular known for",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The job category, e.g. distribution, production etc.",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CompanyKnownForCreditCategory"
      },
      {
        "args": [],
        "description": "The job that has detail beyond the job category, free form text",
        "kind": "",
        "list": false,
        "name": "job",
        "nullable": true,
        "type": "CompanyJob"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForJob",
    "possibleTypes": []
  },
  "CompanyKnownForStatus": {
    "args": [],
    "description": "The status of a known for category for consumption by IMDb admins",
    "enumValues": [
      {
        "description": "Indicates that the known for is active and can be modified",
        "name": "ACTIVE"
      },
      {
        "description": "Indicates that the known for is blocked from modification",
        "name": "BLOCKED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "CompanyKnownForStatus",
    "possibleTypes": []
  },
  "CompanyKnownForTitle": {
    "args": [],
    "description": "A Known for title for a company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A summary of the relationship the known for title has with this company",
        "kind": "",
        "list": false,
        "name": "summary",
        "nullable": false,
        "type": "CompanyKnownForTitleSummary"
      },
      {
        "args": [],
        "description": "A title this company is known for",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForTitle",
    "possibleTypes": []
  },
  "CompanyKnownForTitleConnection": {
    "args": [],
    "description": "Pagination for company known for title which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of company known for title for this company",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyKnownForTitleEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of titles available in the pool for this company",
        "kind": "",
        "list": false,
        "name": "recordPoolSize",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForTitleConnection",
    "possibleTypes": []
  },
  "CompanyKnownForTitleEdge": {
    "args": [],
    "description": "Page of company known for title",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A company known for title node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CompanyKnownForTitle"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CompanyKnownForTitle 4 out of 100",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForTitleEdge",
    "possibleTypes": []
  },
  "CompanyKnownForTitleSummary": {
    "args": [],
    "description": "A summary of the relationship a company has with a title it is known for",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The countries the company did work for the known for title in",
        "kind": "",
        "list": true,
        "name": "countries",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "The jobs this company performed on the known for title",
        "kind": "",
        "list": true,
        "name": "jobs",
        "nullable": false,
        "type": "CompanyKnownForJob"
      },
      {
        "args": [],
        "description": "The year range the company was associated with the known for title. A single displayed if the start matches the end.",
        "kind": "",
        "list": false,
        "name": "yearRange",
        "nullable": true,
        "type": "YearRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForTitleSummary",
    "possibleTypes": []
  },
  "CompanyKnownForTitleVersionEdge": {
    "args": [],
    "description": "Page of company known for title version",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A known for title version node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ManagedCompanyKnownForTitleVersion"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: ManagedCompanyKnownForTitleVersion 4 out of 100",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyKnownForTitleVersionEdge",
    "possibleTypes": []
  },
  "CompanyMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "All the company credit categories",
        "kind": "",
        "list": true,
        "name": "companyCreditCategories",
        "nullable": false,
        "type": "CompanyCreditCategory"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyMetadata",
    "possibleTypes": []
  },
  "CompanyMeterRanking": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The current IMDbPro CompanyMeter ranking of the company. A lower value is better.\nRanking information beyond 5000 requires entitlement proving Pro subscription.",
        "kind": "",
        "list": false,
        "name": "currentRank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "If a previous rank exists, this is a set of fields comparing the current rank\nto the previous rank",
        "kind": "",
        "list": false,
        "name": "rankChange",
        "nullable": true,
        "type": "MeterRankChange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyMeterRanking",
    "possibleTypes": []
  },
  "CompanyMeterRankingHistory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The best historical IMDbPro COMPANYmeter ranking of a company. \nA lower value is better. By default, returns the values over all time.\nRequires entitlement proving Pro subscription.",
        "kind": "",
        "list": false,
        "name": "bestRank",
        "nullable": true,
        "type": "MeterRankingHistoryEntry"
      },
      {
        "args": [],
        "description": "History of IMDbPro COMPANYmeter rankings of a company.\nRequires entitlement proving Pro subscription.",
        "kind": "",
        "list": true,
        "name": "ranks",
        "nullable": true,
        "type": "MeterRankingHistoryEntry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "MeterRestriction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyMeterRankingHistory",
    "possibleTypes": []
  },
  "CompanyMeterRankingHistoryInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Last date to obtain COMPANYmeter history for. If not provided, default is most recent ranking date.\nIf there is no ranking on end date, the date is the most recent date before this one.",
        "list": false,
        "name": "endDate",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "First date to obtain COMPANYmeter history for. If not provided, default is first ranking date.\nIf there is no ranking on start date, the date is the earliest date after this one.",
        "list": false,
        "name": "startDate",
        "nullable": true,
        "type": "Date"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CompanyMeterRankingHistoryInput",
    "possibleTypes": []
  },
  "CompanyRepresentationCategories": {
    "args": [],
    "description": "A breakdown of a type of representative that represents this client",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The unique id for the representation type",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language that the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The text for the representation type, will be plural for total > 1. Agent types rolled up to 'agent'/'agents'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The total number of this type of representative that represent the client",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyRepresentationCategories",
    "possibleTypes": []
  },
  "CompanyRepresentationCategory": {
    "args": [],
    "description": "The type of client representation a company performed for a client",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The unique identifier for a particular category",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language that the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text describing the type of representation, e.g. talent agent",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyRepresentationCategory",
    "possibleTypes": []
  },
  "CompanyText": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyText",
    "possibleTypes": []
  },
  "CompanyType": {
    "args": [],
    "description": "The type of a company",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Company type ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is written in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayable company type, e.g. 'Talent Agency'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CompanyType",
    "possibleTypes": []
  },
  "ConnectionCategoryWithConnections": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "TitleConnectionCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "connections",
        "nullable": true,
        "type": "TitleConnectionConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ConnectionCategoryWithConnections",
    "possibleTypes": []
  },
  "ConnectionsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ConnectionsFilter",
    "possibleTypes": []
  },
  "Consent": {
    "args": [],
    "description": "Common interface for all consent types",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "consentOperation",
        "nullable": false,
        "type": "ConsentOperation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "consentType",
        "nullable": false,
        "type": "ConsentType"
      },
      {
        "args": [],
        "description": "This is the time at which this consent\nis no longer valid for this user.",
        "kind": "",
        "list": false,
        "name": "expirationDate",
        "nullable": false,
        "type": "DateTime"
      }
    ],
    "inputFields": [],
    "kind": "INTERFACE",
    "name": "Consent",
    "possibleTypes": [
      "TrackerConsent"
    ]
  },
  "ConsentOperation": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Customized consent, can be returned by Queries but not used as Mutation input.",
        "name": "CUSTOM"
      },
      {
        "description": "Opt in to the consent. i.e. Yes or 'accept all'\nNote: Default consent operation for a given type\nis provided in the consentRequirement",
        "name": "IN"
      },
      {
        "description": "Opt out of the consent. i.e. No or 'reject all'\nNote: Default consent operation for a given type\nis provided in the consentRequirement",
        "name": "OUT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ConsentOperation",
    "possibleTypes": []
  },
  "ConsentType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Consent for not sharing customer information with third parties.\nFor IMDb, this disables cross contextual behavioral advertising.",
        "name": "THIRD_PARTY_DATA_SHARING"
      },
      {
        "description": "Used for Cookie/Tracker consent. Corresponds to \"CookieConsent\"\nmodel in TollhouseService. https://tiny.amazon.com/1hii9awk1/codeamazpackPRIVblobb59emode",
        "name": "TRACKING_COOKIE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ConsentType",
    "possibleTypes": []
  },
  "ContentRestrictionReason": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "The title is announced",
        "name": "PRO_ANNOUNCED_TITLE"
      },
      {
        "description": "The title is in development",
        "name": "PRO_IN_DEV_TITLE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ContentRestrictionReason",
    "possibleTypes": []
  },
  "ContentWarnings": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A boolean flag that indicates whether IMDb considers this person's work to be primarily pornographic or adult genre.",
        "kind": "",
        "list": false,
        "name": "isPrimarilyAdultActor",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContentWarnings",
    "possibleTypes": []
  },
  "ContributionContext": {
    "args": [],
    "description": "All of the context required to render a contribution link.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "\"consumer\"",
        "description": "Determines which site we are rendering from. Valid: 'consumer', 'pro'.\nDefaults to 'consumer'.\nSee: https://tiny.amazon.com/t8frko7h",
        "list": false,
        "name": "business",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional flag to determine if this is in an iframe or behind a redirect",
        "list": false,
        "name": "isInIframe",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Where to redirect to once contribution is done. Accepts variable substitutions.\n{id} will be substituted with the item's ID you are trying to contribute to (eg: Name, Title, Image)\n{relatedId} if provided will be substituted with the ID of the context this\nitem is in, if applicable (eg: Name that Image is in the gallery of)",
        "list": false,
        "name": "returnUrl",
        "nullable": false,
        "type": "URL"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ContributionContext",
    "possibleTypes": []
  },
  "ContributionLink": {
    "args": [],
    "description": "Contains the URL for contributing to this data type. Is a type for extendability.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributionLink",
    "possibleTypes": []
  },
  "Contributor": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The user ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The user profile for this contributor",
        "kind": "",
        "list": false,
        "name": "user",
        "nullable": true,
        "type": "UserProfile"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Contributor",
    "possibleTypes": []
  },
  "ContributorLeaderboard": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Description of the leaderboard, to appear under title",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Have rankings been finalized or can they still change",
        "kind": "",
        "list": false,
        "name": "isFinalized",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Date last updated",
        "kind": "",
        "list": false,
        "name": "lastUpdated",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Public url of the leaderboard",
        "kind": "",
        "list": false,
        "name": "leaderboardUrl",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Month of leaderboard if appropriate (null for ALL_TIME and YEAR periods)\n1=Jan, 2=Feb, 3=Mar etc",
        "kind": "",
        "list": false,
        "name": "month",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Type of period that the leaderboard covers",
        "kind": "",
        "list": false,
        "name": "period",
        "nullable": false,
        "type": "ContributorLeaderboardPeriodType"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ContributorLeaderboardRankingsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ContributorLeaderboardRankingsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ContributorRankSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ContributorRankSort"
          }
        ],
        "description": "Paginated rankings in ascending order, jumpTo option for jumping to a specific contributorId or rank in the leaderboard.\nPlease do not use cursors (after, before, jumpTo) in rankings queries when\nnested within the results of a paginated leaderboard query\nto avoid unintended side effects.",
        "kind": "",
        "list": false,
        "name": "rankings",
        "nullable": false,
        "type": "ContributorRankingsConnection"
      },
      {
        "args": [],
        "description": "Title of the leaderboard",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "Total approved items for this period and type",
        "kind": "",
        "list": false,
        "name": "totalApprovedItems",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Total contributors for this period and type",
        "kind": "",
        "list": false,
        "name": "totalContributors",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Year of leaderboard if appropriate (null for ALL_TIME periods)",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorLeaderboard",
    "possibleTypes": []
  },
  "ContributorLeaderboardConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ContributorLeaderboardEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorLeaderboardConnection",
    "possibleTypes": []
  },
  "ContributorLeaderboardEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ContributorLeaderboard"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorLeaderboardEdge",
    "possibleTypes": []
  },
  "ContributorLeaderboardPeriodType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ContributorLeaderboardPeriodTypeId"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorLeaderboardPeriodType",
    "possibleTypes": []
  },
  "ContributorLeaderboardPeriodTypeId": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ALL_TIME"
      },
      {
        "description": null,
        "name": "MONTH"
      },
      {
        "description": null,
        "name": "YEAR"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ContributorLeaderboardPeriodTypeId",
    "possibleTypes": []
  },
  "ContributorLeaderboardRank": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Leaderboard this ranking is sourced from ",
        "kind": "",
        "list": false,
        "name": "leaderboard",
        "nullable": false,
        "type": "ContributorLeaderboard"
      },
      {
        "args": [],
        "description": "Rank position and counts ",
        "kind": "",
        "list": false,
        "name": "ranking",
        "nullable": false,
        "type": "ContributorRank"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorLeaderboardRank",
    "possibleTypes": []
  },
  "ContributorLeaderboardRankConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ContributorLeaderboardRankEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorLeaderboardRankConnection",
    "possibleTypes": []
  },
  "ContributorLeaderboardRankEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ContributorLeaderboardRank"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorLeaderboardRankEdge",
    "possibleTypes": []
  },
  "ContributorLeaderboardRankingsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Limit the returned and sorted results to a maximum rank to support top ranking queries",
        "list": false,
        "name": "maximumRank",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ContributorLeaderboardRankingsFilter",
    "possibleTypes": []
  },
  "ContributorLeaderboards": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Returns page of all leaderboards in reverse chronological order",
        "kind": "",
        "list": false,
        "name": "all",
        "nullable": false,
        "type": "ContributorLeaderboardConnection"
      },
      {
        "args": [],
        "description": "Returns the all-time leaderboard",
        "kind": "",
        "list": false,
        "name": "allTime",
        "nullable": true,
        "type": "ContributorLeaderboard"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "month",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "year",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns the leaderboard for a specific month",
        "kind": "",
        "list": false,
        "name": "month",
        "nullable": true,
        "type": "ContributorLeaderboard"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ContributorLeaderboardsByMonthFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ContributorLeaderboardsByMonthFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Returns page of monthly leaderboards in reverse chronological order",
        "kind": "",
        "list": false,
        "name": "months",
        "nullable": false,
        "type": "ContributorLeaderboardConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "year",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns the leaderboard for a specific year",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "ContributorLeaderboard"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ContributorLeaderboardsByYearFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ContributorLeaderboardsByYearFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Returns page of yearly leaderboards in reverse chronological order",
        "kind": "",
        "list": false,
        "name": "years",
        "nullable": false,
        "type": "ContributorLeaderboardConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorLeaderboards",
    "possibleTypes": []
  },
  "ContributorLeaderboardsByMonthFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Optionally filter by leaderboards for specific months",
        "list": true,
        "name": "months",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optionally filter by leaderboards for specific years",
        "list": true,
        "name": "years",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ContributorLeaderboardsByMonthFilter",
    "possibleTypes": []
  },
  "ContributorLeaderboardsByYearFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Optionally filter by leaderboards for specific years",
        "list": true,
        "name": "years",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ContributorLeaderboardsByYearFilter",
    "possibleTypes": []
  },
  "ContributorRank": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Number of contribution items submitted and subsequently approved",
        "kind": "",
        "list": false,
        "name": "approvedItems",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Difference in items contributed from last period",
        "kind": "",
        "list": false,
        "name": "approvedItemsDelta",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Contributor ranked at this position, null means they are anonymous",
        "kind": "",
        "list": false,
        "name": "contributor",
        "nullable": true,
        "type": "Contributor"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Numerical rank position, where 1 is the contributor with the highest approved contribution items.",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Difference in rank from last period",
        "kind": "",
        "list": false,
        "name": "rankDelta",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorRank",
    "possibleTypes": []
  },
  "ContributorRankEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ContributorRank"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorRankEdge",
    "possibleTypes": []
  },
  "ContributorRankSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "ContributorRankSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ContributorRankSort",
    "possibleTypes": []
  },
  "ContributorRankSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort contributors by delta in their number of approved items from the previous period",
        "name": "APPROVED_ITEMS_DELTA"
      },
      {
        "description": "Sort contributors by approved contribution item count (i.e number of items accepted into the IMDb catalog)",
        "name": "RANK"
      },
      {
        "description": "Sort contributors by delta in their rank from the previous period",
        "name": "RANK_DELTA"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ContributorRankSortBy",
    "possibleTypes": []
  },
  "ContributorRankingsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ContributorRankEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ContributorRankingsConnection",
    "possibleTypes": []
  },
  "ContributorRankingsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "User id of contributor to filter on",
        "list": false,
        "name": "contributorId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optionally filter by rankings for leaderboards for specific months",
        "list": true,
        "name": "months",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Returns ranking for leaderboards of all period types if omitted",
        "list": true,
        "name": "period",
        "nullable": true,
        "type": "ContributorLeaderboardPeriodTypeId"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optionally filter by rankings for leaderboards for specific years",
        "list": true,
        "name": "years",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ContributorRankingsFilter",
    "possibleTypes": []
  },
  "CountInterval": {
    "args": [],
    "description": "Closed interval of a countable value",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "max",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "min",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CountInterval",
    "possibleTypes": []
  },
  "CountriesOfOrigin": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "countries",
        "nullable": false,
        "type": "CountryOfOrigin"
      },
      {
        "args": [],
        "description": "DEPRECATED - DO NOT USE",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CountriesOfOrigin",
    "possibleTypes": []
  },
  "Country": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "AD"
      },
      {
        "description": null,
        "name": "AE"
      },
      {
        "description": null,
        "name": "AF"
      },
      {
        "description": null,
        "name": "AG"
      },
      {
        "description": null,
        "name": "AI"
      },
      {
        "description": null,
        "name": "AL"
      },
      {
        "description": null,
        "name": "AM"
      },
      {
        "description": null,
        "name": "AN"
      },
      {
        "description": null,
        "name": "AO"
      },
      {
        "description": null,
        "name": "AQ"
      },
      {
        "description": null,
        "name": "AR"
      },
      {
        "description": null,
        "name": "AS"
      },
      {
        "description": null,
        "name": "AT"
      },
      {
        "description": null,
        "name": "AU"
      },
      {
        "description": null,
        "name": "AW"
      },
      {
        "description": null,
        "name": "AX"
      },
      {
        "description": null,
        "name": "AZ"
      },
      {
        "description": null,
        "name": "BA"
      },
      {
        "description": null,
        "name": "BB"
      },
      {
        "description": null,
        "name": "BD"
      },
      {
        "description": null,
        "name": "BE"
      },
      {
        "description": null,
        "name": "BF"
      },
      {
        "description": null,
        "name": "BG"
      },
      {
        "description": null,
        "name": "BH"
      },
      {
        "description": null,
        "name": "BI"
      },
      {
        "description": null,
        "name": "BJ"
      },
      {
        "description": null,
        "name": "BL"
      },
      {
        "description": null,
        "name": "BM"
      },
      {
        "description": null,
        "name": "BN"
      },
      {
        "description": null,
        "name": "BO"
      },
      {
        "description": null,
        "name": "BQ"
      },
      {
        "description": null,
        "name": "BR"
      },
      {
        "description": null,
        "name": "BS"
      },
      {
        "description": null,
        "name": "BT"
      },
      {
        "description": null,
        "name": "BV"
      },
      {
        "description": null,
        "name": "BW"
      },
      {
        "description": null,
        "name": "BY"
      },
      {
        "description": null,
        "name": "BZ"
      },
      {
        "description": null,
        "name": "CA"
      },
      {
        "description": null,
        "name": "CC"
      },
      {
        "description": null,
        "name": "CD"
      },
      {
        "description": null,
        "name": "CF"
      },
      {
        "description": null,
        "name": "CG"
      },
      {
        "description": null,
        "name": "CH"
      },
      {
        "description": null,
        "name": "CI"
      },
      {
        "description": null,
        "name": "CK"
      },
      {
        "description": null,
        "name": "CL"
      },
      {
        "description": null,
        "name": "CM"
      },
      {
        "description": null,
        "name": "CN"
      },
      {
        "description": null,
        "name": "CO"
      },
      {
        "description": null,
        "name": "CR"
      },
      {
        "description": null,
        "name": "CS"
      },
      {
        "description": null,
        "name": "CU"
      },
      {
        "description": null,
        "name": "CV"
      },
      {
        "description": null,
        "name": "CW"
      },
      {
        "description": null,
        "name": "CX"
      },
      {
        "description": null,
        "name": "CY"
      },
      {
        "description": null,
        "name": "CZ"
      },
      {
        "description": null,
        "name": "DE"
      },
      {
        "description": null,
        "name": "DJ"
      },
      {
        "description": null,
        "name": "DK"
      },
      {
        "description": null,
        "name": "DM"
      },
      {
        "description": null,
        "name": "DO"
      },
      {
        "description": null,
        "name": "DZ"
      },
      {
        "description": null,
        "name": "EC"
      },
      {
        "description": null,
        "name": "EE"
      },
      {
        "description": null,
        "name": "EG"
      },
      {
        "description": null,
        "name": "EH"
      },
      {
        "description": null,
        "name": "ER"
      },
      {
        "description": null,
        "name": "ES"
      },
      {
        "description": null,
        "name": "ET"
      },
      {
        "description": null,
        "name": "FI"
      },
      {
        "description": null,
        "name": "FJ"
      },
      {
        "description": null,
        "name": "FK"
      },
      {
        "description": null,
        "name": "FM"
      },
      {
        "description": null,
        "name": "FO"
      },
      {
        "description": null,
        "name": "FR"
      },
      {
        "description": null,
        "name": "GA"
      },
      {
        "description": null,
        "name": "GB"
      },
      {
        "description": null,
        "name": "GD"
      },
      {
        "description": null,
        "name": "GE"
      },
      {
        "description": null,
        "name": "GF"
      },
      {
        "description": null,
        "name": "GG"
      },
      {
        "description": null,
        "name": "GH"
      },
      {
        "description": null,
        "name": "GI"
      },
      {
        "description": null,
        "name": "GL"
      },
      {
        "description": null,
        "name": "GM"
      },
      {
        "description": null,
        "name": "GN"
      },
      {
        "description": null,
        "name": "GP"
      },
      {
        "description": null,
        "name": "GQ"
      },
      {
        "description": null,
        "name": "GR"
      },
      {
        "description": null,
        "name": "GS"
      },
      {
        "description": null,
        "name": "GT"
      },
      {
        "description": null,
        "name": "GU"
      },
      {
        "description": null,
        "name": "GW"
      },
      {
        "description": null,
        "name": "GY"
      },
      {
        "description": null,
        "name": "HK"
      },
      {
        "description": null,
        "name": "HM"
      },
      {
        "description": null,
        "name": "HN"
      },
      {
        "description": null,
        "name": "HR"
      },
      {
        "description": null,
        "name": "HT"
      },
      {
        "description": null,
        "name": "HU"
      },
      {
        "description": null,
        "name": "ID"
      },
      {
        "description": null,
        "name": "IE"
      },
      {
        "description": null,
        "name": "IL"
      },
      {
        "description": null,
        "name": "IM"
      },
      {
        "description": null,
        "name": "IN"
      },
      {
        "description": null,
        "name": "IO"
      },
      {
        "description": null,
        "name": "IQ"
      },
      {
        "description": null,
        "name": "IR"
      },
      {
        "description": null,
        "name": "IS"
      },
      {
        "description": null,
        "name": "IT"
      },
      {
        "description": null,
        "name": "JE"
      },
      {
        "description": null,
        "name": "JM"
      },
      {
        "description": null,
        "name": "JO"
      },
      {
        "description": null,
        "name": "JP"
      },
      {
        "description": null,
        "name": "KE"
      },
      {
        "description": null,
        "name": "KG"
      },
      {
        "description": null,
        "name": "KH"
      },
      {
        "description": null,
        "name": "KI"
      },
      {
        "description": null,
        "name": "KM"
      },
      {
        "description": null,
        "name": "KN"
      },
      {
        "description": null,
        "name": "KP"
      },
      {
        "description": null,
        "name": "KR"
      },
      {
        "description": null,
        "name": "KW"
      },
      {
        "description": null,
        "name": "KY"
      },
      {
        "description": null,
        "name": "KZ"
      },
      {
        "description": null,
        "name": "LA"
      },
      {
        "description": null,
        "name": "LB"
      },
      {
        "description": null,
        "name": "LC"
      },
      {
        "description": null,
        "name": "LI"
      },
      {
        "description": null,
        "name": "LK"
      },
      {
        "description": null,
        "name": "LR"
      },
      {
        "description": null,
        "name": "LS"
      },
      {
        "description": null,
        "name": "LT"
      },
      {
        "description": null,
        "name": "LU"
      },
      {
        "description": null,
        "name": "LV"
      },
      {
        "description": null,
        "name": "LY"
      },
      {
        "description": null,
        "name": "MA"
      },
      {
        "description": null,
        "name": "MC"
      },
      {
        "description": null,
        "name": "MD"
      },
      {
        "description": null,
        "name": "ME"
      },
      {
        "description": null,
        "name": "MF"
      },
      {
        "description": null,
        "name": "MG"
      },
      {
        "description": null,
        "name": "MH"
      },
      {
        "description": null,
        "name": "MK"
      },
      {
        "description": null,
        "name": "ML"
      },
      {
        "description": null,
        "name": "MM"
      },
      {
        "description": null,
        "name": "MN"
      },
      {
        "description": null,
        "name": "MO"
      },
      {
        "description": null,
        "name": "MP"
      },
      {
        "description": null,
        "name": "MQ"
      },
      {
        "description": null,
        "name": "MR"
      },
      {
        "description": null,
        "name": "MS"
      },
      {
        "description": null,
        "name": "MT"
      },
      {
        "description": null,
        "name": "MU"
      },
      {
        "description": null,
        "name": "MV"
      },
      {
        "description": null,
        "name": "MW"
      },
      {
        "description": null,
        "name": "MX"
      },
      {
        "description": null,
        "name": "MY"
      },
      {
        "description": null,
        "name": "MZ"
      },
      {
        "description": null,
        "name": "NA"
      },
      {
        "description": null,
        "name": "NC"
      },
      {
        "description": null,
        "name": "NE"
      },
      {
        "description": null,
        "name": "NF"
      },
      {
        "description": null,
        "name": "NG"
      },
      {
        "description": null,
        "name": "NI"
      },
      {
        "description": null,
        "name": "NL"
      },
      {
        "description": null,
        "name": "NO"
      },
      {
        "description": null,
        "name": "NON_US"
      },
      {
        "description": null,
        "name": "NP"
      },
      {
        "description": null,
        "name": "NR"
      },
      {
        "description": null,
        "name": "NU"
      },
      {
        "description": null,
        "name": "NZ"
      },
      {
        "description": null,
        "name": "OM"
      },
      {
        "description": null,
        "name": "PA"
      },
      {
        "description": null,
        "name": "PE"
      },
      {
        "description": null,
        "name": "PF"
      },
      {
        "description": null,
        "name": "PG"
      },
      {
        "description": null,
        "name": "PH"
      },
      {
        "description": null,
        "name": "PK"
      },
      {
        "description": null,
        "name": "PL"
      },
      {
        "description": null,
        "name": "PM"
      },
      {
        "description": null,
        "name": "PN"
      },
      {
        "description": null,
        "name": "PR"
      },
      {
        "description": null,
        "name": "PS"
      },
      {
        "description": null,
        "name": "PT"
      },
      {
        "description": null,
        "name": "PW"
      },
      {
        "description": null,
        "name": "PY"
      },
      {
        "description": null,
        "name": "QA"
      },
      {
        "description": null,
        "name": "RE"
      },
      {
        "description": null,
        "name": "RO"
      },
      {
        "description": null,
        "name": "RS"
      },
      {
        "description": null,
        "name": "RU"
      },
      {
        "description": null,
        "name": "RW"
      },
      {
        "description": null,
        "name": "SA"
      },
      {
        "description": null,
        "name": "SB"
      },
      {
        "description": null,
        "name": "SC"
      },
      {
        "description": null,
        "name": "SD"
      },
      {
        "description": null,
        "name": "SE"
      },
      {
        "description": null,
        "name": "SG"
      },
      {
        "description": null,
        "name": "SH"
      },
      {
        "description": null,
        "name": "SI"
      },
      {
        "description": null,
        "name": "SJ"
      },
      {
        "description": null,
        "name": "SK"
      },
      {
        "description": null,
        "name": "SL"
      },
      {
        "description": null,
        "name": "SM"
      },
      {
        "description": null,
        "name": "SN"
      },
      {
        "description": null,
        "name": "SO"
      },
      {
        "description": null,
        "name": "SR"
      },
      {
        "description": null,
        "name": "SS"
      },
      {
        "description": null,
        "name": "ST"
      },
      {
        "description": null,
        "name": "SV"
      },
      {
        "description": null,
        "name": "SX"
      },
      {
        "description": null,
        "name": "SY"
      },
      {
        "description": null,
        "name": "SZ"
      },
      {
        "description": null,
        "name": "TC"
      },
      {
        "description": null,
        "name": "TD"
      },
      {
        "description": null,
        "name": "TF"
      },
      {
        "description": null,
        "name": "TG"
      },
      {
        "description": null,
        "name": "TH"
      },
      {
        "description": null,
        "name": "TJ"
      },
      {
        "description": null,
        "name": "TK"
      },
      {
        "description": null,
        "name": "TL"
      },
      {
        "description": null,
        "name": "TM"
      },
      {
        "description": null,
        "name": "TN"
      },
      {
        "description": null,
        "name": "TO"
      },
      {
        "description": null,
        "name": "TR"
      },
      {
        "description": null,
        "name": "TT"
      },
      {
        "description": null,
        "name": "TV"
      },
      {
        "description": null,
        "name": "TW"
      },
      {
        "description": null,
        "name": "TZ"
      },
      {
        "description": null,
        "name": "UA"
      },
      {
        "description": null,
        "name": "UG"
      },
      {
        "description": null,
        "name": "UM"
      },
      {
        "description": null,
        "name": "US"
      },
      {
        "description": null,
        "name": "UY"
      },
      {
        "description": null,
        "name": "UZ"
      },
      {
        "description": null,
        "name": "VA"
      },
      {
        "description": null,
        "name": "VC"
      },
      {
        "description": null,
        "name": "VE"
      },
      {
        "description": null,
        "name": "VG"
      },
      {
        "description": null,
        "name": "VI"
      },
      {
        "description": null,
        "name": "VN"
      },
      {
        "description": null,
        "name": "VU"
      },
      {
        "description": null,
        "name": "WF"
      },
      {
        "description": null,
        "name": "WS"
      },
      {
        "description": null,
        "name": "YE"
      },
      {
        "description": null,
        "name": "YT"
      },
      {
        "description": null,
        "name": "ZA"
      },
      {
        "description": null,
        "name": "ZM"
      },
      {
        "description": null,
        "name": "ZW"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "Country",
    "possibleTypes": []
  },
  "CountryAttributeMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The maximum number of values a customer can have for a country-related attribute. A null value means no limit",
        "kind": "",
        "list": false,
        "name": "limit",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "All valid countries",
        "kind": "",
        "list": true,
        "name": "validValues",
        "nullable": false,
        "type": "LocalizedDisplayableCountry"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CountryAttributeMetadata",
    "possibleTypes": []
  },
  "CountryOfOrigin": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Country of origin as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleCountryOfOriginProperty"
      },
      {
        "args": [],
        "description": "The country code - either an ISO 3166 code or an internally defined code if no ISO code exists for that country.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Display text for the country (e.g. 'United States').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CountryOfOrigin",
    "possibleTypes": []
  },
  "CrazyCredit": {
    "args": [],
    "description": "Crazy credit details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Crazy credit as a displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": false,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "Crazy credit ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Votes from users about whether this crazy credit item is interesting.",
        "kind": "",
        "list": false,
        "name": "interestScore",
        "nullable": false,
        "type": "InterestScore"
      },
      {
        "args": [],
        "description": "The crazy credit text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CrazyCredit",
    "possibleTypes": []
  },
  "CrazyCreditConnection": {
    "args": [],
    "description": "Pagination for crazy credit types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of crazy credits",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CrazyCreditEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CrazyCreditConnection",
    "possibleTypes": []
  },
  "CrazyCreditEdge": {
    "args": [],
    "description": "Page of crazy credits",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A crazy credit node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CrazyCredit"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CrazyCredit 4 out of 46",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CrazyCreditEdge",
    "possibleTypes": []
  },
  "CrazyCreditMatchingSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of crazy credit 'Ian Underwood' OR 'Ian Underworld', PLUS\nthe title must contain 'incorrectly', specify anyCrazyCreditTextTerms: ['Ian Underwood', 'Ian Underworld'] plus\nallCrazyCreditTextTerms: ['incorrectly']. Note that this is term match rather than\nphrase match, e.g., 'Ian Underwood' would match titles that contain 'Underwood, Ian'",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these search terms in at least one of its crazy credits.",
        "list": true,
        "name": "allCrazyCreditTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these search terms in at least one of its crazy credits.",
        "list": true,
        "name": "anyCrazyCreditTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CrazyCreditMatchingSearchConstraint",
    "possibleTypes": []
  },
  "CreateAccountRedirectURLInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Association handle of the login context for IMDb account creation i.e. imdb_us",
        "list": false,
        "name": "associationHandle",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional URL to return to post account creation, defaults to home page if omitted",
        "list": false,
        "name": "returnURL",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional prefilled email for use on Pro when signing in with an Amazon account email that matches an IMDb account email",
        "list": false,
        "name": "signInPrefilledEmail",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CreateAccountRedirectURLInput",
    "possibleTypes": []
  },
  "CreateAccountRedirectURLOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Redirect URL for user account creation",
        "kind": "",
        "list": false,
        "name": "redirectURL",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreateAccountRedirectURLOutput",
    "possibleTypes": []
  },
  "CreativeSize": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The height of the creative in pixels",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The width of the creative in pixels",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreativeSize",
    "possibleTypes": []
  },
  "Credit": {
    "args": [],
    "description": "Credit details. Open question: do we want to add a persistent ID for credits?\nWithout this we require a nameID, titleID and Category to uniquely identify it.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Category (e.g. 'Producer').\nOpen question: the name of this field comes from TitleCreditsBaseV5. Should we change it?",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [],
        "description": "The person credited",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The title on which this credit appears",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "INTERFACE",
    "name": "Credit",
    "possibleTypes": [
      "Cast",
      "Crew"
    ]
  },
  "CreditAggregation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Defines how credits are aggregated together into a single CreditV2 result.\n\nAggregation allows clients to choose the level of detail to show for credits, avoiding repetition of the same\nnamed individual across many roles or appearances.\n\nParameter is modelled as a string to allow for altering the list of allowed values over time. Supported values are:\n\nNAME: All credits for a single name on a single title are aggregated together.\nThis supports experiences like Filmmakers tab on pro.imdb.com, where all work by a name within a category is\nshown together.\nFor example, see Hugh Wilson in https://pro.imdb.com/title/tt0116130/filmmakers.\n\nNAME_WITHOUT_ORDERABLE_GROUPS: All credits for a single name on a single title are aggregated together,\nexcept for groupings that support hierarchies (for example the Writer grouping). For these, aggregation is disabled.\nThis allows for the hierarchy of writer credits to be vended, capturing a single writer's individual contributions\nto a title in the correct order.\nFor example, see Hugh Wilson in https://www.imdb.com/title/tt0116130/fullcredits/#writer.",
        "list": false,
        "name": "aggregationType",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CreditAggregation",
    "possibleTypes": []
  },
  "CreditAttribute": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "INTERFACE",
    "name": "CreditAttribute",
    "possibleTypes": [
      "CreditedAsCreditAttribute",
      "JobCreditAttribute",
      "MiscellaneousCreditAttribute",
      "SeriesCreditAttribute"
    ]
  },
  "CreditCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique ID for this category within IMDb's catalog systems.\nAllows lookup of category metadata for later display, for example for localising credits fetched previously\nand stored offline.\nThis ID is stable across languages, unlike the `id` field.",
        "kind": "",
        "list": false,
        "name": "categoryId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "A list of the most relevant credited roles for this name credit category e.g 'lighting rigger'",
        "kind": "",
        "list": true,
        "name": "featuredCreditedRoles",
        "nullable": true,
        "type": "DisplayableFeaturedCreditedRole"
      },
      {
        "args": [],
        "description": "Opaque ID, suitable for caching this concept.\nAs an ID of a LocalizedDisplayableConcept, the ID must change based on the language of the returned content.\nThis is to ensure that caches can distinguish between different languages of the same content.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Displayable text for this category.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The set of traits associated with this name credit category.\nSupported values are: 'CAST_TRAIT', 'CREW_TRAIT', 'ADDITIONAL_APPEARANCES_TRAIT'.\nFor details see CreditCategoryTrait type.",
        "kind": "",
        "list": true,
        "name": "traits",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditCategory",
    "possibleTypes": []
  },
  "CreditCategoryDisplayVariant": {
    "args": [],
    "description": "Arg for the variant of the credit category display label",
    "enumValues": [
      {
        "description": null,
        "name": "PLURAL"
      },
      {
        "description": null,
        "name": "SINGLE"
      },
      {
        "description": null,
        "name": "TITLE_HEADING"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "CreditCategoryDisplayVariant",
    "possibleTypes": []
  },
  "CreditCategorySummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The credit category",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [],
        "description": "The total number of credits for the category",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditCategorySummary",
    "possibleTypes": []
  },
  "CreditCategoryTrait": {
    "args": [],
    "description": "Enumeration of credit category traits that are allow-listed for use in credit field filters.\n\nNote that response types will vend traits as strings, not CreditCategoryTrait values. This is to avoid risk of\nbreaking clients when new values are added to the enum.",
    "enumValues": [
      {
        "description": "Identifies categories where the person appears as themselves in a on-screen\ncapacity. Specifically, their Self role is not captured in a more specific\ncategory like Host or Judge.",
        "name": "ADDITIONAL_APPEARANCES_TRAIT"
      },
      {
        "description": "Identifies categories that make up the 'Cast' of a title",
        "name": "CAST_TRAIT"
      },
      {
        "description": "Identifies categories that make up the 'Crew' of a title",
        "name": "CREW_TRAIT"
      },
      {
        "description": "Identifies categories for crew typically responsible for the creative shape of\na feature movie. Not exhaustive, intended as a summary of credits only.",
        "name": "MAJOR_CREATIVE_INPUT_TRAIT"
      },
      {
        "description": "Identifies categories where the name is in a 'Self' role on the title",
        "name": "SELF_TRAIT"
      },
      {
        "description": "Identifies categories where the name is in a 'Thanks' role on the title",
        "name": "THANKS_TRAIT"
      },
      {
        "description": "Identifies categories that are a catch-all of credits that do not belong in\nthe taxonomy of other categories. Allows clients to put less emphasis on the\ncategory as a signifier of the work done by a name on a title.",
        "name": "UNCATEGORIZED_TRAIT"
      },
      {
        "description": "Identifies categories that are still in testing phase and should be hidden\nfrom public-facing interfaces such as search filters, dropdowns, and selection\ncontrols. The presence of this trait indicates the category exists in the\nsystem but is not yet ready for general availability in user experiences.",
        "name": "UNDERGOING_TESTING_TRAIT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "CreditCategoryTrait",
    "possibleTypes": []
  },
  "CreditConnection": {
    "args": [],
    "description": "Pagination for Credit type on a Title.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "CreditsCompletenessStatusFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "CreditsCompletenessStatusFilter"
          }
        ],
        "description": "Indicates whether the requested filmography data accurately reflects the onscreen cast or crew credits",
        "kind": "",
        "list": false,
        "name": "completenessStatus",
        "nullable": true,
        "type": "CreditsCompletenessStatus"
      },
      {
        "args": [],
        "description": "Pages of credits",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditEdge"
      },
      {
        "args": [],
        "description": "How the credits are ordered",
        "kind": "",
        "list": false,
        "name": "orderBy",
        "nullable": true,
        "type": "CreditsOrderedBy"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditConnection",
    "possibleTypes": []
  },
  "CreditEdge": {
    "args": [],
    "description": "Page of credits",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Credit node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Credit"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Credit 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditEdge",
    "possibleTypes": []
  },
  "CreditGrouping": {
    "args": [],
    "description": "Credits are assigned to exactly one category, but may be displayed in different\ngroupings to better represent talent contributions. These groupings provide\nflexible presentation of credits that may differ from their strict categorical\nclassification.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "ID for this credit grouping.\nStable identifier that remains constant across localizations, used for filtering and pagination.",
        "kind": "",
        "list": false,
        "name": "groupingId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Opaque ID, suitable for caching this concept.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditGrouping",
    "possibleTypes": []
  },
  "CreditGroupingConnection": {
    "args": [],
    "description": "Pagination for NameCreditGrouping type",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of NameCreditGroupings",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditGroupingEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of groupings in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditGroupingConnection",
    "possibleTypes": []
  },
  "CreditGroupingEdge": {
    "args": [],
    "description": "Single entry of NameCreditGroupings pagination",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CreditGroupingNode"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CreditGrouping 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditGroupingEdge",
    "possibleTypes": []
  },
  "CreditGroupingNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Number of CreditV2 values to fetch.\nMaximum per request is 250.",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "credits",
        "nullable": true,
        "type": "CreditV2Connection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "GroupingTextInput",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "GroupingTextInput"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "grouping",
        "nullable": false,
        "type": "CreditGrouping"
      },
      {
        "args": [],
        "description": "Captures details of the hierarchy of credits, for credit groups that support a hierarchy.\nOnly populated in title-sourced responses such as title.creditsV2.",
        "kind": "",
        "list": false,
        "name": "hierarchy",
        "nullable": true,
        "type": "CreditHierarchy"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditGroupingNode",
    "possibleTypes": []
  },
  "CreditGroupingSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Capture the order of CreditGrouping items in a listing.\n\nThis is modelled as a string to allow for altering the list of allowed values over time. Supported values are:\n\nCREDIT_GROUPING_IMPORTANCE: Credit grouping ordering follows this priority sequence:\n1. Profession - The credit categories associated with the name's professions, in profession order\n2. Fixed grouping order for additional and passive appearances - Credit\ngroupings that capture when a name is appearing as Self, \n   or where they were not actively involved in the title (such as Thanks or\nArchive credits) are moved to the end of the ordering\n3. Credit count - The number of credits a name has within the grouping, largest first\n4. Fixed grouping order - A fixed order, presenting groupings in an order similar to that seen on movie or TV\n   end credits.\n\nCREDIT_GROUPING_IMPORTANCE is the default.",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CreditGroupingSort",
    "possibleTypes": []
  },
  "CreditHierarchy": {
    "args": [],
    "description": "Captures details of the hierarchy of credits, for credit groups that support a hierarchy.\nTwo examples where this exists today:\n* Writer (https://help.imdb.com/article/contribution/filmography-credits/writers/GPLAT3NTCGA67A6R#)\n  * This category supports a three-level hierarchy. The levels are named\n\"WriterFamily\", \"WriterTeam\", and \"WriterTeamMember\".\n  * Documentation below shows examples of this hierarchy\n* Cast (https://help.imdb.com/article/contribution/filmography-credits/how-are-cast-credits-ordered-why-don-t-the-main-stars-appear-at-the-top-of-the-cast/G39K5N4YYV2QJ4GR)\n  * These credits are vended as a collection of ordered credits, followed by a collection of unordered credits.\n    Our hierarchy here is therefore one level deep, with up to two expected levelKeys at that level.\n  * Concretely we would see a hierarchy of the form:\n\n    [Root]\n      /\\\n     /  \\\n    A    B        # CastGrouping\n   /|    /|\\\n  / |   / | \\\n C  D  E  F  G    # CastMember\n\n * In this example, C and D would be cast members with an order number associated with them. E, F, G would have no\n   associated order, and so are in the second CastGrouping.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "For each non-leaf node in our hierarchy, provide a count for the number of child nodes.\nAllows a client to look at an individual credit record and understand its relative position in the hierarchy,\nwithout knowledge of the hierarchy itself.\nFor example, given the following hierarchy:\n\n[Root]\n|\nA\n| \\\nB  C\n|  | \\\nD  E  F\n\nIf a client is rendering the credit F, they can determine that F is the last credit within the C subtree,\nbecause:\n* This group of credits is vended with `hierarchy` containing:\n  `{ \"levels\": [\"WriterFamily\", \"WriterTeam\", \"WriterTeamMember\"],\n     \"levelDetails\": [\n       { \"levelsKey\": \"WriterFamily[0].WriterTeam[0]\", childCount: 1 },\n       { \"levelsKey\": \"WriterFamily[0].WriterTeam[1]\", childCount: 2 },\n     ]\n   }`\n* F is vended with `hierarchyDetail` of\n  `[ { \"level\": \"WriterFamily\", \"position\": 0 }, { \"level\": \"WriterTeam\",\n\"position\": 1 }, { \"level\": \"WriterTeamMember\", \"position\": 1 } ]`\n* A client can see that within \"WriterFamily[0].WriterTeam[1]\", F's WriterTeamMember-level position (2) matches the\n  total childCount for that node in the `hierarchy` data.",
        "kind": "",
        "list": true,
        "name": "levelDetails",
        "nullable": true,
        "type": "CreditHierarchyLevelDetail"
      },
      {
        "args": [],
        "description": "Ordered list of levels. Allows a client to understand the content of `levelDetails`,\nand the `hierarchyDetails` against a grouped credit edge (see CreditGroupingEdge).\nFor the Writer group this would return `[\"WriterFamily\", \"WriterTeam\", \"WriterTeamMember\"]`.",
        "kind": "",
        "list": true,
        "name": "levels",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditHierarchy",
    "possibleTypes": []
  },
  "CreditHierarchyDetail": {
    "args": [],
    "description": "Captures an individual CreditV2's position within a credit group's hierarchy.\nThis type captures the position within a single level of the hierarchy.\nAn array of these can identify a credit's unique position within a multi-level hierarchy.\nValues are zero-indexed.\nFor example, for the Writer credit group (with levels \"WriterFamily\", \"WriterTeam\", \"WriterTeamMember\"),\nand hierarchy of shape:\n\n      [Root]\n      |\n      A          # WriterFamily\n     / \\\n    /   \\\n   B     C       # WriterTeam\n  /|    /|\\\n / |   / | \\\nD  E  F  G  H    # WriterTeamMember\n\nNode \"F\" would have values:\n`[\n   { \"level\": \"WriterFamily\", \"position\": 0 },\n   { \"level\": \"WriterTeam\", \"position\": 1 },\n   { \"level\": \"WriterTeamMember\", \"position\": 0 }\n ]`",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Name of the level of hierarchy we are giving a position for.",
        "kind": "",
        "list": false,
        "name": "level",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "This credit's relative position within this level of the hierarchy.\nValues are zero-indexed.\nConsiders sibling nodes under the same parent, and not other nodes from the same level but\nwith different parents.",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditHierarchyDetail",
    "possibleTypes": []
  },
  "CreditHierarchyLevelDetail": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Count of the number of children beneath this node in the hierarchy.\nDoes not count children of children.\nIn the example above, the childCount for node \"C\" is 2 (counting nodes \"E\" and \"F\").",
        "kind": "",
        "list": false,
        "name": "childCount",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Unique ID for this displayable text.\nID will encode the titleId for this title as well as `levelsKey`, as each\ntitle can have different headers for their hierarchies.\nRequired as part of LocalizedDisplayableConcept interface to support caching.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Identifies a single node in a hierarchy, in xpath-like syntax\nFor the three-level Writer hierarchy, a levelsKey value would be \"WriterFamily[0].WriterTeam[1]\".\nThis corresponds to node \"C\" in the following hierarchy:\n\n[Root]\n|\nA\n| \\\nB  C\n|  | \\\nD  E  F\n\nWe only represent nodes with children with a CreditHierarchyLevelDetail. Leaf nodes would not be\nexpected to have a value, since their childCount is always zero.\nNull values are possible, for credit groups that have no inherent hierarchy but do have text to associate with\nthe credits. For example in Writers grouping, a series of hierarchical credits can be followed by unordered credits.\nThese are vended with no levelsKey but with other fields like text populated.",
        "kind": "",
        "list": false,
        "name": "levelsKey",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Descriptive text for this level of the hierarchy.\nFor Cast, we could expect en-US text of the form \"(in credits order) verified as complete\" and\n\"Rest of cast listed alphabetically\". Some levels will have no text to show, in which case we vend an\nempty text, not null.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditHierarchyLevelDetail",
    "possibleTypes": []
  },
  "CreditLevelCreditsFilterSet": {
    "args": [],
    "description": "Filters that apply to credits at the contributed credit level.\nEach specified filter is AND-ed together.\nFor filters that accept a list of values, the filter is an OR across that list, so any\ncredit matching one value meets the filter's criteria.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credits with attributes of \"(archive footage)\" or \"(archive sound)\".\nBy default, all credits are included, including those marked as \"(archive footage)\" or \"(archive sound)\".",
        "list": false,
        "name": "archived",
        "nullable": true,
        "type": "ArchivedOrUnarchivedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credited or uncredited credits only.\nBy default, all credits are included, including those marked as \"(uncredited)\".",
        "list": false,
        "name": "credited",
        "nullable": true,
        "type": "CreditedOrUncreditedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credits with specified role only.\nClients would typically fetch the credited role first from name.creditsV2.creditedRolesConnection then use the role text \nto filter credits in subsequent calls.\nBy default, all credits are included.",
        "list": false,
        "name": "creditedRole",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific credit groupings. Individual grouping IDs are found in name.creditGroupings responses.\nClients would often make a call to name.creditGroupings, retrieve an initial page of credits per grouping, then\nfetch additional pages using this API.\nCannot be used in conjunction with \"groupings\": a contributed credit can only have one of these values;\nif you specify values to include and exclude, the behaviour for unspecified values is ambiguous.\nBy default, credits for all groupings are included.",
        "list": true,
        "name": "excludeGroupings",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Drop credits that have at least one of the given traits on their credit category.\nBy default, credits are not filtered by trait.",
        "list": true,
        "name": "excludeTraits",
        "nullable": true,
        "type": "CreditCategoryTrait"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific credit groupings. Individual grouping IDs are found in name.creditGroupings responses.\nClients would often make a call to name.creditGroupings, retrieve an initial page of credits per grouping, then\nfetch additional pages using this API.\nCannot be used in conjunction with \"excludeGroupings\": a contributed credit can only have one of these values;\nif you specify values to include and exclude, the behaviour for unspecified values is ambiguous.\nBy default, credits for all groupings are included.",
        "list": true,
        "name": "groupings",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Keep credits that have at least one of the given traits on their credit category.\nBy default, credits are not filtered by trait.",
        "list": true,
        "name": "includeTraits",
        "nullable": true,
        "type": "CreditCategoryTrait"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter the returned groupings based on their relationship to the name's listed professions.\nBy default, credits are not filtered by professions.",
        "list": false,
        "name": "professions",
        "nullable": true,
        "type": "ProfessionsFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CreditLevelCreditsFilterSet",
    "possibleTypes": []
  },
  "CreditRestriction": {
    "args": [],
    "description": "Information about restrictions applied to Credits",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditRestriction",
    "possibleTypes": []
  },
  "CreditV2": {
    "args": [],
    "description": "Details of a credit for a name on a title. Distinct from Company Credits or Crazy Credits.\nSuccessor to Credit type.\nDenotes the role(s) a person had on a title.\nFields within this record may be aggregations or summaries of work done, depending on how the data was requested.\n\nWhen requesting credits for a series, roles performed on the episodes of that series are rolled up to the series level.\nEach rolled-up role comes with its own listing of the episodes that the role was performed on.\nIf the attributes of a role are not shared across all episodes, we drop that detail.\n* Example: Kaley Cuoco (nm0192505) was credited as Kaley Cuoco-Sweeting for some but not all episodes of\nThe Big Bang Theory (tt0898266). When viewing credits at the series level, this attribute is dropped. The attribute\nis still present at an episode level.\n\nCharacters and CreditedRoles for a series are ordered by most recent value first. This ensures a person's most recent\ncontribution to a title (and so the work they are most likely to demonstrate their skillset) is shown first.\nThis also helps to highlight the roles that users are likely to be exploring, particularly for long-running shows\nwhere acting roles change over time (for example, Saturday Night Live).\nNote that the ordering of these fields differs when using name.knownForV2 (see its documentation for details).\n\nAppearance credits (such as acting and self-appearances) are contributed to IMDb's catalog as a single credit per title.\n* Example: Ryan Reynolds (nm0005351) plays Deadpool and Nicepool in Deadpool & Wolverine (tt6263850).\nThis is different to crew credits, where a single person can have many roles on a title, even within a single\ncredit category.\n* Example: Hugh Wilson (nm0933505) is both screenplay and story writer for Down Periscope (tt0116130), and these are\ncaptured in the catalog as separate credits.\n\nThe CreditV2 shape maintains this distinction. For appearance credits, the individual roles played can be accessed\nindividually from the `CreditV2.creditedRoles.characters` field.\n\nWhen a person performs different appearance roles across episodes in a TV series, we maintain this cast-specific\ndifference in data shape. All appearance work is aggregated into a single CreditV2 entry, with a single\n`creditedRoles.text` value that includes up to 100 roles, and all roles available in the `characters` field.\n* Example: Kaley Cuoco (nm0192505) plays two different roles across episodes in The Big Bang Theory (tt0898266).\nThis is vended at the series level as a single credit with one `creditedRoles.text` (\"Penny/Penny Hofstatder\") and\ntwo character values ([\"Penny\", \"Penny Hofstatder\"]).\nCharacter names are ordered by their frequency across episodes, then by which occurs first in release order.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Number of items to return. Default is 10. Max is 100.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of credited roles and related details.\nOnly supports fetching an initial page of credits. To continue pagination, use name.creditedRoles  (yet to be built).",
        "kind": "",
        "list": false,
        "name": "creditedRoles",
        "nullable": true,
        "type": "CreditedRoleConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Default is unfiltered.",
            "kind": "EpisodeCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "EpisodeCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "Number of items to return. Default is 10. Max is 100.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Default is ascending by release date, series number, then episode number.",
            "kind": "EpisodeCreditsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodeCreditsSort"
          }
        ],
        "description": "Details of per-episode credits for when the parent credit is a series.\nOnly supports fetching an initial page of credits. To continue pagination, use name.episodeCredits (yet to be built).",
        "kind": "",
        "list": false,
        "name": "episodeCredits",
        "nullable": true,
        "type": "EpisodeCreditConnection"
      },
      {
        "args": [],
        "description": "Details of this credit position in its group's hierarchy, if any.\nIs only present when fetching credit data from a title source.\nSee CreditHierarchyDetail for details.",
        "kind": "",
        "list": true,
        "name": "hierarchyDetails",
        "nullable": true,
        "type": "CreditHierarchyDetail"
      },
      {
        "args": [],
        "description": "Opaque ID, suitable for caching this concept.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The person credited",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The title on which this credit appears",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditV2",
    "possibleTypes": []
  },
  "CreditV2Connection": {
    "args": [],
    "description": "Pagination for CreditV2 type",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of credits",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditV2Edge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditV2Connection",
    "possibleTypes": []
  },
  "CreditV2Edge": {
    "args": [],
    "description": "Page of credits",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Credit node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CreditV2"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CreditV2 4 out of 31. 1-indexed values",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditV2Edge",
    "possibleTypes": []
  },
  "CreditedAsCreditAttribute": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "creditedAs",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditedAsCreditAttribute",
    "possibleTypes": []
  },
  "CreditedCompanySearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles with companyIds ('co0764707' OR 'co0854530') PLUS 'co0005073' PLUS NOT 'co0921192',\nspecify anyCompanyIds: ['co0764707', 'co0854530'] plus allCompanyIds: ['co0005073'] plus excludeCompanyIds: ['co0921192']",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these companies",
        "list": true,
        "name": "allCompanyIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Used alongside the `anyCompanyIds` and/or `allCompanyIds` fields to match titles that have company credits for\nthe companyId(s) AND those credits are for ONE OF the categories specified.\n\nThis has no effect on `excludeCompanyIds`. Throws `GRAPHQL_VALIDATION_FAILED` if the field is used without\npassing in any companyIds (`anyCompanyIds` and/or `allCompanyIds`).\n\nExample: To match titles where co0005073 is the production company, you would specify allCompanyIds: ['co0005073']\nplus anyCompanyCategories: ['production']",
        "list": true,
        "name": "anyCompanyCategories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these companies",
        "list": true,
        "name": "anyCompanyIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain NONE of these companies\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeCompanyIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CreditedCompanySearchConstraint",
    "possibleTypes": []
  },
  "CreditedNameConstraint": {
    "args": [],
    "description": "Example: if you want to match titles with nameIds ('nm0634240' OR 'nm5397459') AND 'nm1139258' AND NOT 'nm0331516',\nspecify anyNameIds: ['nm0634240', 'nm5397459'], allNameIds: ['nm1139258'], and excludeNameIds: [nm0331516']",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these names",
        "list": true,
        "name": "allNameIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these names",
        "list": true,
        "name": "anyNameIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain NONE of these names\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeNameIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CreditedNameConstraint",
    "possibleTypes": []
  },
  "CreditedOrUncreditedFilter": {
    "args": [],
    "description": "Filter of Credited or Uncredited credits",
    "enumValues": [
      {
        "description": null,
        "name": "ALL_CREDITS"
      },
      {
        "description": null,
        "name": "CREDITED_ONLY"
      },
      {
        "description": null,
        "name": "UNCREDITED_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "CreditedOrUncreditedFilter",
    "possibleTypes": []
  },
  "CreditedRole": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Number of items to return. Default is unbounded, returning all attributes for this credit.",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of attributes related to this credited role.\nAttributes are ordered based on a fixed ordering of attribute type. We prioritise contextual information\n(like what segments of a title the role relates to and whether the person only appears in archive footage) over\ncredit accuracy markers (like whether the person is uncredited, rumored, or does not appear onscreen while still\nreceiving a credit).",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "CreditAttribute"
      },
      {
        "args": [],
        "description": "The category this role belongs to.\nWhen retrieving credits in the context of a name (such as name.knownForV2 field), the text's natural gender\nis chosen to match the gender of the person, if known.\ncategory.categoryId is always populated when accessed within this context.",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "false",
            "description": "Whether to disambiguate Self-category credits where it could be unclear if this is a self-role or not.\nFor example, on a title with a mix of acting and self appearances,\nsuch as Saturday Night Live (1975-) (https://www.imdb.com/title/tt0072562/).\n\nExample: for a character name of \"Host\" in the Self category\n- if disambiguateSelf = true, the name is returned as \"Self - Host\"\n- otherwise, the name is returned as \"Host\"\nAny character name including \"Himself/Herself/Themselves\" will not have a prefix added.\nWhere there are no character names, we will return a single name of \"Self\".",
            "kind": "Boolean",
            "list": false,
            "name": "disambiguateSelf",
            "nullable": true,
            "type": "Boolean"
          },
          {
            "defaultValue": "",
            "description": "Number of items to return. Default is 10. Max is 100.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "For appearance credits, a breakdown of multiple characters into individual strings. This field will be populated\nwith at least one value for all appearance credits, even where the credited role for that credit is blank (in\nwhich case we vend the category text as the role).\nFor crew credits, this field will always be null.\nAllows clients to display a subset of characters.\nOnly supports fetching an initial page of credits. To continue pagination, use name.characters (yet to be built).",
        "kind": "",
        "list": false,
        "name": "characters",
        "nullable": true,
        "type": "CharacterConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Allows for filtering in or out of credits based on several criteria.\nSee EpisodeCreditsFilter for details.\nIf not specified, no episode-level filtering is performed.\n\nFilters specified at a parent field level always take effect.\nFor example if calling title.creditsV2 with filter:{creditLevelFilter: { includeTraits:[\"CAST_TRAIT\"] }},\nthen only credits on episodes that feature this trait will be returned.",
            "kind": "EpisodeCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "EpisodeCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "Number of items to return. Max is 100.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Default is ascending by RELEASE_DATE sortBy. See EpisodeCreditsSortBy for details.",
            "kind": "EpisodeCreditsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodeCreditsSort"
          }
        ],
        "description": "Details of per-episode credits for when the parent credit is a series.\nOnly supports fetching an initial page of credits. To continue pagination, use name.episodeCredits (yet to be built).",
        "kind": "",
        "list": false,
        "name": "episodeCredits",
        "nullable": true,
        "type": "EpisodeCreditConnection"
      },
      {
        "args": [],
        "description": "Opaque ID, suitable for caching this concept.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [
          {
            "defaultValue": "false",
            "description": "Whether to disambiguate self credits where it could be unclear if this is a self-role or not.\nFor example, on a title with a mix of acting and self appearances,\nsuch as Saturday Night Live (1975-) (https://www.imdb.com/title/tt0072562/).\n\nExample: for a character name of \"Host\" in the Self category\n- if disambiguateSelf = true, the name is returned as \"Self - Host\"\n- otherwise, the name is returned as \"Host\"\nAny credited role including \"Himself/Herself/Themselves\" will not have a prefix added.\nWhere there is no credited role text, we will return \"Self\".",
            "kind": "Boolean",
            "list": false,
            "name": "disambiguateSelf",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Role this person performed on this title. Optional, as some roles are implicit or duplicate the category of the credit.\nSee CreditV2 for details of how aggregation of data applies to this field.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditedRole",
    "possibleTypes": []
  },
  "CreditedRoleConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of CreditedRole",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditedRoleEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditedRoleConnection",
    "possibleTypes": []
  },
  "CreditedRoleEdge": {
    "args": [],
    "description": "Page of CreditedRole",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the CreditedRole",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CreditedRole"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditedRoleEdge",
    "possibleTypes": []
  },
  "CreditedRoleSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Captures the ordering of credited roles within a CreditV2. This ensures consistent ordering of roles\nwhen a name has performed many different roles on a title. This is often seen on long-running series.\n\nThis is modelled as a string to allow for altering the list of allowed values over time. Supported values are:\n\nCREDITED_ROLE_IMPORTANCE: Credit ordering follows this priority sequence:\n1. Profession - The credit categories associated with the name's professions, in profession order\n2. Latest release date - For series, most recent episode release date that this credit applies to\n3. Episode count - For a series, higher episode counts appear first\n4. Credited status - Credited roles take precedence over uncredited\n5. Role - Alphabetical comparison of the credited role text\n6. Title ID - A final tie-break by episode title ID to ensure consistent ordering (largest first)\n\nCREDITED_ROLE_IMPORTANCE is the default.",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CreditedRoleSort",
    "possibleTypes": []
  },
  "CreditedWithNameEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID of the credited with name",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A credited with name item",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "CreditedWithNameItem"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: CreditedWithNameEdge 2 out of 10",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditedWithNameEdge",
    "possibleTypes": []
  },
  "CreditedWithNameItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The credited with name",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditedWithNameItem",
    "possibleTypes": []
  },
  "CreditedWithNamesConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of credited with names",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditedWithNameEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of credited with names",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditedWithNamesConnection",
    "possibleTypes": []
  },
  "CreditsCompletenessStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditsCompletenessStatus",
    "possibleTypes": []
  },
  "CreditsCompletenessStatusFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Excludes by returning null. Uses the following values: 'unknown', 'complete', 'complete_and_verified'",
        "list": true,
        "name": "excludeValues",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CreditsCompletenessStatusFilter",
    "possibleTypes": []
  },
  "CreditsModePreset": {
    "args": [],
    "description": "Captures several functional parameter choices in a single value, enabling consistent results across many callsites.\n\nA CreditsModePreset can provide settings for filter, sort, and other functional inputs.\nClients can still provide additional filters, but the preset may override or conflict with them.",
    "enumValues": [
      {
        "description": "Credits are filtered to remove mention of passive roles, such as Thanks and Archive Footage.\nNames are typically not known for roles where they were passively involved in the title.",
        "name": "KNOWN_FOR"
      },
      {
        "description": "Applies the filters from \"KNOWN_FOR\". Additionally, contributed credits are\naggregated to the category level. If a name has performed several different Producer roles across episodes in a\nTV series, these would be presented as a single CreditedRole within the CreditV2 response value for that title.",
        "name": "KNOWN_FOR_WITH_CATEGORY_AGGREGATION"
      },
      {
        "description": "No preset is used",
        "name": "NONE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "CreditsModePreset",
    "possibleTypes": []
  },
  "CreditsOrderedBy": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CreditsOrderedBy",
    "possibleTypes": []
  },
  "Crew": {
    "args": [],
    "description": "Crew details",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "CreditAttribute"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodeCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "EpisodeCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodeCreditsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodeCreditsSort"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "episodeCredits",
        "nullable": true,
        "type": "EpisodeCrewConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of job and related Attributes",
        "kind": "",
        "list": true,
        "name": "jobDetails",
        "nullable": true,
        "type": "CrewJobDetails"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of jobs (e.g. 'Executive Producer')\nOpen questions: the name of this field comes from TitleCreditsBaseV5. Should we change it?",
        "kind": "",
        "list": true,
        "name": "jobs",
        "nullable": true,
        "type": "CrewJob"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Crew",
    "possibleTypes": []
  },
  "CrewJob": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CrewJob",
    "possibleTypes": []
  },
  "CrewJobDetails": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of attributes related to the Job",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "CreditAttribute"
      },
      {
        "args": [],
        "description": "Crew Job as a standardized displayableProperty",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": true,
        "type": "CrewJobDisplayableProperty"
      },
      {
        "args": [],
        "description": "Job information",
        "kind": "",
        "list": false,
        "name": "job",
        "nullable": false,
        "type": "CrewJob"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CrewJobDetails",
    "possibleTypes": []
  },
  "CrewJobDisplayableProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The crew job text qualifiers in Markdown such as uncredited, voice etc.",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "Displayable text for Job and attribute",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CrewJobDisplayableProperty",
    "possibleTypes": []
  },
  "CroppingParameters": {
    "args": [],
    "description": "Parameters used to define how an image should be cropped",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The height of the cropped image",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The width of the cropped image",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The x-coordinate by which to offset the crop box",
        "kind": "",
        "list": false,
        "name": "xOffset",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The y-coordinate by which to offset the crop box",
        "kind": "",
        "list": false,
        "name": "yOffset",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CroppingParameters",
    "possibleTypes": []
  },
  "CurrentProductionStatusStageConstraint": {
    "args": [],
    "description": "Example: if you want to match titles with production status stages\n('in_development' OR 'pre_production') AND NOT 'abandoned',\nspecify anyProductionStageIds: ['in_development', 'pre_production'], and excludeProductionStageIds: ['abandoned']",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these production status stages",
        "list": true,
        "name": "anyProductionStageIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain NONE of these production status stages\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeProductionStageIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "CurrentProductionStatusStageConstraint",
    "possibleTypes": []
  },
  "CustomFeaturedImages": {
    "args": [],
    "description": "Featured images that customer selected manually",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "images",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [],
        "description": "True if data status is EDITED",
        "kind": "",
        "list": false,
        "name": "isAdminEdited",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "isAdminNotificationSeen",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if data status is BLOCKED",
        "kind": "",
        "list": false,
        "name": "isBlocked",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if custom selections within this type should override automatic ones",
        "kind": "",
        "list": false,
        "name": "isPublished",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if data status is RESET",
        "kind": "",
        "list": false,
        "name": "isReset",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "lastEdited",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "lastEditedByAdmin",
        "nullable": true,
        "type": "DateTime"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CustomFeaturedImages",
    "possibleTypes": []
  },
  "CustomKnownFor": {
    "args": [],
    "description": "Known for titles that customer selected manually",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "True if data status is EDITED",
        "kind": "",
        "list": false,
        "name": "isAdminEdited",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "isAdminNotificationSeen",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if data status is BLOCKED",
        "kind": "",
        "list": false,
        "name": "isBlocked",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if custom selections within this type should override automatic ones",
        "kind": "",
        "list": false,
        "name": "isPublished",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if data status is RESET",
        "kind": "",
        "list": false,
        "name": "isReset",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "lastEdited",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "lastEditedByAdmin",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Known for titles that customer selected manually last time. Max number of titles is 4",
        "kind": "",
        "list": true,
        "name": "titles",
        "nullable": true,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CustomKnownFor",
    "possibleTypes": []
  },
  "CustomPrimaryImage": {
    "args": [],
    "description": "Primary image that the name owner had edited",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Parameters used to define the cropping on the image",
        "kind": "",
        "list": false,
        "name": "imageEditParameters",
        "nullable": true,
        "type": "ImageEditParameters"
      },
      {
        "args": [],
        "description": "The original image, without any cropping or rotation customizations applied",
        "kind": "",
        "list": false,
        "name": "originalImage",
        "nullable": false,
        "type": "Image"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "CustomPrimaryImage",
    "possibleTypes": []
  },
  "Date": {
    "args": [],
    "description": "A date string in the ISO-8601 format: https://www.iso.org/iso-8601-date-and-time-format.html",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "SCALAR",
    "name": "Date",
    "possibleTypes": []
  },
  "DateComponents": {
    "args": [],
    "description": "A type to represent dates that cannot be represented in ISO 8601 format, e.g. missing year in 23 March.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The day as per Gregorian calendar.",
        "kind": "",
        "list": false,
        "name": "day",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "If the date is approximate, e.g. circa 370 BC.",
        "kind": "",
        "list": false,
        "name": "isApproximate",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "If the date is before Common Era as per Gregorian calendar.",
        "kind": "",
        "list": false,
        "name": "isBCE",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The month of the date as per Gregorian calendar.",
        "kind": "",
        "list": false,
        "name": "month",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The year of the date as per Gregorian calendar, can contain non-numerical\nwildcard to signify decade or century, e.g. 1 May 197?.",
        "kind": "",
        "list": false,
        "name": "partialYear",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "The year of the date as per Gregorian calendar.",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DateComponents",
    "possibleTypes": []
  },
  "DateRange": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "end",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "start",
        "nullable": true,
        "type": "Date"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DateRange",
    "possibleTypes": []
  },
  "DateTime": {
    "args": [],
    "description": "A datetime string in the ISO-8601 format: https://www.iso.org/iso-8601-date-and-time-format.html\n(e.g. 2020-05-11T18:15:55Z)",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "SCALAR",
    "name": "DateTime",
    "possibleTypes": []
  },
  "DeathDateSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "deathDateRange",
        "nullable": false,
        "type": "DateRange"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DeathDateSearchConstraint",
    "possibleTypes": []
  },
  "DeathPlaceSearchConstraint": {
    "args": [],
    "description": "Matches names based on where they died.\nThere is no fuzzy matching.\nFor example: 'Venice Italy' will be matched by 'Venice' and 'Italy' but not 'Venice Ita'",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "deathPlace",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DeathPlaceSearchConstraint",
    "possibleTypes": []
  },
  "DeletionDialogInput": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Retrieve the dialog for confirming deletion",
        "name": "CONFIRM"
      },
      {
        "description": "Retrieve the dialog for requesting deletion",
        "name": "REQUEST"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "DeletionDialogInput",
    "possibleTypes": []
  },
  "DeletionDialogOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "deletionPrompt",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "A prompt to instruct Amazon Account Pool customers to initiate the deletion process on Amazon page.\nNull if not Amazon Account Pool customers.",
        "kind": "",
        "list": false,
        "name": "redirectionPrompt",
        "nullable": true,
        "type": "DeletionDialogRedirectionPrompt"
      },
      {
        "args": [],
        "description": "For REQUEST dialogs, this will be the requestId to pass in to requestAccountDeletion\nmutation. This is not needed for other types of dialogs.",
        "kind": "",
        "list": false,
        "name": "requestId",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DeletionDialogOutput",
    "possibleTypes": []
  },
  "DeletionDialogRedirectionPrompt": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Link to the Amazon page.",
        "kind": "",
        "list": false,
        "name": "action",
        "nullable": false,
        "type": "RedirectLink"
      },
      {
        "args": [],
        "description": "Text to instruct customers to initiate the deletion process on Amazon page.",
        "kind": "",
        "list": false,
        "name": "message",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DeletionDialogRedirectionPrompt",
    "possibleTypes": []
  },
  "Demographic": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "age",
        "nullable": true,
        "type": "Age"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "Country"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "displayText",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "gender",
        "nullable": true,
        "type": "Gender"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "userCategory",
        "nullable": true,
        "type": "UserCategory"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Demographic",
    "possibleTypes": []
  },
  "DemographicDataComponent": {
    "args": [],
    "description": "A single component of a demographic data value",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The id of the demographic data component e.g. asian",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the displayable text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized displayable text of the demographic data component e.g. Asian",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DemographicDataComponent",
    "possibleTypes": []
  },
  "DemographicDataFilter": {
    "args": [],
    "description": "Common input type for filtering demographic data items",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Types to exclude in the response items (mutually exclusive to 'includeTypes')",
        "list": true,
        "name": "excludeTypes",
        "nullable": true,
        "type": "DemographicDataTypeValue"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Types to include in the response items (mutually exclusive to 'excludeTypes')",
        "list": true,
        "name": "includeTypes",
        "nullable": true,
        "type": "DemographicDataTypeValue"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "If set to true returns selfVerified items only, if set to false returns non-selfVerified items only",
        "list": false,
        "name": "selfVerified",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Visibility levels to include in the response items",
        "list": false,
        "name": "visibility",
        "nullable": true,
        "type": "VisibilityLevel"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DemographicDataFilter",
    "possibleTypes": []
  },
  "DemographicDataItem": {
    "args": [],
    "description": "A single demographic data item",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The selfVerified status of the demographic data item",
        "kind": "",
        "list": false,
        "name": "selfVerified",
        "nullable": false,
        "type": "SelfVerified"
      },
      {
        "args": [],
        "description": "The type of the demographic data item",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "DemographicDataType"
      },
      {
        "args": [],
        "description": "The value of the demographic data item",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "DemographicDataValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DemographicDataItem",
    "possibleTypes": []
  },
  "DemographicDataType": {
    "args": [],
    "description": "A single demographic data type",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The id of the demographic data type e.g. gender_identity",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the displayable text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized displayable text of the demographic data type e.g. Gender Identity",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The enum value for the demographic data type",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "DemographicDataTypeValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DemographicDataType",
    "possibleTypes": []
  },
  "DemographicDataTypeValue": {
    "args": [],
    "description": "Enum values for the valid demographic data types",
    "enumValues": [
      {
        "description": null,
        "name": "BIRTH_DATE"
      },
      {
        "description": null,
        "name": "BIRTH_YEAR"
      },
      {
        "description": null,
        "name": "CITIZENSHIP"
      },
      {
        "description": null,
        "name": "DISABILITY"
      },
      {
        "description": null,
        "name": "ETHNICITY"
      },
      {
        "description": null,
        "name": "GENDER_IDENTITY"
      },
      {
        "description": null,
        "name": "IDENTIFIES_AS_DISABLED"
      },
      {
        "description": null,
        "name": "IDENTIFIES_AS_TRANSGENDER"
      },
      {
        "description": null,
        "name": "NATIONALITY"
      },
      {
        "description": null,
        "name": "PRONOUN"
      },
      {
        "description": null,
        "name": "SEXUAL_ORIENTATION"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "DemographicDataTypeValue",
    "possibleTypes": []
  },
  "DemographicDataValue": {
    "args": [],
    "description": "A single demographic data value",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The individual components that make up the value",
        "kind": "",
        "list": true,
        "name": "components",
        "nullable": false,
        "type": "DemographicDataComponent"
      },
      {
        "args": [],
        "description": "The id of the demographic data value e.g. male",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the displayable text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized displayable text of the demographic data value e.g. Male",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DemographicDataValue",
    "possibleTypes": []
  },
  "DemographicFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "age",
        "nullable": true,
        "type": "Age"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "Country"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "gender",
        "nullable": true,
        "type": "Gender"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "userCategory",
        "nullable": true,
        "type": "UserCategory"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DemographicFilter",
    "possibleTypes": []
  },
  "DemographicRatings": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "aggregate",
        "nullable": true,
        "type": "Float"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "demographic",
        "nullable": false,
        "type": "Demographic"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "voteCount",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DemographicRatings",
    "possibleTypes": []
  },
  "DeviceInfo": {
    "args": [],
    "description": "Device info used in the display and video ads flows for apps.\nThis information is used upstream in Amazon Advertising systems for targeting and metrics.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Carrier of the device (eg. AT&T)",
        "list": false,
        "name": "carrier",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The make of the device the request originates from (eg. Samsung)",
        "list": false,
        "name": "make",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The model of the device the request originates from (eg. Galaxy S4)",
        "list": false,
        "name": "model",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The OS type of the device the request originates from (eg. iOS)",
        "list": false,
        "name": "os",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The OS version of the device the request originates from (eg. 4.4.2)",
        "list": false,
        "name": "osVersion",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Scaling Factor of the phone screen (eg. 3.0)",
        "list": false,
        "name": "scalingFactor",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DeviceInfo",
    "possibleTypes": []
  },
  "DirectContactDetails": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "emailAddress",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "faxNumber",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "phoneNumbers",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "website",
        "nullable": true,
        "type": "WebsiteLink"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DirectContactDetails",
    "possibleTypes": []
  },
  "Disambiguation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "number",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Disambiguation",
    "possibleTypes": []
  },
  "DisplayAdTargetingParameters": {
    "args": [],
    "description": "Required and optional parameters used to make an AAX request that come from the context of the client.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The layout of the page being targeted, indicating the slots it supports.",
        "list": false,
        "name": "adLayout",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The primary const of the page element being targeted for ads.",
        "list": false,
        "name": "pageConst",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A list of ad slots that are eligible to be refreshed (i.e. render new ads on a set interval).",
        "list": true,
        "name": "refreshableSlots",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The subSectionType of a special section - i.e. 'winners' is a subSectionType under 'oscars' special section.",
        "list": false,
        "name": "subSectionType",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DisplayAdTargetingParameters",
    "possibleTypes": []
  },
  "DisplayAdsForAppInput": {
    "args": [],
    "description": "Required parameters used to make an AAX request that come from the context of the app client.\nIncludes app-specific parameters and general targeting parameters.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A set of parameters needed from app clients to target ads.\nThese parameters are used in both display and video ad flows.",
        "list": false,
        "name": "adParametersApp",
        "nullable": false,
        "type": "AdParametersApp"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A set of parameters used to target display ads across all site variants.",
        "list": false,
        "name": "displayAdTargetingParameters",
        "nullable": false,
        "type": "DisplayAdTargetingParameters"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DisplayAdsForAppInput",
    "possibleTypes": []
  },
  "DisplayLabels": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "primaryLabel",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "secondaryLabel",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayLabels",
    "possibleTypes": []
  },
  "DisplayableArticle": {
    "args": [],
    "description": "Generic type for a display-ready article representation of the parent type",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An optional body for the article",
        "kind": "",
        "list": false,
        "name": "body",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "An optional footer for the article",
        "kind": "",
        "list": false,
        "name": "footer",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "An optional header for the article",
        "kind": "",
        "list": false,
        "name": "header",
        "nullable": true,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableArticle",
    "possibleTypes": []
  },
  "DisplayableAttribute": {
    "args": [],
    "description": "Generic type for a concept which has display text and an optional ID",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Type token",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableAttribute",
    "possibleTypes": []
  },
  "DisplayableAwardedEntity": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableAwardedEntity",
    "possibleTypes": []
  },
  "DisplayableBirthNameProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableBirthNameProperty",
    "possibleTypes": []
  },
  "DisplayableCountry": {
    "args": [],
    "description": "Type for the display of a country",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The country code - either an ISO 3166 code or an internally defined code if no ISO code exists for that country.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Display text for the country (e.g. 'United States').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableCountry",
    "possibleTypes": []
  },
  "DisplayableDate": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A date in ISO 8601.",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "Details of the individual date components, usually when ISO date is not available.",
        "kind": "",
        "list": false,
        "name": "dateComponents",
        "nullable": true,
        "type": "DateComponents"
      },
      {
        "args": [],
        "description": "The date as a displayable property, e.g. '23 June 1970'",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableDateProperty"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableDate",
    "possibleTypes": []
  },
  "DisplayableDateProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Language of the displayed value.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "A complete, formatted date that can be displayed.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableDateProperty",
    "possibleTypes": []
  },
  "DisplayableDateRange": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Filming end date, use displayableProperty for localized value",
        "kind": "",
        "list": false,
        "name": "endDate",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "Filming start date, use displayableProperty for localized value",
        "kind": "",
        "list": false,
        "name": "startDate",
        "nullable": true,
        "type": "DisplayableDate"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableDateRange",
    "possibleTypes": []
  },
  "DisplayableEpisodeNumber": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Displayable season number/text as a standardized localizedDisplayableConcept",
        "kind": "",
        "list": false,
        "name": "displayableSeason",
        "nullable": false,
        "type": "LocalizedDisplayableSeason"
      },
      {
        "args": [],
        "description": "Displayable episode number as a standardized localizedDisplayableConcept",
        "kind": "",
        "list": false,
        "name": "episodeNumber",
        "nullable": false,
        "type": "LocalizedDisplayableEpisodeNumber"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableEpisodeNumber",
    "possibleTypes": []
  },
  "DisplayableExternalLinkProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The external link as a markdown object",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableExternalLinkProperty",
    "possibleTypes": []
  },
  "DisplayableFeaturedCreditedRole": {
    "args": [],
    "description": "Featured roles represents common roles associated with credit category.\nCan be used in search scenario to suggest role values for selected credit category.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableFeaturedCreditedRole",
    "possibleTypes": []
  },
  "DisplayableLanguage": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The language code - either an ISO 639 code or an internally defined code if no ISO code exists for the language.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Display text for the language (e.g. 'American English').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableLanguage",
    "possibleTypes": []
  },
  "DisplayableLocation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The location as a displayable property, e.g. 'Shawnee, Oklahoma, USA'",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableLocationProperty"
      },
      {
        "args": [],
        "description": "Location text.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableLocation",
    "possibleTypes": []
  },
  "DisplayableLocationProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Language of the displayed value.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "A complete, formatted location that can be displayed.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableLocationProperty",
    "possibleTypes": []
  },
  "DisplayableNameAgeDetailsProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Name's age value that can be displayed",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNameAgeDetailsProperty",
    "possibleTypes": []
  },
  "DisplayableNameAkaProperty": {
    "args": [],
    "description": "Name AKA as a Displayable Property",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The displayable name aka",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNameAkaProperty",
    "possibleTypes": []
  },
  "DisplayableNameDeathCause": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The cause of death as a displayable property, e.g. 'accidental drowning'",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNameDeathCauseProperty"
      },
      {
        "args": [],
        "description": "The cause of death of a person.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNameDeathCause",
    "possibleTypes": []
  },
  "DisplayableNameDeathCauseProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Language of the displayed value.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The cause of death property that can be displayed.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNameDeathCauseProperty",
    "possibleTypes": []
  },
  "DisplayableNameFilmBiographyProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The biographical title about the person.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNameFilmBiographyProperty",
    "possibleTypes": []
  },
  "DisplayableNameHeightProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNameHeightProperty",
    "possibleTypes": []
  },
  "DisplayableNameOtherWorkProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The work qualifiers, e.g. ['2009', 'Stage']",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The details of the work this person was involved in",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNameOtherWorkProperty",
    "possibleTypes": []
  },
  "DisplayableNamePortrayalProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The title in which the person was portrayed by an actor.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNamePortrayalProperty",
    "possibleTypes": []
  },
  "DisplayableNamePrintBiographyProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The biographical book formatted as <Author>. <Title>. <Publisher>. ISBN: <ISBN>",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNamePrintBiographyProperty",
    "possibleTypes": []
  },
  "DisplayableNameSpouseProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "A list of qualifiers including the time range, number of children, e.g. (9 July 2009 - 16 October 2018) (1 child)",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The spouse name as plain text, or as nmconst link if person is an IMDb name",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNameSpouseProperty",
    "possibleTypes": []
  },
  "DisplayableNickNameProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableNickNameProperty",
    "possibleTypes": []
  },
  "DisplayableProfession": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableProfession",
    "possibleTypes": []
  },
  "DisplayableProfessionCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableProfessionCategory",
    "possibleTypes": []
  },
  "DisplayableProfessionDescription": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableProfessionDescription",
    "possibleTypes": []
  },
  "DisplayablePrompt": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "constId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "display",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "promptType",
        "nullable": false,
        "type": "PromptType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayablePrompt",
    "possibleTypes": []
  },
  "DisplayablePublicityListingProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name and region of the publication. e.g The New York Post (US)",
        "kind": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The title of the publication, and optional date and authorship, in a display ready format",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayablePublicityListingProperty",
    "possibleTypes": []
  },
  "DisplayableRelationNameProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The displayable relative name",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableRelationNameProperty",
    "possibleTypes": []
  },
  "DisplayableSalaryProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The title for which this salary applies.",
        "kind": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The salary as a diplayable properity.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableSalaryProperty",
    "possibleTypes": []
  },
  "DisplayableSeasonConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of DisplayableSeason",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "DisplayableSeasonEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableSeasonConnection",
    "possibleTypes": []
  },
  "DisplayableSeasonEdge": {
    "args": [],
    "description": "Page of DisplayableSeason",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the DisplayableSeason",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "LocalizedDisplayableSeason"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: DisplayableSeason 4 out of 8",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableSeasonEdge",
    "possibleTypes": []
  },
  "DisplayableSeasonsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Ascending sorted in increasing order by numerical seasons\nfollowed by non-numerical season in alphabetical order e.g. [1, 2, 3, C, D]\n\nDescending sorting in decreasing order by numerical seasons\nfollowed by non-numerical season in reverse alphabetical order e.g. [3, 2, 1, D, C]",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DisplayableSeasonsSort",
    "possibleTypes": []
  },
  "DisplayableSongTitle": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Type token",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableSongTitle",
    "possibleTypes": []
  },
  "DisplayableSpouseTimeRange": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The time range as a localised, displayable property, e.g. '12 janvier 2020 - pr\u00e9sent'",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableSpouseTimeRangeProperty"
      },
      {
        "args": [],
        "description": "The start date of this time range",
        "kind": "",
        "list": false,
        "name": "fromDate",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "The end date of this time range",
        "kind": "",
        "list": false,
        "name": "toDate",
        "nullable": true,
        "type": "DisplayableDate"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableSpouseTimeRange",
    "possibleTypes": []
  },
  "DisplayableSpouseTimeRangeProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Language of the displayed value.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "A complete, formatted time range that can be displayed.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableSpouseTimeRangeProperty",
    "possibleTypes": []
  },
  "DisplayableTechnicalSpecificationLocalizedProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTechnicalSpecificationLocalizedProperty",
    "possibleTypes": []
  },
  "DisplayableTechnicalSpecificationProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTechnicalSpecificationProperty",
    "possibleTypes": []
  },
  "DisplayableTitleAkaProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The country of the alternative title text",
        "kind": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The language of this title text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The alternative title text qualifiers such as 'Alternative Title' and 'Working Title'",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The alternative title text",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleAkaProperty",
    "possibleTypes": []
  },
  "DisplayableTitleCompanyCreditProperty": {
    "args": [],
    "description": "Company credit displayable property",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The company credit qualifiers, e.g. ['2009', 'Netherlands', 'Blu-ray']",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The company credit value as link in Markdown",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleCompanyCreditProperty",
    "possibleTypes": []
  },
  "DisplayableTitleCountryOfOriginProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The country of origin (e.g. 'United States')",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleCountryOfOriginProperty",
    "possibleTypes": []
  },
  "DisplayableTitleFilmingLocationProperty": {
    "args": [],
    "description": "Filming location displayable property",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The filming location qualifiers such as 'Butch in his car encounters Marsellus Wallace' and 'Exterior'",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The filming location localized text",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleFilmingLocationProperty",
    "possibleTypes": []
  },
  "DisplayableTitleGenreProperty": {
    "args": [],
    "description": "Genre displayable property",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The language the text is written in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The genre Markdown",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleGenreProperty",
    "possibleTypes": []
  },
  "DisplayableTitleReleaseDateProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The country in Markdown",
        "kind": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The release date qualifiers in Markdown such as internet, re-release, and Digital Film Festival",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The formatted release date in Markdown",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleReleaseDateProperty",
    "possibleTypes": []
  },
  "DisplayableTitleRuntimeProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "qualifiersInMarkdownList",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleRuntimeProperty",
    "possibleTypes": []
  },
  "DisplayableTitleSpokenLanguageProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The language of the display text.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Display text for the language (e.g. 'English').",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleSpokenLanguageProperty",
    "possibleTypes": []
  },
  "DisplayableTitleTaglineProperty": {
    "args": [],
    "description": "Tagline displayable property",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The tagline Markdown",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleTaglineProperty",
    "possibleTypes": []
  },
  "DisplayableTitleTypeProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The title type Markdown",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableTitleTypeProperty",
    "possibleTypes": []
  },
  "DisplayableYearConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of DisplayableYear",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "DisplayableYearEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableYearConnection",
    "possibleTypes": []
  },
  "DisplayableYearEdge": {
    "args": [],
    "description": "Page of DisplayableYear",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the DisplayableYear",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "LocalizedDisplayableEpisodeYear"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: DisplayableYear 4 out of 8",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DisplayableYearEdge",
    "possibleTypes": []
  },
  "DisplayableYearsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Ascending sorting in increasing order by numerical years\nfollowed by non-numerical in alphabetical order e.g. [2015, 2018, 2020, UNKNOWN]\n\nDescending sorting in decreasing order by numerical years\nfollowed by non-numerical in reverse alphabetical order e.g. [2020, 2018, 2015, 2018, UNKNOWN]",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "DisplayableYearsSort",
    "possibleTypes": []
  },
  "DistanceToCinema": {
    "args": [],
    "description": "The distance from a requested location to a cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Integer representing the distance from the requested location to the cinema in meters.",
        "kind": "",
        "list": false,
        "name": "distanceInMeters",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Unique identifier for this distance.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the distance display text.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Localized text indicating the distance from the requested location to the cinema.\ne.g. `3 miles` or `4.8 km`.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DistanceToCinema",
    "possibleTypes": []
  },
  "DistributionFormat": {
    "args": [],
    "description": "The distribution format of a title",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The id of the distribution format.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the distribution format",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Display text for the distribution format (e.g. 'Blu-ray').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "DistributionFormat",
    "possibleTypes": []
  },
  "EmailPreference": {
    "args": [],
    "description": "Represents a user's preference for a specific type of email notification.\nContains both the notification details (title, description) and the user's subscription status.\nEach preference represents a specific email topic that a user can subscribe to or opt out from.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Detailed explanation of what this email notification contains.",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "Unique identifier for this email preference.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Indicates whether the user is currently subscribed to this email notification.\ntrue means the user will receive emails, false means the user has opted out.",
        "kind": "",
        "list": false,
        "name": "subscribed",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Display name of the email notification.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EmailPreference",
    "possibleTypes": []
  },
  "EmailPreferences": {
    "args": [],
    "description": "Represents all email notification preferences for a user.\nContains a master marketing preference toggle and categorized lists of specific email preferences.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "User's overall marketing email preference.\nWhen false, the user is opted out of ALL marketing emails regardless of individual preferences.\nWhen true, individual marketing preferences determine which specific marketing emails the user receives.",
        "kind": "",
        "list": false,
        "name": "allMarketingPreference",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "List of marketing email preferences available to the user.\nThese are promotional emails that are subject to the allMarketingPreference.\nResults are ordered alphabetically by email preference id.",
        "kind": "",
        "list": true,
        "name": "marketingPreferences",
        "nullable": false,
        "type": "EmailPreference"
      },
      {
        "args": [],
        "description": "List of subscription email preferences available to the user.\nThese are subscription emails that are not affected by the allMarketingPreference toggle.\nResults are ordered alphabetically by email preference id.",
        "kind": "",
        "list": true,
        "name": "subscriptionPreferences",
        "nullable": false,
        "type": "EmailPreference"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EmailPreferences",
    "possibleTypes": []
  },
  "EmployeeBranchName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The unique identifier for the branch name",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language that the text is in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The name of the branch",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EmployeeBranchName",
    "possibleTypes": []
  },
  "EmploymentConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "EmploymentEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EmploymentConnection",
    "possibleTypes": []
  },
  "EmploymentEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "PersonalEmployment"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EmploymentEdge",
    "possibleTypes": []
  },
  "EngagementStatistics": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The follower statistics for a followable entity. Follower stats will not be vended if the count is below 1000.",
        "kind": "",
        "list": false,
        "name": "followerStatistics",
        "nullable": true,
        "type": "FollowerStatistics"
      },
      {
        "args": [],
        "description": "The watchlist statistics for a title. Watchlist stats will not be vended if the count is below 1000.",
        "kind": "",
        "list": false,
        "name": "watchlistStatistics",
        "nullable": true,
        "type": "WatchlistStatistics"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EngagementStatistics",
    "possibleTypes": []
  },
  "EpisodeCastConnection": {
    "args": [],
    "description": "Pagination for Cast credit type on a Cast credit (for episode credits of a series title).",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All of the characters in this list of Cast credits",
        "kind": "",
        "list": true,
        "name": "characters",
        "nullable": true,
        "type": "Character"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The seasons of episodes in the connection\n\nSorted in increasing order by numerical seasons\nfollowed by non-numerical season in alphabetical order e.g. [1, 2, 3, C, D]",
        "kind": "",
        "list": false,
        "name": "displayableSeasons",
        "nullable": true,
        "type": "DisplayableSeasonConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The years of episodes in the connection\n\nSorted in increasing order by numerical years\nfollowed by non-numerical in alphabetical order e.g. [2015, 2018, 2020, UNKNOWN]",
        "kind": "",
        "list": false,
        "name": "displayableYears",
        "nullable": true,
        "type": "DisplayableYearConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The earliest and latest release years for the Title(s) in these credits. If these would be the same,\nonly a single year is populated.",
        "kind": "",
        "list": false,
        "name": "yearRange",
        "nullable": true,
        "type": "YearRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EpisodeCastConnection",
    "possibleTypes": []
  },
  "EpisodeConnection": {
    "args": [],
    "description": "Pagination for Episode types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of episodes",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "EpisodeEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EpisodeConnection",
    "possibleTypes": []
  },
  "EpisodeCreditConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The seasons of episodes in the connection\n\nSorted in increasing order by numerical seasons\nfollowed by non-numerical season in alphabetical order e.g. [1, 2, 3, C, D]\nField is null when no season information is present on the associated episodes.",
        "kind": "",
        "list": false,
        "name": "displayableSeasons",
        "nullable": true,
        "type": "DisplayableSeasonConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The years of episodes in the connection\n\nSorted in increasing order by numerical years\nfollowed by non-numerical in alphabetical order e.g. [2015, 2018, 2020, UNKNOWN].\nField is null when no year information is present on the associated episodes.",
        "kind": "",
        "list": false,
        "name": "displayableYears",
        "nullable": true,
        "type": "DisplayableYearConnection"
      },
      {
        "args": [],
        "description": "Results are sorted by release date ascending.",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditV2Edge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The earliest and latest release years for the Title(s) in these credits. If these would be the same,\nonly a single year is populated.\nField is null when no year information is present on the associated episodes.",
        "kind": "",
        "list": false,
        "name": "yearRange",
        "nullable": true,
        "type": "YearRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EpisodeCreditConnection",
    "possibleTypes": []
  },
  "EpisodeCreditsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "episodes",
        "nullable": true,
        "type": "EpisodesFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "EpisodeCreditsFilter",
    "possibleTypes": []
  },
  "EpisodeCreditsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "EpisodeCreditsSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "EpisodeCreditsSort",
    "possibleTypes": []
  },
  "EpisodeCreditsSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Episode ordering follows this priority sequence:\n1. Release date\n2. Series number\n3. Episode number.",
        "name": "RELEASE_DATE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "EpisodeCreditsSortBy",
    "possibleTypes": []
  },
  "EpisodeCrewConnection": {
    "args": [],
    "description": "Pagination for Crew credit type on a Crew credit (for episode credits of a series title).",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The seasons of episodes in the connection\n\nSorted in increasing order by numerical seasons\nfollowed by non-numerical season in alphabetical order e.g. [1, 2, 3, C, D]",
        "kind": "",
        "list": false,
        "name": "displayableSeasons",
        "nullable": true,
        "type": "DisplayableSeasonConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The years of episodes in the connection\n\nSorted in increasing order by numerical years\nfollowed by non-numerical in alphabetical order e.g. [2015, 2018, 2020, UNKNOWN]",
        "kind": "",
        "list": false,
        "name": "displayableYears",
        "nullable": true,
        "type": "DisplayableYearConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditEdge"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All of the jobs in this list of Crew credits",
        "kind": "",
        "list": true,
        "name": "jobs",
        "nullable": true,
        "type": "CrewJob"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The earliest and latest release years for the Title(s) in these credits. If these would be the same,\nonly a single year is populated.",
        "kind": "",
        "list": false,
        "name": "yearRange",
        "nullable": true,
        "type": "YearRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EpisodeCrewConnection",
    "possibleTypes": []
  },
  "EpisodeEdge": {
    "args": [],
    "description": "Page of episodes",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An episode node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Position of the node in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EpisodeEdge",
    "possibleTypes": []
  },
  "EpisodeNumberDisplayableProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EpisodeNumberDisplayableProperty",
    "possibleTypes": []
  },
  "EpisodeReleaseDate": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "day",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "month",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "year",
        "nullable": false,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "EpisodeReleaseDate",
    "possibleTypes": []
  },
  "Episodes": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "DisplayableSeasonsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "DisplayableSeasonsSort"
          }
        ],
        "description": "  Displayable season as a standardized localizedDisplayableConcept\n\u200b\n  Sorting is ascending by default.",
        "kind": "",
        "list": false,
        "name": "displayableSeasons",
        "nullable": true,
        "type": "DisplayableSeasonConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "DisplayableYearsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "DisplayableYearsSort"
          }
        ],
        "description": "Displayable year as a standardized localizedDisplayableConcept\n\nSorting in ascending by default.",
        "kind": "",
        "list": false,
        "name": "displayableYears",
        "nullable": true,
        "type": "DisplayableYearConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "EpisodesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodesSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodesSort"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "episodes",
        "nullable": true,
        "type": "EpisodeConnection"
      },
      {
        "args": [],
        "description": "A boolean flag that indicates if the series is ongoing (i.e. it has an unknown number of future episodes).",
        "kind": "",
        "list": false,
        "name": "isOngoing",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Episodes",
    "possibleTypes": []
  },
  "EpisodesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out season values e.g. ['1', '2', 'unknown']",
        "list": true,
        "name": "excludeSeasons",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for season values e.g. ['1', '2', 'unknown']",
        "list": true,
        "name": "includeSeasons",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for episodes with release date newer or equal the given date excluding episodes with unknown release date",
        "list": false,
        "name": "releasedOnOrAfter",
        "nullable": true,
        "type": "EpisodeReleaseDate"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for episodes with release date older or equal the given date excluding episodes with unknown release date",
        "list": false,
        "name": "releasedOnOrBefore",
        "nullable": true,
        "type": "EpisodeReleaseDate"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for episodes with unknown release date",
        "list": false,
        "name": "unknownReleaseDate",
        "nullable": true,
        "type": "UnknownReleaseDateFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "EpisodesFilter",
    "possibleTypes": []
  },
  "EpisodesSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "EpisodesSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "EpisodesSort",
    "possibleTypes": []
  },
  "EpisodesSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "EPISODE_THEN_RELEASE"
      },
      {
        "description": null,
        "name": "RATING"
      },
      {
        "description": null,
        "name": "RELEASE_DATE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "EpisodesSortBy",
    "possibleTypes": []
  },
  "EpisodicSearchConstraint": {
    "args": [],
    "description": "Inputs here are AND'd together\n\nIf the same input is specified in the any and exclude constraints,\nthen the results should be empty.\n\nExample: To match the Season 8, Episode 6 of tt0944947 you can search\nanySeriesIds: [\"tt0944947\"], anySeasons: [\"8\"], anyEpisodeNumbers: [\"6\"]\n\nExample: To exclude the Season 8, Episode 6 of tt0944947 you can search\nexcludeSeriesIds: [\"tt0944947\"], excludeSeasons: [\"8\"], excludeEpisodeNumbers: [\"6\"]",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match episodes that have AT LEAST ONE of these episode numbers\nES: For first three episodes ['1', '2', '3']\nES: For episodes without episode number ['Unknown']",
        "list": true,
        "name": "anyEpisodeNumbers",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match episodes are a part of AT LEAST ONE of these seasons\nExample: To restrict to first three seasons: ['1', '2', '3']\nExample: To restrict to Unknown season, or Holiday Special Season: ['Unknown', 'Holiday Special']",
        "list": true,
        "name": "anySeasons",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match episodes are a part of AT LEAST ONE of these series Title Ids",
        "list": true,
        "name": "anySeriesIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude episodes that have AT LEAST ONE of these episode numbers\nES: For all episodes except the first three ['1', '2', '3']\nES: For all episodes with an episode number ['Unknown']",
        "list": true,
        "name": "excludeEpisodeNumbers",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude episodes that are a part of AT LEAST ONE of these seasons\nExample: To restrict to none of the first three seasons: ['1', '2', '3']\nExample: To restrict to neither Unknown season, or Holiday Special Season: ['Unknown', 'Holiday Special']",
        "list": true,
        "name": "excludeSeasons",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude episodes that are a part of AT LEAST ONE of these series Title Ids",
        "list": true,
        "name": "excludeSeriesIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "EpisodicSearchConstraint",
    "possibleTypes": []
  },
  "EventConnection": {
    "args": [],
    "description": "Pagination for Events which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Events",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "EventEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventConnection",
    "possibleTypes": []
  },
  "EventEdge": {
    "args": [],
    "description": "Page of Events",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An AwardsEvent node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "AwardsEvent"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Event 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventEdge",
    "possibleTypes": []
  },
  "EventEdition": {
    "args": [],
    "description": "The instance of an event that took place in a specific year",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "A list of awards announced in an event edition e.g. 'Oscar'",
        "kind": "",
        "list": false,
        "name": "awards",
        "nullable": true,
        "type": "AwardDetailsConnection"
      },
      {
        "args": [],
        "description": "The event where the event edition is happening e.g Academy Awards, USA",
        "kind": "",
        "list": false,
        "name": "event",
        "nullable": false,
        "type": "AwardsEvent"
      },
      {
        "args": [],
        "description": "A unique id prefixed with 'ee'",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A number that defines the sequence of editions within a year, starting with 1",
        "kind": "",
        "list": false,
        "name": "instanceWithinYear",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "List of trivia items related to the event edition with potential markdown links for movies/people",
        "kind": "",
        "list": true,
        "name": "trivia",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The year this edition of the event took place",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventEdition",
    "possibleTypes": []
  },
  "EventEditionAward": {
    "args": [],
    "description": "Data for a combination of Event Edition and Award.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Award Name. eg: 'Oscar'\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "awardName",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The compound ID key for an event edition and award combination\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Award Nominations List. Sorted by win time order, most recent first.\nAn empty array indicates no winners have been announced (yet).\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "winners",
        "nullable": false,
        "type": "AwardNomination"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventEditionAward",
    "possibleTypes": []
  },
  "EventEditionConnection": {
    "args": [],
    "description": "Pagination for EventEdition types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of event editions",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "EventEditionEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventEditionConnection",
    "possibleTypes": []
  },
  "EventEditionEdge": {
    "args": [],
    "description": "Page of event editions",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An EventEdition node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "EventEdition"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: EventEdition 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventEditionEdge",
    "possibleTypes": []
  },
  "EventLiveResults": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The optional localized string to display as subtext for the widget.",
        "kind": "",
        "list": false,
        "name": "displayDescription",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The localized string to display as the title of the widget.",
        "kind": "",
        "list": false,
        "name": "displayTitle",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The event edition and award currently live on the site.",
        "kind": "",
        "list": false,
        "name": "eventEditionAward",
        "nullable": false,
        "type": "EventEditionAward"
      },
      {
        "args": [],
        "description": "The event id, e.g, ev0000003 for Oscars",
        "kind": "",
        "list": false,
        "name": "eventId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "URL for the event page on the consumer website, if there is one.",
        "kind": "",
        "list": false,
        "name": "eventPageUrl",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "The localized blurb to act as a placeholder if there are no winners yet.",
        "kind": "",
        "list": false,
        "name": "noWinnersBlurb",
        "nullable": false,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventLiveResults",
    "possibleTypes": []
  },
  "EventLiveResultsOverrideInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Event override will not be applied unless this is 'true'",
        "list": false,
        "name": "enableOverride",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optionally specify a specific event edition and award to return data for. Otherwise return\ndata for a pre-configured override event which is subject to change.",
        "list": false,
        "name": "overrideEvent",
        "nullable": true,
        "type": "OverrideLiveEventInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "EventLiveResultsOverrideInput",
    "possibleTypes": []
  },
  "EventMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Single event by evconst",
        "kind": "",
        "list": false,
        "name": "event",
        "nullable": true,
        "type": "AwardsEvent"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All the event Ids",
        "kind": "",
        "list": false,
        "name": "events",
        "nullable": true,
        "type": "EventConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventMetadata",
    "possibleTypes": []
  },
  "EventUrl": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "EventUrlCategory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventUrl",
    "possibleTypes": []
  },
  "EventUrlCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The Url category Id, e.g. official",
        "kind": "",
        "list": false,
        "name": "categoryId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Opaque URL category ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The display text for Url category, e.g. Official",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "EventUrlCategory",
    "possibleTypes": []
  },
  "EventsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out given Events IDs",
        "list": true,
        "name": "excludeEvents",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for given Events IDs",
        "list": true,
        "name": "includeEvents",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "EventsFilter",
    "possibleTypes": []
  },
  "ExperimentalCast": {
    "args": [],
    "description": "Experimental Field: DO NOT USE. Cast details",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "CreditAttribute"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Characters (e.g. 'Neo')",
        "kind": "",
        "list": true,
        "name": "characters",
        "nullable": true,
        "type": "Character"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodeCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "EpisodeCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodeCreditsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodeCreditsSort"
          }
        ],
        "description": "Experimental Field: DO NOT USE",
        "kind": "",
        "list": false,
        "name": "experimental_episodeCredits",
        "nullable": true,
        "type": "ExperimentalEpisodeCastConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "A cast credit may have an optional position attribute indicating the order of\nappearance within the title\u2019s ending credits. This position can be null for\nsome or all of the title\u2019s credits. By default (see CreditConnection.orderBy),\nthe cast credit that has a value in their position field will be ordered first\n(by that number), then all other cast credits that have a null in their\nposition field will be ordered alphabetically.",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExperimentalCast",
    "possibleTypes": []
  },
  "ExperimentalCredit": {
    "args": [],
    "description": "Experimental Field: DO NOT USE. \nCredit details. Open question: do we want to add a persistent ID for credits?\nWithout this we require a nameID, titleID and Category to uniquely identify it.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Category (e.g. 'Producer').\nOpen question: the name of this field comes from TitleCreditsBaseV5. Should we change it?",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [],
        "description": "The person credited",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The title on which this credit appears",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "INTERFACE",
    "name": "ExperimentalCredit",
    "possibleTypes": [
      "ExperimentalCast",
      "ExperimentalCrew"
    ]
  },
  "ExperimentalCreditConnection": {
    "args": [],
    "description": "Experimental Field: DO NOT USE. Pagination for Credit type on a Title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Indicates whether the requested filmography data accurately reflects the onscreen cast or crew credits",
        "kind": "",
        "list": false,
        "name": "completenessStatus",
        "nullable": true,
        "type": "CreditsCompletenessStatus"
      },
      {
        "args": [],
        "description": "Pages of credits",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ExperimentalCreditEdge"
      },
      {
        "args": [],
        "description": "How the credits are ordered",
        "kind": "",
        "list": false,
        "name": "orderBy",
        "nullable": true,
        "type": "CreditsOrderedBy"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExperimentalCreditConnection",
    "possibleTypes": []
  },
  "ExperimentalCreditEdge": {
    "args": [],
    "description": "Experimental Field: DO NOT USE. Page of credits",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Credit node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ExperimentalCredit"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Credit 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExperimentalCreditEdge",
    "possibleTypes": []
  },
  "ExperimentalCrew": {
    "args": [],
    "description": "Experimental Field: DO NOT USE. Crew details",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "CreditAttribute"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodeCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "EpisodeCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "EpisodeCreditsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodeCreditsSort"
          }
        ],
        "description": "Experimental Field: DO NOT USE",
        "kind": "",
        "list": false,
        "name": "experimental_episodeCredits",
        "nullable": true,
        "type": "ExperimentalEpisodeCrewConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of job and related Attributes",
        "kind": "",
        "list": true,
        "name": "jobDetails",
        "nullable": true,
        "type": "CrewJobDetails"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of jobs (e.g. 'Executive Producer')\nOpen questions: the name of this field comes from TitleCreditsBaseV5. Should we change it?",
        "kind": "",
        "list": true,
        "name": "jobs",
        "nullable": true,
        "type": "CrewJob"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExperimentalCrew",
    "possibleTypes": []
  },
  "ExperimentalEpisodeCastConnection": {
    "args": [],
    "description": "Experimental Field: DO NOT USE. Pagination for Cast credit type on a Cast credit (for episode credits of a series title).",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All of the characters in this list of Cast credits",
        "kind": "",
        "list": true,
        "name": "characters",
        "nullable": true,
        "type": "Character"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The seasons of episodes in the connection\n\nSorted in increasing order by numerical seasons\nfollowed by non-numerical season in alphabetical order e.g. [1, 2, 3, C, D]",
        "kind": "",
        "list": false,
        "name": "displayableSeasons",
        "nullable": true,
        "type": "DisplayableSeasonConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The years of episodes in the connection\n\nSorted in increasing order by numerical years\nfollowed by non-numerical in alphabetical order e.g. [2015, 2018, 2020, UNKNOWN]",
        "kind": "",
        "list": false,
        "name": "displayableYears",
        "nullable": true,
        "type": "DisplayableYearConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ExperimentalCreditEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The earliest and latest release years for the Title(s) in these credits. If these would be the same,\nonly a single year is populated.",
        "kind": "",
        "list": false,
        "name": "yearRange",
        "nullable": true,
        "type": "YearRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExperimentalEpisodeCastConnection",
    "possibleTypes": []
  },
  "ExperimentalEpisodeCrewConnection": {
    "args": [],
    "description": "Experimental Field: DO NOT USE. Pagination for Crew credit type on a Crew credit (for episode credits of a series title).",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The seasons of episodes in the connection\n\nSorted in increasing order by numerical seasons\nfollowed by non-numerical season in alphabetical order e.g. [1, 2, 3, C, D]",
        "kind": "",
        "list": false,
        "name": "displayableSeasons",
        "nullable": true,
        "type": "DisplayableSeasonConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The years of episodes in the connection\n\nSorted in increasing order by numerical years\nfollowed by non-numerical in alphabetical order e.g. [2015, 2018, 2020, UNKNOWN]",
        "kind": "",
        "list": false,
        "name": "displayableYears",
        "nullable": true,
        "type": "DisplayableYearConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ExperimentalCreditEdge"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All of the jobs in this list of Crew credits",
        "kind": "",
        "list": true,
        "name": "jobs",
        "nullable": true,
        "type": "CrewJob"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The earliest and latest release years for the Title(s) in these credits. If these would be the same,\nonly a single year is populated.",
        "kind": "",
        "list": false,
        "name": "yearRange",
        "nullable": true,
        "type": "YearRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExperimentalEpisodeCrewConnection",
    "possibleTypes": []
  },
  "ExperimentalNameCreditCategoryWithCredits": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "credits",
        "nullable": true,
        "type": "ExperimentalNameCreditConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExperimentalNameCreditCategoryWithCredits",
    "possibleTypes": []
  },
  "ExperimentalNameCreditConnection": {
    "args": [],
    "description": "Experimental Field: DO NOT USE. Pagination for Credit type on a Name.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of credits",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ExperimentalCreditEdge"
      },
      {
        "args": [],
        "description": "How the credits are ordered",
        "kind": "",
        "list": false,
        "name": "orderBy",
        "nullable": true,
        "type": "CreditsOrderedBy"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExperimentalNameCreditConnection",
    "possibleTypes": []
  },
  "ExperimentalTitleCreditsFilter": {
    "args": [],
    "description": "Experimental Field: DO NOT USE.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific credit categories",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter to maintain current implementation of copying jobs to attributes",
        "list": false,
        "name": "copy_jobs",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credited or uncredited credits only",
        "list": false,
        "name": "credited",
        "nullable": true,
        "type": "CreditedOrUncreditedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific credit categories",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "excludePrincipal",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits on these specific names",
        "list": true,
        "name": "names",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ExperimentalTitleCreditsFilter",
    "possibleTypes": []
  },
  "Experimental_AdProductType": {
    "args": [],
    "description": "Product type information for an ad",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The grade of the ad product type",
        "kind": "",
        "list": false,
        "name": "grade",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The name of the ad product type",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The symbol for the ad product type",
        "kind": "",
        "list": false,
        "name": "symbol",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_AdProductType",
    "possibleTypes": []
  },
  "Experimental_AdditionalCreditCategoriesInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The categories to be excluded from the request.\n\nIf no value is provided, no categories are excluded.",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The categories to be include in the request.\n\nIf no value is provided, all categories are returned.",
        "list": true,
        "name": "includeCategories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "Experimental_AdditionalCreditCategoriesInput",
    "possibleTypes": []
  },
  "Experimental_AdditionalCreditItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " The name of the category of the credit. ",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name of the company or director that made the project. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Unique identifier for the additional credit object. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The role or position the individual had on the project. ",
        "kind": "",
        "list": false,
        "name": "job",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name or title of the project.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_AdditionalCreditItem",
    "possibleTypes": []
  },
  "Experimental_AdditionalCreditItemConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_AdditionalCreditItemEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_AdditionalCreditItemConnection",
    "possibleTypes": []
  },
  "Experimental_AdditionalCreditItemEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_AdditionalCreditItem"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_AdditionalCreditItemEdge",
    "possibleTypes": []
  },
  "Experimental_AdditionalCreditsInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The categories to be include in the request.\n\nIf no value is provided, all categories are returned.",
        "list": true,
        "name": "includeCategories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "Experimental_AdditionalCreditsInput",
    "possibleTypes": []
  },
  "Experimental_AdditionalResumeInfo": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " The details for an additional resume info section. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Unique identifier for the additional resume info object. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The title for the additional resume info section. ",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_AdditionalResumeInfo",
    "possibleTypes": []
  },
  "Experimental_AdditionalResumeInfoConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_AdditionalResumeInfoEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_AdditionalResumeInfoConnection",
    "possibleTypes": []
  },
  "Experimental_AdditionalResumeInfoEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_AdditionalResumeInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_AdditionalResumeInfoEdge",
    "possibleTypes": []
  },
  "Experimental_Agency": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE\"\n\nAn agency that represents a name",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The company representing a name",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "@experimental Experimental: DO NOT USE\"\n\nThe employees at this company who specifically represent a person.\n\nA name can be represented by 0, 1, or many people at a specific company.",
        "kind": "",
        "list": true,
        "name": "experimental_agents",
        "nullable": true,
        "type": "Experimental_Agent"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_Agency",
    "possibleTypes": []
  },
  "Experimental_Agent": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE\"\n\nAn employee of a company who represents a name in some capacity",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "branch",
        "nullable": true,
        "type": "Experimental_CompanyBranch"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "experimental_employeeContact",
        "nullable": true,
        "type": "Experimental_CompanyContactDetails"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Whether or not this person is the primary representative.\n\nEach representation type and company combination can have one point of contact\nbut is not guaranteed to have one, even if there is only one associated representative.\n\nFor example, if a person has multiple Talent Agents at CAA, this being\ntrue would indicate the associated name is the person's main Talent Agent\nat CAA",
        "kind": "",
        "list": false,
        "name": "isPrimaryAgent",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "jobTitle",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "occupation",
        "nullable": true,
        "type": "OccupationValue"
      },
      {
        "args": [],
        "description": "The type of relationship this representation has with their client",
        "kind": "",
        "list": false,
        "name": "relationshipType",
        "nullable": false,
        "type": "Experimental_RepresentationRelationshipType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_Agent",
    "possibleTypes": []
  },
  "Experimental_ApsSlotInfo": {
    "args": [],
    "description": "Information about an APS slot for Amazon Publisher Services integration",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The APS slot ID",
        "kind": "",
        "list": false,
        "name": "apsSlotId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The APS slot name",
        "kind": "",
        "list": false,
        "name": "apsSlotName",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Parameters for the APS slot",
        "kind": "",
        "list": true,
        "name": "apsSlotParams",
        "nullable": false,
        "type": "Experimental_ApsSlotParam"
      },
      {
        "args": [],
        "description": "The name of the ad slot",
        "kind": "",
        "list": false,
        "name": "slotName",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_ApsSlotInfo",
    "possibleTypes": []
  },
  "Experimental_ApsSlotParam": {
    "args": [],
    "description": "Key-value pair for APS slot parameters",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The key of the parameter",
        "kind": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The value of the parameter",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_ApsSlotParam",
    "possibleTypes": []
  },
  "Experimental_BoxOfficeEarningsSearchConstraint": {
    "args": [],
    "description": "@experimental Inputs for constraining titles for earnings",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental field, match titles that have a gross box office revenue in the given range ($USD)",
        "list": false,
        "name": "experimental_boxOfficePerformanceRange",
        "nullable": true,
        "type": "FloatRangeInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental field, match titles that have a production budget in the given range ($USD)",
        "list": false,
        "name": "experimental_productionBudgetRange",
        "nullable": true,
        "type": "FloatRangeInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "Experimental_BoxOfficeEarningsSearchConstraint",
    "possibleTypes": []
  },
  "Experimental_CompanyBranch": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Ways to contact this part of the company directly",
        "kind": "",
        "list": false,
        "name": "experimental_directContact",
        "nullable": true,
        "type": "Experimental_CompanyContactDetails"
      },
      {
        "args": [],
        "description": "An obfuscated persistent id to uniquely identify this data",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Branch name",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_CompanyBranch",
    "possibleTypes": []
  },
  "Experimental_CompanyBranchConnection": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_CompanyBranchEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_CompanyBranchConnection",
    "possibleTypes": []
  },
  "Experimental_CompanyBranchEdge": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_CompanyBranch"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_CompanyBranchEdge",
    "possibleTypes": []
  },
  "Experimental_CompanyClient": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name being represented",
        "kind": "",
        "list": false,
        "name": "client",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The employees working at this company who work with the client\nin this type of relationship\n\nReturns nothing if we have no information about the individual\nemployees at this company who work specifically with this client.",
        "kind": "",
        "list": true,
        "name": "experimental_agents",
        "nullable": true,
        "type": "Experimental_Agent"
      },
      {
        "args": [],
        "description": "An obfuscated persistent id to uniquely identify this data",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_CompanyClient",
    "possibleTypes": []
  },
  "Experimental_CompanyClientConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_CompanyClientEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_CompanyClientConnection",
    "possibleTypes": []
  },
  "Experimental_CompanyClientEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_CompanyClient"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_CompanyClientEdge",
    "possibleTypes": []
  },
  "Experimental_CompanyContactDetails": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "emailAddress",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "faxNumber",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "phoneNumbers",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "A physical mailing address for this company or this company's specific office",
        "kind": "",
        "list": false,
        "name": "physicalAddress",
        "nullable": true,
        "type": "Location"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "website",
        "nullable": true,
        "type": "WebsiteLink"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_CompanyContactDetails",
    "possibleTypes": []
  },
  "Experimental_DirectContactDetails": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "emailAddress",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "faxNumber",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "phoneNumbers",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "website",
        "nullable": true,
        "type": "WebsiteLink"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_DirectContactDetails",
    "possibleTypes": []
  },
  "Experimental_EmploymentConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_EmploymentEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_EmploymentConnection",
    "possibleTypes": []
  },
  "Experimental_EmploymentEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_PersonalEmployment"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_EmploymentEdge",
    "possibleTypes": []
  },
  "Experimental_NameRepresentation": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name being represented",
        "kind": "",
        "list": false,
        "name": "client",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The company representing this name, if there is one\n\nEither agency or independentRepresentative will have data but not both",
        "kind": "",
        "list": false,
        "name": "experimental_agency",
        "nullable": true,
        "type": "Experimental_Agency"
      },
      {
        "args": [],
        "description": "An obfuscated persistent id to uniquely identify this data",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Someone representing this name but not associated with a company.\n\nEither agency or independentRepresentative will have data but not both",
        "kind": "",
        "list": false,
        "name": "independentRepresentative",
        "nullable": true,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The type of relationship this representation has with the name",
        "kind": "",
        "list": false,
        "name": "relationshipType",
        "nullable": false,
        "type": "Experimental_RepresentationRelationshipType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_NameRepresentation",
    "possibleTypes": []
  },
  "Experimental_NameRepresentationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_NameRepresentationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_NameRepresentationConnection",
    "possibleTypes": []
  },
  "Experimental_NameRepresentationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_NameRepresentation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_NameRepresentationEdge",
    "possibleTypes": []
  },
  "Experimental_NotificationPreference": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "True if requesting customer receives notifications for this preference type",
        "kind": "",
        "list": false,
        "name": "interested",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Preference type",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "Experimental_NotificationPreferenceType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_NotificationPreference",
    "possibleTypes": []
  },
  "Experimental_NotificationPreferenceType": {
    "args": [],
    "description": "Preference type for a tracked page",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for the notification preference type",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Text describing the notification preference type",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_NotificationPreferenceType",
    "possibleTypes": []
  },
  "Experimental_OccupationCreditSearchConstraint": {
    "args": [],
    "description": "@experimental Inputs for constraining searches for occupation credits",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental field, match titles that have any of the occupations attached\nThis is a string, but may change in the future as PACE evolves",
        "list": true,
        "name": "experimental_anyOccupationCreditKeywords",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental field, exclude titles that have any of the occupations attached\nThis is a string, but may change in the future as PACE evolves",
        "list": true,
        "name": "experimental_excludeOccupationCreditKeywords",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "Experimental_OccupationCreditSearchConstraint",
    "possibleTypes": []
  },
  "Experimental_PersonalEmployment": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "branch",
        "nullable": true,
        "type": "Experimental_CompanyBranch"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "experimental_employeeContact",
        "nullable": true,
        "type": "Experimental_CompanyContactDetails"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "jobTitle",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "occupation",
        "nullable": true,
        "type": "OccupationValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_PersonalEmployment",
    "possibleTypes": []
  },
  "Experimental_PlaidOverride": {
    "args": [],
    "description": "Key-value pair for plaid overrides",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The key for the plaid override",
        "kind": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The value for the plaid override",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_PlaidOverride",
    "possibleTypes": []
  },
  "Experimental_ProfessionCatagorySearchConstraint": {
    "args": [],
    "description": "@experimental Inputs for constraining searches for profession catagories",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental field, match titles that have any of the profession category ID's attached\nsee: imdb.id.amzn1.imdb.concept.ProfessionCategoryId\nexample: amzn1.imdb.concept.profession_category.00000000-0000-7000-0000-000000000000",
        "list": true,
        "name": "experimental_anyProfessionCategoryIDs",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "@experimental field, exclude all titles that have any of the profession category ID's (ProfessionCategoryId) attached\nsee: imdb.id.amzn1.imdb.concept.ProfessionCategoryId\nexample: amzn1.imdb.concept.profession_category.00000000-0000-7000-0000-000000000000",
        "list": true,
        "name": "experimental_excludeProfessionCategoryIDs",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "Experimental_ProfessionCatagorySearchConstraint",
    "possibleTypes": []
  },
  "Experimental_RepresentationRelationshipType": {
    "args": [],
    "description": "@experimental Experimental: DO NOT USE",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An obfuscated persistent id to uniquely identify this data",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "A non-localized, somewhat human readable string representing this relationship\ntype\n\nIntended to support filtering or search behavior where we need a unique\nway to represent this relationship type\n\nExample: 'talentAgent'",
        "kind": "",
        "list": false,
        "name": "relationshipTypeId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The display text for this relationship type - 'Talent Agent'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_RepresentationRelationshipType",
    "possibleTypes": []
  },
  "Experimental_Resume": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "@experimental experimental\nSelf verified additional awards for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "experimental_additionalAwards",
        "nullable": true,
        "type": "Experimental_SelfVerifiedAwardConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Experimental_AdditionalCreditCategoriesInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "Experimental_AdditionalCreditCategoriesInput"
          }
        ],
        "description": "@experimental experimental\nSelf verified additional credits data for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "experimental_additionalCreditCategories",
        "nullable": true,
        "type": "Experimental_ResumeAdditionalCreditsCategories"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Experimental_AdditionalCreditsInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "Experimental_AdditionalCreditsInput"
          }
        ],
        "description": "@experimental experimental\nSelf verified additional credits data for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "experimental_additionalCredits",
        "nullable": true,
        "type": "Experimental_AdditionalCreditItemConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "@experimental experimental\nSelf verified additional resume sections for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "experimental_additionalResumeInfo",
        "nullable": true,
        "type": "Experimental_AdditionalResumeInfoConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "@experimental experimental\nSelf verified training history data for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "experimental_education",
        "nullable": true,
        "type": "Experimental_SelfVerifiedEducationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "sections",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "@experimental experimental\nSelf verified performer profile data for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": true,
        "name": "experimental_performerProfile",
        "nullable": true,
        "type": "Experimental_ResumeDataItem"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "sections",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "@experimental experimental\nSelf verified personal details data for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": true,
        "name": "experimental_personalDetails",
        "nullable": true,
        "type": "Experimental_ResumeDataItem"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "sections",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "@experimental experimental\nSelf verified profession background data for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": true,
        "name": "experimental_professionalBackground",
        "nullable": true,
        "type": "Experimental_ResumeDataItem"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "@experimental experimental\nSelf verified references for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "experimental_references",
        "nullable": true,
        "type": "Experimental_SelfVerifiedReferenceConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "sections",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "@experimental experimental\nSelf verified skills data for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": true,
        "name": "experimental_skills",
        "nullable": true,
        "type": "Experimental_ResumeDataItem"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "@experimental experimental\nSelf verified training history data for this name.\n\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "experimental_training",
        "nullable": true,
        "type": "Experimental_SelfVerifiedTrainingConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_Resume",
    "possibleTypes": []
  },
  "Experimental_ResumeAdditionalCreditsCategories": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " A list of categories for additional credits on a name page. ",
        "kind": "",
        "list": true,
        "name": "categories",
        "nullable": false,
        "type": "Experimental_ResumeAdditionalCreditsCategory"
      },
      {
        "args": [],
        "description": " The total number of categories returned. ",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_ResumeAdditionalCreditsCategories",
    "possibleTypes": []
  },
  "Experimental_ResumeAdditionalCreditsCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "A list of credits belonging to this category.\n\nOrdered by ascending contribution date.",
        "kind": "",
        "list": true,
        "name": "credits",
        "nullable": false,
        "type": "Experimental_AdditionalCreditItem"
      },
      {
        "args": [],
        "description": " The unique identifier for the credit category. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The displayable title for the category. ",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The total number of credits in this category. ",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_ResumeAdditionalCreditsCategory",
    "possibleTypes": []
  },
  "Experimental_ResumeDataItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The label for the data item.",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The value for the data item.",
        "kind": "",
        "list": true,
        "name": "values",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_ResumeDataItem",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedAward": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " The title of the award. ",
        "kind": "",
        "list": false,
        "name": "awardTitle",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Additional details about the award. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name of the event for the award. ",
        "kind": "",
        "list": false,
        "name": "event",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " A unique identifier for a resume self-verified award. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The year in which the award was received. ",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedAward",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedAwardConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_SelfVerifiedAwardEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedAwardConnection",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedAwardEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_SelfVerifiedAward"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedAwardEdge",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedEducation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " The degree that the person received. ",
        "kind": "",
        "list": false,
        "name": "degree",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Additional details about their education. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " A unique identifier for the resume education item. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The location of the school ",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name of the school. ",
        "kind": "",
        "list": false,
        "name": "school",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The year in which they completed their education. ",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedEducation",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedEducationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_SelfVerifiedEducationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedEducationConnection",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedEducationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_SelfVerifiedEducation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedEducationEdge",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedReference": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " A contact value for this reference, can be a phone number, email address, etc. ",
        "kind": "",
        "list": false,
        "name": "contact",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": " A unique identifier for this reference item. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The name of their reference. ",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Their relationship to this reference. ",
        "kind": "",
        "list": false,
        "name": "relationship",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedReference",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedReferenceConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_SelfVerifiedReferenceEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedReferenceConnection",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedReferenceEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_SelfVerifiedReference"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedReferenceEdge",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedTraining": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " Additional details about the training. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " A unique identifier for this resume training item. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The name of the person who instructed them. ",
        "kind": "",
        "list": false,
        "name": "instructor",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The location of the school. ",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name of the school or place where they received training. ",
        "kind": "",
        "list": false,
        "name": "school",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The type of training they received. ",
        "kind": "",
        "list": false,
        "name": "training",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The year in which they completed the training. ",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedTraining",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedTrainingConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "Experimental_SelfVerifiedTrainingEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedTrainingConnection",
    "possibleTypes": []
  },
  "Experimental_SelfVerifiedTrainingEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Experimental_SelfVerifiedTraining"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_SelfVerifiedTrainingEdge",
    "possibleTypes": []
  },
  "Experimental_Site": {
    "args": [],
    "description": "The IMDb site variant on which the ads are intended to be shown.",
    "enumValues": [
      {
        "description": null,
        "name": "CONSUMER"
      },
      {
        "description": null,
        "name": "MOBILE"
      },
      {
        "description": null,
        "name": "PRO"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "Experimental_Site",
    "possibleTypes": []
  },
  "Experimental_SlotSize": {
    "args": [],
    "description": "Entry in the slots size map.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The height of the slot in pixels",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The name of the slot.",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The width of the slot in pixels",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "Experimental_SlotSize",
    "possibleTypes": []
  },
  "Experimental_TrackNotificationPreferences": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Indicates if current user is tracking given const",
        "kind": "",
        "list": false,
        "name": "isTracking",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The requesting user's notification preferences for this const. Empty if user not tracking.",
        "kind": "",
        "list": true,
        "name": "notificationPreferences",
        "nullable": true,
        "type": "Experimental_NotificationPreference"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_TrackNotificationPreferences",
    "possibleTypes": []
  },
  "Experimental_WebAdCreativeInfo": {
    "args": [],
    "description": "AdCreativeInfo with additional web/responsive fields. Can be merge into single definition when finalizing webAdsConfig",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Type of ad product from AAX",
        "kind": "",
        "list": false,
        "name": "aaxAdType",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Ad product type information",
        "kind": "",
        "list": false,
        "name": "adProductType",
        "nullable": true,
        "type": "Experimental_AdProductType"
      },
      {
        "args": [],
        "description": "ID of the creative (for debugging)",
        "kind": "",
        "list": false,
        "name": "creativeId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Flag that determines if the app slot is eligible to render 3p ad.",
        "kind": "",
        "list": false,
        "name": "isEligibleFor3pAd",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag that determines if the slot is eligible for automatic ad refresh.",
        "kind": "",
        "list": false,
        "name": "isEligibleForRefresh",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag used to communicate if the ad returned is premium.",
        "kind": "",
        "list": false,
        "name": "isPremium",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Height and width of the returned creative",
        "kind": "",
        "list": false,
        "name": "size",
        "nullable": false,
        "type": "CreativeSize"
      },
      {
        "args": [],
        "description": "HTML markup for the slot containing the ad creative",
        "kind": "",
        "list": false,
        "name": "slotMarkup",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_WebAdCreativeInfo",
    "possibleTypes": []
  },
  "Experimental_WebAdSlot": {
    "args": [],
    "description": "AdSlot with additional web fields. Can be merged back into single AdSlot definition when finalizing webAdsConfig",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Ad feedback URL to be linked in the sponsored label of the ad",
        "kind": "",
        "list": false,
        "name": "adFeedbackUrl",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "The creative metadata and slotsMarkup returned for the given ad slot",
        "kind": "",
        "list": false,
        "name": "creativeInfo",
        "nullable": false,
        "type": "Experimental_WebAdCreativeInfo"
      },
      {
        "args": [],
        "description": "The name of the ad slot",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_WebAdSlot",
    "possibleTypes": []
  },
  "Experimental_WebAdTargetingParameters": {
    "args": [],
    "description": "Parameters specific to web ad targeting.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "True if the client is requesting content that meets the AdBlockPlus Acceptable Ads program;\nfalse if the request is for standard ad content.",
        "list": false,
        "name": "abpAcceptable",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The IMDb site variant on which the ads are intended to be shown.",
        "list": false,
        "name": "site",
        "nullable": false,
        "type": "Experimental_Site"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Mappings of requested ad slot names to requested ad slot sizes.\nRequired for non-mobile sites, but is optional in the schema.\nThe resolver is responsible for safely handling empty input.",
        "list": true,
        "name": "slotSizeMap",
        "nullable": true,
        "type": "Experimental_SlotSize"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "URL of the page being targeted.",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "URL"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "Experimental_WebAdTargetingParameters",
    "possibleTypes": []
  },
  "Experimental_WebAdsConfigOutput": {
    "args": [],
    "description": "Output from the webAdsConfig operation containing all information needed to request ads",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Flag indicating if ad refresh is enabled",
        "kind": "",
        "list": false,
        "name": "adRefreshEnabled",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "APS slot information for Amazon Publisher Services integration",
        "kind": "",
        "list": true,
        "name": "apsSlotInfoMap",
        "nullable": false,
        "type": "Experimental_ApsSlotInfo"
      },
      {
        "args": [],
        "description": "Flag indicating if the page has premium ads",
        "kind": "",
        "list": false,
        "name": "hasPremiumAd",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "HTML markup to be included in the head of the document",
        "kind": "",
        "list": false,
        "name": "headerMarkup",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Plaid overrides for the page",
        "kind": "",
        "list": true,
        "name": "plaidOverrides",
        "nullable": false,
        "type": "Experimental_PlaidOverride"
      },
      {
        "args": [],
        "description": "Breakpoint to ad size mappings for responsive AdSlot",
        "kind": "",
        "list": true,
        "name": "responsiveSlotSizes",
        "nullable": false,
        "type": "Experimental_WebResponsiveSlotSize"
      },
      {
        "args": [],
        "description": "List of ad slots available on the page",
        "kind": "",
        "list": true,
        "name": "slots",
        "nullable": false,
        "type": "Experimental_WebAdSlot"
      },
      {
        "args": [],
        "description": "Flag indicating if ad slots are enabled",
        "kind": "",
        "list": false,
        "name": "slotsEnabled",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_WebAdsConfigOutput",
    "possibleTypes": []
  },
  "Experimental_WebAdsInput": {
    "args": [],
    "description": "Parameters used to make an ad request for web pages.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A set of parameters needed from web clients to target ads.\nThese parameters include page type, subpage type, and other targeting information.",
        "list": false,
        "name": "adParameters",
        "nullable": false,
        "type": "AdParametersWeb"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A set of parameters specific to web ad targeting.",
        "list": false,
        "name": "adTargetingParameters",
        "nullable": false,
        "type": "Experimental_WebAdTargetingParameters"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A set of parameters used to target display ads across all site variants.",
        "list": false,
        "name": "displayAdTargetingParameters",
        "nullable": false,
        "type": "DisplayAdTargetingParameters"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "Experimental_WebAdsInput",
    "possibleTypes": []
  },
  "Experimental_WebAdsOutput": {
    "args": [],
    "description": "Output for the webAds query.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Flag indicating if any premium ads are present.",
        "kind": "",
        "list": false,
        "name": "hasPremiumAd",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag indicating if request was for automatic ad refresh.",
        "kind": "",
        "list": false,
        "name": "isRefreshRequest",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Mapping of slots with resizing re-fetch disabled to their blocked breakpoints.",
        "kind": "",
        "list": true,
        "name": "responsiveResizingDisabledSlots",
        "nullable": true,
        "type": "Experimental_WebResponsiveResizingDisabledSlot"
      },
      {
        "args": [],
        "description": "A list of ad slots and their creative info.",
        "kind": "",
        "list": true,
        "name": "slots",
        "nullable": false,
        "type": "Experimental_WebAdSlot"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_WebAdsOutput",
    "possibleTypes": []
  },
  "Experimental_WebResponsiveResizingDisabledBreakpoint": {
    "args": [],
    "description": "Viewport breakpoint with disabled flag.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The width in pixels of the breakpoint.",
        "kind": "",
        "list": false,
        "name": "breakpoint",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Whether responsive resizing is disabled for this breakpoint.",
        "kind": "",
        "list": false,
        "name": "disabled",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_WebResponsiveResizingDisabledBreakpoint",
    "possibleTypes": []
  },
  "Experimental_WebResponsiveResizingDisabledSlot": {
    "args": [],
    "description": "Slot with responsive resizing disabled.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The breakpoints for which responsive resizing is disabled.",
        "kind": "",
        "list": true,
        "name": "breakpoints",
        "nullable": false,
        "type": "Experimental_WebResponsiveResizingDisabledBreakpoint"
      },
      {
        "args": [],
        "description": "The name of the slot.",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_WebResponsiveResizingDisabledSlot",
    "possibleTypes": []
  },
  "Experimental_WebResponsiveSlotSize": {
    "args": [],
    "description": "Mapping between slot names and their size configurations for different viewport breakpoints",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "List of viewport breakpoints and corresponding ad sizes",
        "kind": "",
        "list": true,
        "name": "breakpoints",
        "nullable": false,
        "type": "Experimental_WebViewportBreakpointSlotSize"
      },
      {
        "args": [],
        "description": "The name of the ad slot",
        "kind": "",
        "list": false,
        "name": "slotName",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_WebResponsiveSlotSize",
    "possibleTypes": []
  },
  "Experimental_WebViewportBreakpointSlotSize": {
    "args": [],
    "description": "Viewport breakpoint configuration for responsive ad sizing",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name of the breakpoint (e.g., desktop, tablet, mobile)",
        "kind": "",
        "list": false,
        "name": "breakpoint",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The ad size for this breakpoint (e.g., 728x90)",
        "kind": "",
        "list": false,
        "name": "slotSize",
        "nullable": false,
        "type": "CreativeSize"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Experimental_WebViewportBreakpointSlotSize",
    "possibleTypes": []
  },
  "ExplicitContentFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Remove names that are flagged as adult from the results, this is the default",
        "name": "EXCLUDE_ADULT"
      },
      {
        "description": "Allow names that are flagged as adult to be included in results",
        "name": "INCLUDE_ADULT"
      },
      {
        "description": "Only allow names that are flagged as adult",
        "name": "ONLY_ADULT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ExplicitContentFilter",
    "possibleTypes": []
  },
  "ExplicitContentSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Allow titles that are flagged as adult to be included in results\nBy default, no titles flagged as adult will be matched",
        "list": false,
        "name": "explicitContentFilter",
        "nullable": true,
        "type": "ExplicitContentFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ExplicitContentSearchConstraint",
    "possibleTypes": []
  },
  "ExportDetail": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The date when the export becomes unavailable.\nAfter this date, the export will no longer be returned by the backend.",
        "kind": "",
        "list": false,
        "name": "expiresOn",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "exportType",
        "nullable": false,
        "type": "ExportType"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "resultUrl",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "startedOn",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ExportStatus"
      },
      {
        "args": [],
        "description": "number of objects in the export",
        "kind": "",
        "list": false,
        "name": "totalExportedObjects",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "INTERFACE",
    "name": "ExportDetail",
    "possibleTypes": [
      "ListExportDetail",
      "RatingsExportDetail"
    ]
  },
  "ExportDetailConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ExportDetailEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExportDetailConnection",
    "possibleTypes": []
  },
  "ExportDetailEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ExportDetail"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExportDetailEdge",
    "possibleTypes": []
  },
  "ExportFilterByInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "status",
        "nullable": true,
        "type": "ExportStatusId"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ExportFilterByInput",
    "possibleTypes": []
  },
  "ExportSortByField": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "STARTED_ON"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ExportSortByField",
    "possibleTypes": []
  },
  "ExportSortByInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "ExportSortByField"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ExportSortByInput",
    "possibleTypes": []
  },
  "ExportStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": true,
        "type": "ExportStatusId"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "ExportStatusName"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExportStatus",
    "possibleTypes": []
  },
  "ExportStatusId": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Indicates there's an existing export for the request and it has failed.",
        "name": "FAILED"
      },
      {
        "description": "Indicates there's an existing export for the request and it's in progress.",
        "name": "PROCESSING"
      },
      {
        "description": "Indicates there's an existing export for the request and it has finished successfully.",
        "name": "READY"
      },
      {
        "description": "Indicates there's an existing export for the request and it has failed due to\nthe requester not having access to the requested resource.\n\nThis state is typically unexpected since users are generally expected to have\nthe necessary access to the list/ratings before requesting an export. However,\nit can occur in unusual cases, such as when there is a change in list\npermissions immediately before the export starts or if a user issues GraphQL\nqueries directly without proper access to the resource.",
        "name": "UNAUTHORIZED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ExportStatusId",
    "possibleTypes": []
  },
  "ExportStatusName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExportStatusName",
    "possibleTypes": []
  },
  "ExportType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "LIST"
      },
      {
        "description": null,
        "name": "RATINGS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ExportType",
    "possibleTypes": []
  },
  "ExternalLink": {
    "args": [],
    "description": "External link details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The external link as a displayable property\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableExternalLinkProperty"
      },
      {
        "args": [],
        "description": "The type of link\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "externalLinkCategory",
        "nullable": false,
        "type": "ExternalLinkCategory"
      },
      {
        "args": [],
        "description": "The languages supported by the site\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "externalLinkLanguages",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The user-supplied region of the site.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "externalLinkRegion",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The link's label\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "The language of the link's label\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "labelLanguage",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The URL of the site\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExternalLink",
    "possibleTypes": []
  },
  "ExternalLinkCategory": {
    "args": [],
    "description": "External link type",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A token representing the link type.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Display text for the link type (e.g. 'Official Sites').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExternalLinkCategory",
    "possibleTypes": []
  },
  "ExternalLinkCategoryWithExternalLinks": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "ExternalLinkCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "externalLinks",
        "nullable": true,
        "type": "ExternalLinkConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "ExternalLinkRestriction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExternalLinkCategoryWithExternalLinks",
    "possibleTypes": []
  },
  "ExternalLinkCategoryWithFeaturedExternalLinks": {
    "args": [],
    "description": "Group of external links from a single featured category",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Links in the featured category",
        "kind": "",
        "list": true,
        "name": "externalLinks",
        "nullable": false,
        "type": "ExternalLink"
      },
      {
        "args": [],
        "description": "Featured category of external link",
        "kind": "",
        "list": false,
        "name": "featuredCategory",
        "nullable": false,
        "type": "ExternalLinkCategory"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExternalLinkCategoryWithFeaturedExternalLinks",
    "possibleTypes": []
  },
  "ExternalLinkConnection": {
    "args": [],
    "description": "Pagination for external link types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of external links",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ExternalLinkEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "ExternalLinkRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExternalLinkConnection",
    "possibleTypes": []
  },
  "ExternalLinkEdge": {
    "args": [],
    "description": "Page of external links",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An External link node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ExternalLink"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: external link 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExternalLinkEdge",
    "possibleTypes": []
  },
  "ExternalLinkRestriction": {
    "args": [],
    "description": "Information about restrictions applied to external links",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ExternalLinkRestriction",
    "possibleTypes": []
  },
  "ExternalLinksFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ExternalLinksFilter",
    "possibleTypes": []
  },
  "FanPicksConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "FanPicksEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "refTag",
        "nullable": true,
        "type": "RefTag"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FanPicksConnection",
    "possibleTypes": []
  },
  "FanPicksEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FanPicksEdge",
    "possibleTypes": []
  },
  "FanPicksFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Includes fan picks titles for below title type category values. At time of writing, fanPicksTitles() only\nsupports movie and tv title type categories, and can only support filtering for a single title type.",
        "list": true,
        "name": "includeTitleTypes",
        "nullable": true,
        "type": "TitleTypeCategoryValue"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FanPicksFilter",
    "possibleTypes": []
  },
  "Faq": {
    "args": [],
    "description": "Faq details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The answer text. Note that [not all questions have answers](https://www.imdb.com/title/tt10547784/quotes/qt4903101).",
        "kind": "",
        "list": false,
        "name": "answer",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "FAQ ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Is this faq item a spoiler",
        "kind": "",
        "list": false,
        "name": "isSpoiler",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The language in which the FAQ was written. Note that each question-answer pair has the same language.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The question text",
        "kind": "",
        "list": false,
        "name": "question",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Faq",
    "possibleTypes": []
  },
  "FaqConnection": {
    "args": [],
    "description": "Pagination for FAQ types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of FAQs",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "FaqEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FaqConnection",
    "possibleTypes": []
  },
  "FaqEdge": {
    "args": [],
    "description": "Page of Faqs",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A FAQ node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Faq"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: FAQ 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FaqEdge",
    "possibleTypes": []
  },
  "FaqsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "hasAnswer",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FaqsFilter",
    "possibleTypes": []
  },
  "FavoriteFilterOption": {
    "args": [],
    "description": "Enum that includes values for filtering cinemas based on whether a user has marked a cinemas as a favorite.\nSpecifying this filter option will make the query personalized, so it will result in the query not being cached.",
    "enumValues": [
      {
        "description": "Don't include cinemas that a user has marked as a favorite.",
        "name": "EXCLUDE_FAVORITES"
      },
      {
        "description": "Only include cinemas that a user has marked as a favorite.",
        "name": "ONLY_FAVORITES"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "FavoriteFilterOption",
    "possibleTypes": []
  },
  "FeatureAccess": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Signal that a customer can use the IMDb Pro App.\nPro app access does not correspond 1-1 to any specific entitled API, which is why this field is needed.\n\nReturns true if the customer can access the app, false if not.\nReturns false if customer is logged out.\n\nZuko does not support cache TTLs on customer-specific requests.\nWhen true, it is acceptable to cache this field during a user's session.\nWhen false, it is not acceptable to cache this field, so we do not withhold app access immediately after signup.\n\n@entitlement(PRO_PREMIUM)",
        "kind": "",
        "list": false,
        "name": "proAppFunctionality",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Signal that a customer can use the IMDb Pro Basic functionality.\nPro basic functionality does not correspond 1-1 to any specific entitled API, which is why this field is needed.\n\nReturns true if the customer can access basic Pro features, false if not.\nReturns false if customer is logged out.\n\nZuko does not support cache TTLs on customer-specific requests.\nWhen true, it is acceptable to cache this field during a user's session.\nWhen false, it is not acceptable to cache this field, so we do not withhold access immediately after signup.\n\n@entitlement(PRO_BASIC)",
        "kind": "",
        "list": false,
        "name": "proBasicFunctionality",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Signal that a customer can use the IMDb Pro Premium functionality.\nPro premium functionality does not correspond 1-1 to any specific entitled API, which is why this field is needed.\n\nReturns true if the customer can access premium Pro features, false if not.\nReturns false if customer is logged out.\n\nZuko does not support cache TTLs on customer-specific requests.\nWhen true, it is acceptable to cache this field during a user's session.\nWhen false, it is not acceptable to cache this field, so we do not withhold access immediately after signup.\n\n@entitlement(PRO_PREMIUM)",
        "kind": "",
        "list": false,
        "name": "proPremiumFunctionality",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Signal that a customer should see Pro Premium upsells.\nReturns true for users who should see premium upsells (those without PRO_PREMIUM entitlement).\nReturns false for PRO_PREMIUM users who should not see upsells.\nReturns true if customer is logged out.\n\nZuko does not support cache TTLs on customer-specific requests.\nWhen true, it is not acceptable to cache this field, so we do want to keep showing upsells immediately after signup.\nWhen false, it is acceptable to cache this field during a user's session.\n\n@entitlement(PRO_PREMIUM)",
        "kind": "",
        "list": false,
        "name": "showProPremiumUpsells",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FeatureAccess",
    "possibleTypes": []
  },
  "FeaturedImagesOption": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Return everything except featured images for this name.",
        "name": "EXCLUDE_FEATURED"
      },
      {
        "description": "Only return featured images for this name. There can be a maximum of 6.",
        "name": "FEATURED_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "FeaturedImagesOption",
    "possibleTypes": []
  },
  "FeedbackGiven": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Whether or not the user has given feedback for that feature",
        "kind": "",
        "list": false,
        "name": "hasGivenFeedback",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FeedbackGiven",
    "possibleTypes": []
  },
  "FeedbackGivenFeatureType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Consumer Advanced Search Results Page",
        "name": "CONSUMER_ADVANCED_SEARCH_RESULTS"
      },
      {
        "description": "Consumer Main Search Results Page",
        "name": "CONSUMER_MAIN_SEARCH_RESULTS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "FeedbackGivenFeatureType",
    "possibleTypes": []
  },
  "FeedbackGivenInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Feature type for whether or not feedback has been given for",
        "list": false,
        "name": "featureType",
        "nullable": false,
        "type": "FeedbackGivenFeatureType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FeedbackGivenInput",
    "possibleTypes": []
  },
  "FileMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Presigned URL containing file for account data",
        "kind": "",
        "list": false,
        "name": "accountDataURL",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Date and time file was created",
        "kind": "",
        "list": false,
        "name": "creationDate",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Date and time file will expire",
        "kind": "",
        "list": false,
        "name": "expirationDate",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Name of file returned from data access process",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Formatted size of file",
        "kind": "",
        "list": false,
        "name": "sizeLabel",
        "nullable": false,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FileMetadata",
    "possibleTypes": []
  },
  "FilmLength": {
    "args": [],
    "description": "A film length or number of reels, or both, along with some flags and any attributes. For example, we could have a film\nthat used 3447 meters of film using 8.5 reels in the US and Canada.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "The countries where this film length applies",
        "kind": "",
        "list": true,
        "name": "countries",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "Film length as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationLocalizedProperty"
      },
      {
        "args": [],
        "description": "The film length in meters",
        "kind": "",
        "list": false,
        "name": "filmLength",
        "nullable": true,
        "type": "Float"
      },
      {
        "args": [],
        "description": "Indicates if a split reel is used",
        "kind": "",
        "list": false,
        "name": "isSplitReel",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The number of reels",
        "kind": "",
        "list": false,
        "name": "numReels",
        "nullable": true,
        "type": "Float"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmLength",
    "possibleTypes": []
  },
  "FilmLengths": {
    "args": [],
    "description": "Film lengths for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of film length items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "FilmLength"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of film length items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmLengths",
    "possibleTypes": []
  },
  "FilmingDates": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Displayable filming dates range from start to end date",
        "kind": "",
        "list": false,
        "name": "dateRange",
        "nullable": true,
        "type": "DisplayableDateRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmingDates",
    "possibleTypes": []
  },
  "FilmingDatesConnection": {
    "args": [],
    "description": "Pagination for FilmingDates types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of FilmingDates",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "FilmingDatesEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmingDatesConnection",
    "possibleTypes": []
  },
  "FilmingDatesEdge": {
    "args": [],
    "description": "Page of FilmingDates",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A FilmingDates node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "FilmingDates"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: FilmingDates 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmingDatesEdge",
    "possibleTypes": []
  },
  "FilmingLocation": {
    "args": [],
    "description": "Filming location details",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Optional. A list of filming location attributes, can contain:\n- Free text attributes e.g. { text: 'Butch in his car encounters Marsellus Wallace' }\n- Location properties e.g. { id: 'exterior', text: 'Exterior' }",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Filming location as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleFilmingLocationProperty"
      },
      {
        "args": [],
        "description": "Filming location ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Votes from users about whether this filming location is interesting.",
        "kind": "",
        "list": false,
        "name": "interestScore",
        "nullable": false,
        "type": "InterestScore"
      },
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The non-localized location, e.g. 'Los Alamos, New Mexico, USA'",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The filming location localized text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmingLocation",
    "possibleTypes": []
  },
  "FilmingLocationConnection": {
    "args": [],
    "description": "Pagination for filming locations which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of locations",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "FilmingLocationEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "FilmingLocationRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmingLocationConnection",
    "possibleTypes": []
  },
  "FilmingLocationEdge": {
    "args": [],
    "description": "Page of filming locations",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A filming location node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "FilmingLocation"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Location 3 out of 28",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmingLocationEdge",
    "possibleTypes": []
  },
  "FilmingLocationRestriction": {
    "args": [],
    "description": "Information about restrictions applied to filming locations",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FilmingLocationRestriction",
    "possibleTypes": []
  },
  "FilmingLocationSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of locations 'Los Angeles' OR 'Paris', PLUS\nthe title must contain 'Austin', specify anyKeywords: ['Los Angeles', 'Paris'] plus\nallKeywords: ['Austin']",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these locations",
        "list": true,
        "name": "allLocations",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these locations",
        "list": true,
        "name": "anyLocations",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FilmingLocationSearchConstraint",
    "possibleTypes": []
  },
  "FilmographySearchConstraint": {
    "args": [],
    "description": "The constraints here are combined (AND).\n\nexample: \n\nfilmographyConstraint: {\n    allTitleIds: [\"tt0133093\", \"tt0209144\"],\n    anyTitleIds: [\"tt0457572\", \"tt2357547\"]\n    excludeTitleIds: [\"tt0468569\"]\n}\nwill match names that are credited in (\"tt0133093\" AND \"tt0209144\") AND (\"tt0457572\" OR \"tt2357547\") AND NOT \"tt0468569\"",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must be credited in ALL of these titles",
        "list": true,
        "name": "allTitleIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must be credited in AT LEAST ONE of these titles",
        "list": true,
        "name": "anyTitleIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must be credited in NONE of these titles\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeTitleIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FilmographySearchConstraint",
    "possibleTypes": []
  },
  "FilterInclusion": {
    "args": [],
    "description": "Common enum for filtering options include/exclude/no filter(omitted)",
    "enumValues": [
      {
        "description": null,
        "name": "EXCLUDE"
      },
      {
        "description": null,
        "name": "INCLUDE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "FilterInclusion",
    "possibleTypes": []
  },
  "FilterPlots": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "type",
        "nullable": true,
        "type": "PlotType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FilterPlots",
    "possibleTypes": []
  },
  "FilterSpoilers": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "EXCLUDE_SPOILERS"
      },
      {
        "description": null,
        "name": "SPOILERS_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "FilterSpoilers",
    "possibleTypes": []
  },
  "FilterVersions": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ALL_VERSIONS"
      },
      {
        "description": null,
        "name": "ORIGINAL_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "FilterVersions",
    "possibleTypes": []
  },
  "FloatRangeInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "max",
        "nullable": true,
        "type": "Float"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "min",
        "nullable": true,
        "type": "Float"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FloatRangeInput",
    "possibleTypes": []
  },
  "FollowFilter": {
    "args": [],
    "description": "Follow filter options.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Return followed entities meeting the specified type constraints.  If no\nfollowTypeConstraints are specified, all FollowEntityTypes are returned.",
        "list": false,
        "name": "followTypeConstraints",
        "nullable": true,
        "type": "FollowTypeFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return followed entities meeting the specified interest constraints. If no\ninterestConstraints are specified, all followed Interests are returned.",
        "list": false,
        "name": "interestConstraints",
        "nullable": true,
        "type": "FollowInterestFilterConstraints"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FollowFilter",
    "possibleTypes": []
  },
  "FollowInterestFilterConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match followed Interests matching any of the requested Interest IDs",
        "list": true,
        "name": "anyInterestIds",
        "nullable": false,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FollowInterestFilterConstraints",
    "possibleTypes": []
  },
  "FollowSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "FollowSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FollowSort",
    "possibleTypes": []
  },
  "FollowSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort entities based on their last updated time\nDESC: Latest dates to earliest dates",
        "name": "LAST_UPDATED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "FollowSortBy",
    "possibleTypes": []
  },
  "FollowTypeFilterConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match followed entities matching any of the requested types",
        "list": true,
        "name": "anyFollowTypes",
        "nullable": false,
        "type": "FollowedEntityType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "FollowTypeFilterConstraints",
    "possibleTypes": []
  },
  "FollowedEntitiesConnection": {
    "args": [],
    "description": "Pagination for followed entities, which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of followed entities.",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "FollowedEntitiesEdge"
      },
      {
        "args": [],
        "description": "Details of the page.",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of followed entities in the entire set.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FollowedEntitiesConnection",
    "possibleTypes": []
  },
  "FollowedEntitiesEdge": {
    "args": [],
    "description": "Item in a page of followed entities.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID.",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A followed entity node.",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "FollowedEntity"
      },
      {
        "args": [],
        "description": "Position of this item in this context.",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FollowedEntitiesEdge",
    "possibleTypes": []
  },
  "FollowedEntity": {
    "args": [],
    "description": "Follow entity type union.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "FollowedEntity",
    "possibleTypes": [
      "Interest"
    ]
  },
  "FollowedEntityType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "INTEREST"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "FollowedEntityType",
    "possibleTypes": []
  },
  "FollowerStatistics": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Displayable Count of total number of users who have followed a followable entity",
        "kind": "",
        "list": false,
        "name": "displayableCount",
        "nullable": false,
        "type": "LocalizedDisplayableCount"
      },
      {
        "args": [],
        "description": "The total number of users who have followed a followable entity",
        "kind": "",
        "list": false,
        "name": "totalCount",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "FollowerStatistics",
    "possibleTypes": []
  },
  "ForgotPasswordRedirectURLInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Association handle of the login context i.e. imdb_us",
        "list": false,
        "name": "associationHandle",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ForgotPasswordRedirectURLInput",
    "possibleTypes": []
  },
  "ForgotPasswordRedirectURLOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Redirect URL for user forgot password flow",
        "kind": "",
        "list": false,
        "name": "redirectURL",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ForgotPasswordRedirectURLOutput",
    "possibleTypes": []
  },
  "Gender": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "FEMALE"
      },
      {
        "description": null,
        "name": "MALE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "Gender",
    "possibleTypes": []
  },
  "GenderIdentity": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GenderIdentity",
    "possibleTypes": []
  },
  "GenderIdentitySearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "returns names that identify as ANY of the gender identities in the list",
        "list": true,
        "name": "anyGender",
        "nullable": true,
        "type": "NameGenderIdentity"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "returns names that identify as NONE of the gender identities in the list\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeGender",
        "nullable": true,
        "type": "NameGenderIdentity"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GenderIdentitySearchConstraint",
    "possibleTypes": []
  },
  "GenreItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Genre as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleGenreProperty"
      },
      {
        "args": [],
        "description": "A non-localized token representing the genre (e.g. 'Action').",
        "kind": "",
        "list": false,
        "name": "genreId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "An opaque unique identifier for the genre.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is written in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Display text for the genre (e.g. 'Action').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GenreItem",
    "possibleTypes": []
  },
  "GenreSearchConstraint": {
    "args": [],
    "description": "Available genres https://tiny.amazon.com/1ch8tksjf/codeamazpackIMDbblobmainsrc",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of the specified genres.\n\nNumber of genres specified should not exceed the optional `maxRelevantGenres` parameter.",
        "list": true,
        "name": "allGenreIds",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain at least one of the specified genres",
        "list": true,
        "name": "anyGenreIds",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Titles that include the specified genres will not be matched.\n\nNot affected by `maxRelevantGenres`.\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeGenreIds",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Specify a number as the n most relevant genres associated with a title to match against when also specifying\n`allGenreIds` and/or `anyGenreIds`. For example, if you provide a maxRelevantGenres of 2, only the two most relevant\ngenres associated with a title will be considered for your search, and all others are ignored.\n\nMust be a postive non-zero number. Has no effect on `excludeGenreIds`. Has no effect if no genres are specified.\nThrows GRAPHQL_VALIDATION_FAILED if `maxRelevantGenres` is lower than the number of genres specified under\n`allGenreIds`",
        "list": false,
        "name": "maxRelevantGenres",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GenreSearchConstraint",
    "possibleTypes": []
  },
  "GenreSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "GenreSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GenreSort",
    "possibleTypes": []
  },
  "GenreSortBy": {
    "args": [],
    "description": "Default Sorting is currently alphabetical by English value",
    "enumValues": [
      {
        "description": null,
        "name": "DEFAULT"
      },
      {
        "description": null,
        "name": "RELEVANCE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "GenreSortBy",
    "possibleTypes": []
  },
  "GenreSummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The genre",
        "kind": "",
        "list": false,
        "name": "genre",
        "nullable": false,
        "type": "GenreItem"
      },
      {
        "args": [],
        "description": "The total number of credits for the genre",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GenreSummary",
    "possibleTypes": []
  },
  "GetExportsInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "exportTypes",
        "nullable": false,
        "type": "ExportType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GetExportsInput",
    "possibleTypes": []
  },
  "GetLatestUIWorkflowInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The unique identifier for a UIWorkflow execution",
        "list": false,
        "name": "executionId",
        "nullable": false,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GetLatestUIWorkflowInput",
    "possibleTypes": []
  },
  "GetLatestUIWorkflowOutput": {
    "args": [],
    "description": "Defines the output response type for the getLatestUIWorkflow query.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The latest server-driven UI workflow model stored by the service for the requested input.\nIn the future there may be other types of workflow such as a full-page workflow so for extensibility it is\noptional.",
        "kind": "",
        "list": false,
        "name": "workflow",
        "nullable": true,
        "type": "UIWorkflow"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GetLatestUIWorkflowOutput",
    "possibleTypes": []
  },
  "GetNameWeightInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "POUND",
        "description": "",
        "list": false,
        "name": "unit",
        "nullable": true,
        "type": "WeightUnit"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GetNameWeightInput",
    "possibleTypes": []
  },
  "GetPlacementsInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "An optional set of page targeting criteria\n  \nSymphony allows you to specify page targeting criteria in addition to container type, ID, and slot\nDocumentation: https://w.amazon.com/bin/view/ContentSymphony/UserGuide#HSchedulingplacements",
        "list": true,
        "name": "additionalPageTargetingCriteria",
        "nullable": true,
        "type": "SymphonyMultiValueMapEntry"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The id of the Symphony container.\neg. tconst, nconst, home, india",
        "list": false,
        "name": "containerId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The type of symphony container.\neg. imdb-app-title",
        "list": false,
        "name": "containerType",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "An optional set of query params\n  \nSymphony allows you to override content in the form of query params. This is useful for content creators\nto preview new content, content in different languages, etc.\nDocumentation: https://w.amazon.com/bin/view/ContentSymphony/UserGuide#HPreviewingyourcontent",
        "list": true,
        "name": "queryParams",
        "nullable": true,
        "type": "SymphonyMultiValueMapEntry"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "An array of the slots to retrieve placements for.\neg. [\"center-1\", \"center-2\"]",
        "list": true,
        "name": "slotNames",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GetPlacementsInput",
    "possibleTypes": []
  },
  "Goof": {
    "args": [],
    "description": "Details of a single goof",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "GoofCategory"
      },
      {
        "args": [],
        "description": "Goof as a displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": false,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "Goof ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Votes from users about whether this goof item is interesting.",
        "kind": "",
        "list": false,
        "name": "interestScore",
        "nullable": false,
        "type": "InterestScore"
      },
      {
        "args": [],
        "description": "Is this goof a spoiler",
        "kind": "",
        "list": false,
        "name": "isSpoiler",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The goof text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Goof",
    "possibleTypes": []
  },
  "GoofCategory": {
    "args": [],
    "description": "A category of goofs describing the nature of a subset of goofs, e.g. 'Continuity'",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GoofCategory",
    "possibleTypes": []
  },
  "GoofCategoryWithGoofs": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "GoofCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "GoofCategoryWithGoofsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "GoofCategoryWithGoofsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "goofs",
        "nullable": true,
        "type": "GoofConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GoofCategoryWithGoofs",
    "possibleTypes": []
  },
  "GoofCategoryWithGoofsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GoofCategoryWithGoofsFilter",
    "possibleTypes": []
  },
  "GoofConnection": {
    "args": [],
    "description": "Pagination for Goof types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of goofs",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "GoofEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GoofConnection",
    "possibleTypes": []
  },
  "GoofEdge": {
    "args": [],
    "description": "Page of goofs",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Goof node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Goof"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Goof 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GoofEdge",
    "possibleTypes": []
  },
  "GoofMatchingSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of goof 'no handcuffs visible' OR 're-appear', PLUS\nthe title must contain 'military building', specify anyGoofTextTerms: ['no handuffs visible',\n 're-appear'] plus allGoofsTextTerms: ['military building']. Note that this is term match rather than\nphrase match, e.g., 'no handcuffs visible' would match titles that contain 'no handcuffs are visible'",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these search terms in at least one of its goofs.",
        "list": true,
        "name": "allGoofTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these search terms in at least one of its goofs",
        "list": true,
        "name": "anyGoofTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GoofMatchingSearchConstraint",
    "possibleTypes": []
  },
  "GoofsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GoofsFilter",
    "possibleTypes": []
  },
  "GranularConsentRecord": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "User consent decision for this entity",
        "kind": "",
        "list": false,
        "name": "consentOperation",
        "nullable": false,
        "type": "ConsentOperation"
      },
      {
        "args": [],
        "description": "Identifier for the entity (currently purpose or vendor)",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GranularConsentRecord",
    "possibleTypes": []
  },
  "GranularDirective": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Whether or not to allow a given action for this entity",
        "kind": "",
        "list": false,
        "name": "allow",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Identifier for the entity (currently purpose or vendor)",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GranularDirective",
    "possibleTypes": []
  },
  "GroupingTextInput": {
    "args": [],
    "description": "Input object for specifying how the grouping name should be displayed.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Specifies the text format to return.\nSupported values:\n- 'DEFAULT' (example: \"Director\")\n- 'SHORT' (example: \"Dir.\")\n\nIf omitted, defaults to 'DEFAULT'.",
        "list": false,
        "name": "format",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GroupingTextInput",
    "possibleTypes": []
  },
  "GuildAffiliationEdge": {
    "args": [],
    "description": "Page of guild affilation",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "GuildAffiliationVerificationStatus"
      },
      {
        "args": [],
        "description": "Position of this item in this context.",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GuildAffiliationEdge",
    "possibleTypes": []
  },
  "GuildAffiliationVerificationStatus": {
    "args": [],
    "description": "The guild affiliation that includes the Company and verification status",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The company that represents the guild",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "Whether this affiliation has been verified by the guild",
        "kind": "",
        "list": false,
        "name": "isVerifiedByGuild",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GuildAffiliationVerificationStatus",
    "possibleTypes": []
  },
  "GuildAffiliationVisibilitiesConnection": {
    "args": [],
    "description": "Pagination for the list of visibility settings for guilds a name is affiliated with",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "GuildAffiliationVisibilitiesEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of guilds affiliated with this name",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GuildAffiliationVisibilitiesConnection",
    "possibleTypes": []
  },
  "GuildAffiliationVisibilitiesEdge": {
    "args": [],
    "description": "Page of guild affiliation visibilities",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "GuildAffiliationVisibilityStatus"
      },
      {
        "args": [],
        "description": "Position of this item in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GuildAffiliationVisibilitiesEdge",
    "possibleTypes": []
  },
  "GuildAffiliationVisibilityLevel": {
    "args": [],
    "description": "The visibility setting for guild affiliations",
    "enumValues": [
      {
        "description": "Visible on IMDbPro only",
        "name": "IMDB_PRO_ONLY"
      },
      {
        "description": "Publicly visible",
        "name": "PUBLIC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "GuildAffiliationVisibilityLevel",
    "possibleTypes": []
  },
  "GuildAffiliationVisibilityStatus": {
    "args": [],
    "description": "The visibility configured for a specific guild affiliation company for a name",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The company that represents the guild",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "The visibility level configured for the guild",
        "kind": "",
        "list": false,
        "name": "visibility",
        "nullable": false,
        "type": "GuildAffiliationVisibilityLevel"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GuildAffiliationVisibilityStatus",
    "possibleTypes": []
  },
  "GuildAffiliationsConnection": {
    "args": [],
    "description": "Pagination for the list of affiliated guilds",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "GuildAffiliationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of affiliated guilds",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GuildAffiliationsConnection",
    "possibleTypes": []
  },
  "GuildAffiliationsFilter": {
    "args": [],
    "description": "Filter to specify the data verification type to include",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "includeDataVerificationTypes",
        "nullable": true,
        "type": "GuildDataVerificationType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "GuildAffiliationsFilter",
    "possibleTypes": []
  },
  "GuildDataVerificationType": {
    "args": [],
    "description": "The different verification types for guild data",
    "enumValues": [
      {
        "description": "The data has been verified by the customer",
        "name": "SELF_VERIFIED"
      },
      {
        "description": "The data has been verified by a third party",
        "name": "THIRD_PARTY_VERIFIED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "GuildDataVerificationType",
    "possibleTypes": []
  },
  "GuildMembershipDetail": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The company that represents the guild",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "The membershipId of the customer associated with the guild",
        "kind": "",
        "list": false,
        "name": "membershipId",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GuildMembershipDetail",
    "possibleTypes": []
  },
  "GuildStatus": {
    "args": [],
    "description": "Additional metadata describing guild status",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Whether or not the name is Actra Apprentice",
        "kind": "",
        "list": false,
        "name": "isActraApprentice",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Whether or not the name is non-union",
        "kind": "",
        "list": false,
        "name": "isNonUnion",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Whether or not the name is SAG eligible",
        "kind": "",
        "list": false,
        "name": "isSagEligible",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "GuildStatus",
    "possibleTypes": []
  },
  "HelpLink": {
    "args": [],
    "description": "Defines a link to a help article.\nClients can show a relevant help icon such as a question mark, based on its type.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The localized label for the link, for example 'See help guide'",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The URL target for the link.\nE.g. https://help.imdb.com/article/contribution/contribution-information/user-review-guidelines/GABTWSNLDNFLPRRH",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "HelpLink",
    "possibleTypes": []
  },
  "Histogram": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "demographic",
        "nullable": false,
        "type": "Demographic"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "histogramValues",
        "nullable": false,
        "type": "HistogramValues"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Histogram",
    "possibleTypes": []
  },
  "HistogramValues": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "rating",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "voteCount",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "HistogramValues",
    "possibleTypes": []
  },
  "Image": {
    "args": [],
    "description": "Image type\nExtends external type.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Image caption text\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "caption",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "Image copyright text\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "copyright",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          },
          {
            "defaultValue": "",
            "description": "The const the image is being rendered from (name, list, etc).",
            "kind": "ID",
            "list": false,
            "name": "relatedId",
            "nullable": true,
            "type": "ID"
          }
        ],
        "description": "Returns the 'correct this image' Link.\nWill be null if there is no correction Link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "correctionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Countries associated with the image\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "countries",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "The creator of the image\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "createdBy",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Date the photo was created\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "createdOn",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "Original height of the image resource, in pixels\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Languages of text in the image\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "languages",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Name IDs for people in the image\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "names",
        "nullable": true,
        "type": "Name"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          },
          {
            "defaultValue": "",
            "description": "The const the image is being rendered from (name, list, etc).",
            "kind": "ID",
            "list": false,
            "name": "relatedId",
            "nullable": true,
            "type": "ID"
          }
        ],
        "description": "Returns the 'report this image' Link.\nWill be null if there is no report Link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "reportingLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "Image source and attribution data\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "source",
        "nullable": true,
        "type": "Source"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Title IDs for titles related to the image\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "titles",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Image type token\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "URL for the image resource\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Original width of the image resource, in pixels\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Image",
    "possibleTypes": []
  },
  "ImageAndLinkCallToAction": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Contains the action link data",
        "kind": "",
        "list": false,
        "name": "action",
        "nullable": false,
        "type": "ActionLink"
      },
      {
        "args": [],
        "description": "Provides data for background image resource.",
        "kind": "",
        "list": false,
        "name": "backgroundImage",
        "nullable": true,
        "type": "CallToActionImage"
      },
      {
        "args": [],
        "description": "An identifier for the returned result of a CTA.\nA CTA will have multiple potential results, with each result having its own identifier.\nThis value is only unique within the CTA. It is not globally unique.\nThe resultId can be used as resultOverride input argument to specify a specific result\nshould be returned for the requested CTA.",
        "kind": "",
        "list": false,
        "name": "resultId",
        "nullable": false,
        "type": "ResultID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageAndLinkCallToAction",
    "possibleTypes": []
  },
  "ImageConnection": {
    "args": [],
    "description": "Pagination for Image types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ImageEdge"
      },
      {
        "args": [],
        "description": "Indicates the possible image facets available for filtering on",
        "kind": "",
        "list": false,
        "name": "facets",
        "nullable": true,
        "type": "ImageFacets"
      },
      {
        "args": [],
        "description": "Indicates that image collection was changed, pagination result might be outdated if true",
        "kind": "",
        "list": false,
        "name": "isPaginationDirty",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "ImageRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageConnection",
    "possibleTypes": []
  },
  "ImageEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Image"
      },
      {
        "args": [],
        "description": "Position of the node in this context. eg: Image 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageEdge",
    "possibleTypes": []
  },
  "ImageEditParameters": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The cropping parameters to be applied to this name page's primary image",
        "kind": "",
        "list": false,
        "name": "cropBox",
        "nullable": true,
        "type": "CroppingParameters"
      },
      {
        "args": [],
        "description": "The degree (0-360) by which the image should be rotated for display",
        "kind": "",
        "list": false,
        "name": "rotation",
        "nullable": true,
        "type": "Float"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageEditParameters",
    "possibleTypes": []
  },
  "ImageFacets": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Paginatable list of galleries related to this const's images, with associated count of how many images match",
        "kind": "",
        "list": false,
        "name": "galleries",
        "nullable": true,
        "type": "ImageGalleryFacetConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Paginatable list of names related to this const's images, with associated count of how many images match",
        "kind": "",
        "list": false,
        "name": "names",
        "nullable": true,
        "type": "NameFacetConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Paginatable list of titles related to this const's images, with associated count of how many images match",
        "kind": "",
        "list": false,
        "name": "titles",
        "nullable": true,
        "type": "TitleFacetConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Optionally limit the number of image type filter options returned",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Image types with counts of how many images are of that type, sorted by their counts in descending order",
        "kind": "",
        "list": true,
        "name": "types",
        "nullable": true,
        "type": "ImageTypeFacet"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageFacets",
    "possibleTypes": []
  },
  "ImageFileType": {
    "args": [],
    "description": "File type of the image asset",
    "enumValues": [
      {
        "description": null,
        "name": "JPG"
      },
      {
        "description": null,
        "name": "PNG"
      },
      {
        "description": null,
        "name": "SVG"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ImageFileType",
    "possibleTypes": []
  },
  "ImageGallery": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "galleryText",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Parameter to go around cache, expected to use cursor as a value",
            "kind": "String",
            "list": false,
            "name": "bust",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ImagesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ImagesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "images",
        "nullable": true,
        "type": "ImageConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageGallery",
    "possibleTypes": []
  },
  "ImageGalleryFacetConnection": {
    "args": [],
    "description": "Pagination for Image gallery facets",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ImageGalleryFacetEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Provides information on the total number of galleries you could filter on",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageGalleryFacetConnection",
    "possibleTypes": []
  },
  "ImageGalleryFacetEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ImageGallery"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "How many items are associated with this image gallery node",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageGalleryFacetEdge",
    "possibleTypes": []
  },
  "ImageGalleryFilterConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match images appearing in all of the requested galleries",
        "list": true,
        "name": "allGalleryIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match images appearing in any of the requested galleries",
        "list": true,
        "name": "anyGalleryIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ImageGalleryFilterConstraints",
    "possibleTypes": []
  },
  "ImageNameFilterConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match images featuring all of the requested names",
        "list": true,
        "name": "allNameIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match images featuring any of the requested names",
        "list": true,
        "name": "anyNameIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ImageNameFilterConstraints",
    "possibleTypes": []
  },
  "ImageRestriction": {
    "args": [],
    "description": "Information about restrictions applied to images",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageRestriction",
    "possibleTypes": []
  },
  "ImageTitleFilterConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match images related to all of the requested titles",
        "list": true,
        "name": "allTitleIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match images related to any of the requested titles",
        "list": true,
        "name": "anyTitleIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ImageTitleFilterConstraints",
    "possibleTypes": []
  },
  "ImageType": {
    "args": [],
    "description": "An ImageType provides meta information describing the type of a given image,\nsuch as whether it is a Poster or a photo from an Event.\nIt includes a localized display label as well as a canonical non-localized imageTypeID,\nthat can be used as input to image filter APIs.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID for this localized concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The canonical ID for this image type, for use as inputs to other fields, e.g. still_frame",
        "kind": "",
        "list": false,
        "name": "imageTypeId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The language of the display label returned in the text field",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The display label for the image type, such as Still Frame",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageType",
    "possibleTypes": []
  },
  "ImageTypeFacet": {
    "args": [],
    "description": "Provides information on how many images in a gallery match the specified image type",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Number of images of this type",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Image Type information including display label",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "ImageType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageTypeFacet",
    "possibleTypes": []
  },
  "ImageTypeWithImages": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The image type common for all of the associated images",
        "kind": "",
        "list": false,
        "name": "imageType",
        "nullable": false,
        "type": "ImageType"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The first page of images in each category",
        "kind": "",
        "list": false,
        "name": "images",
        "nullable": true,
        "type": "ImageTypesConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageTypeWithImages",
    "possibleTypes": []
  },
  "ImageTypesConnection": {
    "args": [],
    "description": "Pagination for images by type, page info is intended for use with the related images field.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ImageEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "ImageRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ImageTypesConnection",
    "possibleTypes": []
  },
  "ImagesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Return images meeting the specified gallery constraints",
        "list": false,
        "name": "galleryConstraints",
        "nullable": true,
        "type": "ImageGalleryFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return images meeting the specified name constraints",
        "list": false,
        "name": "nameConstraints",
        "nullable": true,
        "type": "ImageNameFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return only images tagged with at least a minimum and/or at most a maximum number of names",
        "list": false,
        "name": "namesCount",
        "nullable": true,
        "type": "CountInterval"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return images meeting the specified title constraints",
        "list": false,
        "name": "titleConstraints",
        "nullable": true,
        "type": "ImageTitleFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return only images which are one of these types",
        "list": true,
        "name": "types",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ImagesFilter",
    "possibleTypes": []
  },
  "InTheatersSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title must have a showtime in a theater that has all the specified attributes.\nWhen using this field, it is REQUIRED to use the Location field, or GRAPHQL_VALIDATION_FAILED will be thrown.",
        "list": true,
        "name": "allTheaterAttributes",
        "nullable": true,
        "type": "SearchTheaterAttribute"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must be showing in at least one of the specified theaters (e.g., `ci1234567`).\nThrows GRAPHQL_VALIDATION_FAILED if more than 400 Cinema IDs are provided.\nThrows GRAPHQL_VALIDATION_FAILED if both anyCinemaIds and location are provided.",
        "list": true,
        "name": "anyCinemaIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title must have a showtime in a theater within the specified date/time range.\n`start` and `end` must be provided in ISO-8601 format (e.g. `2025-06-19T17:35:25Z`).\nIf `dateTimeRange.end` is not provided, the `end` DateTime will default to `3000-01-01T00:00:00Z`.\nWhen using this field, it is REQUIRED to use either the location field or the\nanyCinemaIds field, otherwise GRAPHQL_VALIDATION_FAILED will be thrown.",
        "list": false,
        "name": "dateTimeRange",
        "nullable": true,
        "type": "ShowtimesTitlesDateTimeRangeFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must have a showtime in a theater within the specified ShowtimesLocation.\nThrows GRAPHQL_VALIDATION_FAILED if both anyCinemaIds and location are provided.",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "ShowtimesLocation"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must have a showtime in one of the theaters in the requesting user's favorite theaters list.\nCustomerId is required and is determined by x-imdb-customer-id header (gateway determines from request).\nThrows UNAUTHENTICATED if no CustomerId is provided.",
        "list": false,
        "name": "myFavoriteTheaters",
        "nullable": true,
        "type": "MyFavoriteTheaterSearchFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "InTheatersSearchConstraint",
    "possibleTypes": []
  },
  "IntRangeInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "max",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "min",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "IntRangeInput",
    "possibleTypes": []
  },
  "IntThresholdValidationConstraint": {
    "args": [],
    "description": "Represents an integer threshold constraint with an associated error feedback that can be evaluated client-side.\nClients should always treat the threshold as inclusive (ie minimum 5 would mean 5 is valid).\nUsed to express a numeric limit such as maximum words or minimum characters etc.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The feedback to display to the customer related to the constraint.",
        "kind": "",
        "list": false,
        "name": "feedback",
        "nullable": false,
        "type": "ValidationFeedbackContent"
      },
      {
        "args": [],
        "description": "The threshold value for validation (inclusive)",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "IntThresholdValidationConstraint",
    "possibleTypes": []
  },
  "Interest": {
    "args": [],
    "description": "Interest type\nExtends external type.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The Category for this specific interest.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "InterestCategory"
      },
      {
        "args": [],
        "description": "The displayable description of this interest, e.g. 'Psycological horror is a subgenre of horror and psychological\nfiction...'.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Return Engagement Statistics for an interest\n\n---------------------\nGraphlet Details:\n- Name: engagementData\n- CTI: IMDb/GraphQL/Engagement Data\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "engagementStatistics",
        "nullable": true,
        "type": "EngagementStatistics"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: engagementData\n- CTI: IMDb/GraphQL/Engagement Data\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The primary image for this interest.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [],
        "description": "The displayable primary descriptor of this interest, e.g. 'Psychological Horror'.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "primaryText",
        "nullable": true,
        "type": "InterestText"
      },
      {
        "args": [],
        "description": "The current score for this interest. A higher value is better.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "score",
        "nullable": true,
        "type": "InterestImportanceScore"
      },
      {
        "args": [],
        "description": "The displayable secondary descriptor of this interest, e.g. 'subgenre'.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "secondaryText",
        "nullable": true,
        "type": "InterestText"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Paginated list of similar interests. Sorted by the number of users following\nthe interest (most to least). Supports page size of at most 250.\nRequesting a page size larger than the maximum supported will result in the maximum size being returned.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "similarInterests",
        "nullable": true,
        "type": "InterestConnection"
      },
      {
        "args": [],
        "description": "Visibility status of the interest\n\nOnly when the below header values are satisfied\n  x-imdb-internal-client == true and\n  x-imdb-non-1p-client == false and\n  x-imdb-client-name == 'imdb-search-indexer'\nwill we return both PUBLIC and HIDDEN interests\nOtherwise, we will only return PUBLIC interests\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "visibilityLevel",
        "nullable": true,
        "type": "InterestVisibilityLevel"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Interest",
    "possibleTypes": []
  },
  "InterestCategoriesFilter": {
    "args": [],
    "description": "Filter options for interest categories.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific interest categories. Category IDs are ephemeral and invalid IDs will be ignored.",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "InterestCategoriesFilter",
    "possibleTypes": []
  },
  "InterestCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque unique identifier for this InterestCategory.\nThis can be used in InterestCategoriesFilter.categories to refine an interestCategories query, but should be assumed\nto be ephemeral like a pagination cursor.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "A paginated list of all interests in this category, sorted alphabetically. Supports page size of at most 250.\nRequesting a page size larger than the maximum supported will result in the maximum size being returned.",
        "kind": "",
        "list": false,
        "name": "interests",
        "nullable": true,
        "type": "InterestConnection"
      },
      {
        "args": [],
        "description": "The language of the display text.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayable description of this category, e.g. 'Horror'.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestCategory",
    "possibleTypes": []
  },
  "InterestCategoryConnection": {
    "args": [],
    "description": "Pagination for InterestCategory types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of InterestCategories.",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "InterestCategoryEdge"
      },
      {
        "args": [],
        "description": "Details of the page.",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of categories in the entire set.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestCategoryConnection",
    "possibleTypes": []
  },
  "InterestCategoryEdge": {
    "args": [],
    "description": "Item in a page of InterestCategories.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID.",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An InterestCategory node.",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "InterestCategory"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestCategoryEdge",
    "possibleTypes": []
  },
  "InterestConnection": {
    "args": [],
    "description": "Pagination for Interest types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of Interests.",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "InterestEdge"
      },
      {
        "args": [],
        "description": "Details of the page.",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of interests in the entire set.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestConnection",
    "possibleTypes": []
  },
  "InterestEdge": {
    "args": [],
    "description": "Item in a page of Interests.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor for this interest",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The node for this interest.",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Interest"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestEdge",
    "possibleTypes": []
  },
  "InterestImportanceScore": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "currentScore",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestImportanceScore",
    "possibleTypes": []
  },
  "InterestScore": {
    "args": [],
    "description": "Votes from users about whether an item is interesting.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The number of users who found this interesting.",
        "kind": "",
        "list": false,
        "name": "usersInterested",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The total number of users who have voted on this item being interesting or not.",
        "kind": "",
        "list": false,
        "name": "usersVoted",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestScore",
    "possibleTypes": []
  },
  "InterestSearchConnection": {
    "args": [],
    "description": "Pagination for interest search results.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "InterestSearchEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestSearchConnection",
    "possibleTypes": []
  },
  "InterestSearchConstraint": {
    "args": [],
    "description": "Match titles based on their tagged interests.\nAny combination of `all`, `any`, and `exclude` inputs can be specified.\nNote that a title tagged with both an included and excluded interest would\nstill be excluded.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of the specified interests",
        "list": true,
        "name": "allInterestIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain at least one of the specified interests",
        "list": true,
        "name": "anyInterestIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Titles that include any of the specified interests will never be matched",
        "list": true,
        "name": "excludeInterestIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "InterestSearchConstraint",
    "possibleTypes": []
  },
  "InterestSearchEdge": {
    "args": [],
    "description": "Item in a page of interest search results.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Interest"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestSearchEdge",
    "possibleTypes": []
  },
  "InterestText": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterestText",
    "possibleTypes": []
  },
  "InterestVisibilityLevel": {
    "args": [],
    "description": "Visibility status of an interest\n\nPUBLIC means callers may expose the interest to the end user\nHIDDEN means callers may get the data but may not expose the interest to the end user",
    "enumValues": [
      {
        "description": null,
        "name": "HIDDEN"
      },
      {
        "description": null,
        "name": "PUBLIC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "InterestVisibilityLevel",
    "possibleTypes": []
  },
  "Interstitial": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Buttons to be rendered in the list order\nClient should always render them at the bottom of the page/view",
        "kind": "",
        "list": true,
        "name": "buttons",
        "nullable": false,
        "type": "InterstitialButtonComponent"
      },
      {
        "args": [],
        "description": "UI components to be rendered in the list order\nCurrently, InterstitialButtonComponent are only returned in buttons field",
        "kind": "",
        "list": true,
        "name": "components",
        "nullable": false,
        "type": "InterstitialComponent"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Interstitial",
    "possibleTypes": []
  },
  "InterstitialButtonAction": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Convert an IMDb account that has existing LWA linkage to the authenticated Amazon account.\nClient should call conversion mutation with just the Amazon token.",
        "name": "CONVERT_LWA_TO_AAP"
      },
      {
        "description": "Convert the authenticated IMDb account to the authenticated Amazon account.\nClient should call conversion mutation with both tokens.",
        "name": "CONVERT_TO_AAP"
      },
      {
        "description": "Create new IMDb account using authenticated Amazon account.\nClient should proceed with new account creation.",
        "name": "CREATE_NEW_ACCOUNT"
      },
      {
        "description": "Start IMDb account linking process.\nClient should initiate the IMDb authentication flow for linking.",
        "name": "LINK_IMDB_ACCOUNT"
      },
      {
        "description": "Start IMDb account linking process.\nClient should initiate the IMDb authentication flow for linking with a prefilled email.",
        "name": "LINK_IMDB_ACCOUNT_EMAIL_PREFILLED"
      },
      {
        "description": "Return user to sign-in options.\nClient should navigate to the main sign-in options page/screen.",
        "name": "SHOW_SIGN_IN_OPTIONS"
      },
      {
        "description": "Redirect user to Amazon (AAP) sign-in flow.\nClient should navigate to the Sign in with Amazon page/screen.\nUsed for standard Amazon account authentication.",
        "name": "SIGN_IN_WITH_AMAZON"
      },
      {
        "description": "Redirect user to IMDb sign-in flow.\nClient should navigate to the Sign in with IMDb page/screen.",
        "name": "SIGN_IN_WITH_IMDB"
      },
      {
        "description": "Redirect user to IMDb sign-in flow with a prefilled email.\nClient should navigate to the Sign in with IMDb page/screen.",
        "name": "SIGN_IN_WITH_IMDB_EMAIL_PREFILLED"
      },
      {
        "description": "Redirect user to LWA sign-in flow.\nClient should navigate to the Sign in with Amazon page/screen.\nUsed for third-party applications (e.g., IMDb) requiring Amazon authentication.",
        "name": "SIGN_IN_WITH_LWA"
      },
      {
        "description": "Sign out the current user.\nClient should clear authentication state and return to unauthenticated state.",
        "name": "SIGN_OUT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "InterstitialButtonAction",
    "possibleTypes": []
  },
  "InterstitialButtonComponent": {
    "args": [],
    "description": "Component representing an interactive button",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Action identifier for client handling when URL is not provided",
        "kind": "",
        "list": false,
        "name": "action",
        "nullable": false,
        "type": "InterstitialButtonAction"
      },
      {
        "args": [],
        "description": "Button text",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "Visual style of the button",
        "kind": "",
        "list": false,
        "name": "style",
        "nullable": false,
        "type": "InterstitialButtonStyle"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterstitialButtonComponent",
    "possibleTypes": []
  },
  "InterstitialButtonStyle": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Primary button - filled, emphasized style for main actions",
        "name": "PRIMARY"
      },
      {
        "description": "Secondary button - outlined style for alternative actions",
        "name": "SECONDARY"
      },
      {
        "description": "Text button - transparent style for alternative actions",
        "name": "TEXT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "InterstitialButtonStyle",
    "possibleTypes": []
  },
  "InterstitialComponent": {
    "args": [],
    "description": "Union of possible interstitial components",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "InterstitialComponent",
    "possibleTypes": [
      "InterstitialButtonComponent",
      "InterstitialConsumerAccountInfoComponent",
      "InterstitialDialogComponent",
      "InterstitialProAccountInfoComponent"
    ]
  },
  "InterstitialConsumerAccountInfoComponent": {
    "args": [],
    "description": "Component displaying account information being converted in Consumer flow",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "User's first name, or nickname if no first name was provided",
        "kind": "",
        "list": false,
        "name": "displayName",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Email address associated with the IMDb account\nNull if account conversion has partial failure (email was removed but conversion is not finished)\nClient should render view without email when null",
        "kind": "",
        "list": false,
        "name": "email",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Public profile information\nClient should render user's profile image if available",
        "kind": "",
        "list": false,
        "name": "profile",
        "nullable": false,
        "type": "UserProfile"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterstitialConsumerAccountInfoComponent",
    "possibleTypes": []
  },
  "InterstitialDialogComponent": {
    "args": [],
    "description": "Component displaying dialog content",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Visual style of the dialog",
        "kind": "",
        "list": false,
        "name": "style",
        "nullable": true,
        "type": "InterstitialDialogStyle"
      },
      {
        "args": [],
        "description": "Text content",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterstitialDialogComponent",
    "possibleTypes": []
  },
  "InterstitialDialogStyle": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Contained text - display text within a box\nUsed for highlighting important messages (e.g., highlighting account conversion text)",
        "name": "BOX"
      },
      {
        "description": "Primary text - used for key information",
        "name": "PRIMARY"
      },
      {
        "description": "Secondary text - used for additional information (e.g., company trivia)",
        "name": "SECONDARY"
      },
      {
        "description": "Title text - used for dialog titles",
        "name": "TITLE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "InterstitialDialogStyle",
    "possibleTypes": []
  },
  "InterstitialProAccountInfoComponent": {
    "args": [],
    "description": "Component displaying account information being converted in Pro flow",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "User's full name, or nickname if no full name was provided",
        "kind": "",
        "list": false,
        "name": "displayName",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "IMDbPro membership tier\nNull if user does not have active IMDbPro subscription\nClient should render view without membership tier when null",
        "kind": "",
        "list": false,
        "name": "imdbProMembershipTier",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InterstitialProAccountInfoComponent",
    "possibleTypes": []
  },
  "InvalidAuthProviderInterstitialInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Allows input of Google or Apple to activate the missing account page",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "AuthProviderType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "InvalidAuthProviderInterstitialInput",
    "possibleTypes": []
  },
  "InvalidAuthProviderInterstitialOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "interstitial",
        "nullable": false,
        "type": "Interstitial"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "InvalidAuthProviderInterstitialOutput",
    "possibleTypes": []
  },
  "IsElementInList": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Returns true or false with respect to the presence of const in the list",
        "kind": "",
        "list": false,
        "name": "isElementInList",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Returns const id",
        "kind": "",
        "list": false,
        "name": "itemElementId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The list items that contain the const id",
        "kind": "",
        "list": true,
        "name": "itemIds",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "IsElementInList",
    "possibleTypes": []
  },
  "JobCreditAttribute": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "job",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "JobCreditAttribute",
    "possibleTypes": []
  },
  "KeyStaffFilter": {
    "args": [],
    "description": "Filter options for company key staff",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter by occupation IDs. Returns staff who have ANY of the specified occupations (OR logic)",
        "list": true,
        "name": "occupations",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "KeyStaffFilter",
    "possibleTypes": []
  },
  "KeyStaffSort": {
    "args": [],
    "description": "Input for sorting key staff",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Field to sort by",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "KeyStaffSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Sort order",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "KeyStaffSort",
    "possibleTypes": []
  },
  "KeyStaffSortBy": {
    "args": [],
    "description": "Available fields for sorting key staff",
    "enumValues": [
      {
        "description": "Sort by branch name alphabetically",
        "name": "BRANCH"
      },
      {
        "description": "Sort by job title/occupation alphabetically",
        "name": "JOB_TITLE"
      },
      {
        "description": "Sort by person's name alphabetically",
        "name": "NAME"
      },
      {
        "description": "Sort by StarMeter ranking (lower rank number = better rank)",
        "name": "STARMETER"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "KeyStaffSortBy",
    "possibleTypes": []
  },
  "Keyword": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A category describing the nature of the keyword, e.g. 'plot related' or 'potentially offensive'\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "KeywordCategory"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The display data for a keyword\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "KeywordText"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The associated titles for a keyword\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "titles",
        "nullable": true,
        "type": "KeywordTitleConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Keyword",
    "possibleTypes": []
  },
  "KeywordCategory": {
    "args": [],
    "description": "Keyword Category details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Category ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "KeywordCategory",
    "possibleTypes": []
  },
  "KeywordMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All the valid keyword categories",
        "kind": "",
        "list": true,
        "name": "keywordCategories",
        "nullable": false,
        "type": "KeywordCategory"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "KeywordMetadata",
    "possibleTypes": []
  },
  "KeywordSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of sub-genre 'martial-arts' OR 'cyberpunk', AND\nthe title must contain 'cat' AND the title must NOT contain 'dog', specify anyKeywords: ['martial-arts', 'cyberpunk'],\nallKeywords: ['cat'], and excludeKeywords: ['dog']",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these keywords",
        "list": true,
        "name": "allKeywords",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these keywords",
        "list": true,
        "name": "anyKeywords",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain NONE of these keywords\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeKeywords",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "KeywordSearchConstraint",
    "possibleTypes": []
  },
  "KeywordText": {
    "args": [],
    "description": "The keyword itself. Can contain lower case characters and punctuation, but no uppercase characters or spaces.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Keyword ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Displayed keyword text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "KeywordText",
    "possibleTypes": []
  },
  "KeywordTitleConnection": {
    "args": [],
    "description": "Pagination for Title types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of titles",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "KeywordTitleEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "KeywordTitleConnection",
    "possibleTypes": []
  },
  "KeywordTitleEdge": {
    "args": [],
    "description": "Page of titles",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Title node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Title 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "KeywordTitleEdge",
    "possibleTypes": []
  },
  "KnownForPreference": {
    "args": [],
    "description": "The known for source preference for a particular known for category for a company",
    "enumValues": [
      {
        "description": "Known for calculated using an algorithm",
        "name": "AUTOMATIC"
      },
      {
        "description": "Custom overridden known for",
        "name": "CUSTOM"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "KnownForPreference",
    "possibleTypes": []
  },
  "KnownForV2": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "credits",
        "nullable": false,
        "type": "CreditV2"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "NameKnownForRestriction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "KnownForV2",
    "possibleTypes": []
  },
  "Laboratories": {
    "args": [],
    "description": "Laboratories for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of laboratory items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "Laboratory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of laboratory items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Laboratories",
    "possibleTypes": []
  },
  "Laboratory": {
    "args": [],
    "description": "A lab used for a film, along with some flags and any attributes. For example, we could have a lab named ILM, which was\ncredited as Industrial Light & Magic, and used for developing specific sequences.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "The name of the laboratory as credited",
        "kind": "",
        "list": false,
        "name": "creditedAs",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Laboratory as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationProperty"
      },
      {
        "args": [],
        "description": "Indicates if the laboratory is uncredited",
        "kind": "",
        "list": false,
        "name": "isUncredited",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The laboratory",
        "kind": "",
        "list": false,
        "name": "laboratory",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Laboratory",
    "possibleTypes": []
  },
  "Language": {
    "args": [],
    "description": "A BCP-47 String with the primary language in ISO 639-1 followed by\na dash and ISO 3166-1 or UN M.49 code (e.g en-US es-419 fr-FR)\n\nhttps://en.wikipedia.org/wiki/ISO_639-1\nhttps://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nhttps://en.wikipedia.org/wiki/UN_M.49",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "SCALAR",
    "name": "Language",
    "possibleTypes": []
  },
  "LanguageSearchConstraint": {
    "args": [],
    "description": "Language contribution guidelines:\nhttps://help.imdb.com/article/contribution/titles/languages/GSCRBZYEH5NX5SXL",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that are spoken in ALL of these languages.\nLanguage in ISO 639 codes (IMDbLocaleConfig:language_codes.json)\nExample: To match titles that are spoken in Serbo-Croation AND Kriolu: ['qbo', 'qaq']",
        "list": true,
        "name": "allLanguages",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that are spoken in AT LEAST ONE of these languages at all.\nLanguage in ISO 639 codes (IMDbLocaleConfig:language_codes.json)\nExample: To match titles that are spoken in Serbo-Croation or Kriolu: ['qbo', 'qaq']",
        "list": true,
        "name": "anyLanguages",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that are primarily spoken in ONE of these languages.\nLanguage in ISO 639 codes (IMDbLocaleConfig:language_codes.json)\nExample: To match titles that are primarily spoken in Australian Sign Language or Brazilian Sign Language: ['asf', 'bfi']",
        "list": true,
        "name": "anyPrimaryLanguages",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude titles that are spoken in AT LEAST ONE of these languages.\nLanguage in ISO 639 codes (IMDbLocaleConfig:language_codes.json)\nExample: To match titles that are not spoken in Serbo-Croation or Kriolu: ['qbo', 'qaq']\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeLanguages",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude titles that are primarily spoken in ONE of these languages.\nLanguage in ISO 639 codes (IMDbLocaleConfig:language_codes.json)\nExample: To match titles that are not primarily spoken in Australian Sign\nLanguage or Brazilian Sign Language: ['asf', 'bfi']\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludePrimaryLanguages",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that are silent, or not silent.",
        "list": false,
        "name": "isSilent",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "LanguageSearchConstraint",
    "possibleTypes": []
  },
  "LatLong": {
    "args": [],
    "description": "Represents a location in the latitude/longitude format.\nValues should not be more precise than one hundredth of a degree. More precise inputs will be\ntreated as invalid inputs.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "lat",
        "nullable": false,
        "type": "LocationDecimal"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "long",
        "nullable": false,
        "type": "LocationDecimal"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "LatLong",
    "possibleTypes": []
  },
  "LatestTrailerFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The country field is an ISO 3166-1 alpha-2 country code (ex. US or GB).\nDetermine video eligibility based on the country.\nIf it is not set, it will default to US.",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match trailers based on their maturity classification.\nIf it is not set, it will default to exclude all the mature videos.",
        "list": false,
        "name": "maturityLevel",
        "nullable": true,
        "type": "MaturityLevel"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Prefer trailers whose audioLanguages include the preferredAudioLanguage.\nIf it is not set, it will default to en-US.",
        "list": false,
        "name": "preferredAudioLanguage",
        "nullable": true,
        "type": "Language"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "LatestTrailerFilter",
    "possibleTypes": []
  },
  "LengthMeasurement": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unit this measurement value is recorded in",
        "kind": "",
        "list": false,
        "name": "unit",
        "nullable": true,
        "type": "LengthUnit"
      },
      {
        "args": [],
        "description": "Numeric value for this measurement",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": true,
        "type": "Float"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LengthMeasurement",
    "possibleTypes": []
  },
  "LengthUnit": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "CENTIMETER"
      },
      {
        "description": null,
        "name": "METER"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "LengthUnit",
    "possibleTypes": []
  },
  "LinkCallToAction": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Contains the action link data",
        "kind": "",
        "list": false,
        "name": "action",
        "nullable": false,
        "type": "ActionLink"
      },
      {
        "args": [],
        "description": "An identifier for the returned result of a CTA.\nA CTA will have multiple potential results, with each result having its own identifier.\nThis value is only unique within the CTA. It is not globally unique.\nThe resultId can be used as resultOverride input argument to specify a specific result\nshould be returned for the requested CTA.",
        "kind": "",
        "list": false,
        "name": "resultId",
        "nullable": false,
        "type": "ResultID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LinkCallToAction",
    "possibleTypes": []
  },
  "LinkedAuthProvider": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Returns a help message with an obfuscated email in regards to resetting a user's password for a certain deprecated linked auth provider.\nA message is only returned if the auth provider link exists and the user has last logged in with that auth provider.\nAn empty response means no message needs to be shown.",
        "kind": "",
        "list": false,
        "name": "deprecationMessage",
        "nullable": true,
        "type": "AuthProviderDeprecationMessage"
      },
      {
        "args": [],
        "description": "Returns the type of 3rd party linked auth provider.",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "AuthProviderType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LinkedAuthProvider",
    "possibleTypes": []
  },
  "List": {
    "args": [],
    "description": "List Type\nEntity for federation. Other implementing services can extend using field 'id'.\nNon key fields are all marked as optional since this is a federation entity.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "itemElementIds",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Are elements with id (e.g. tt1000, tt2000,  etc.,) present in this list\nMultiple ids can be passed at a time. There's a limit of 10000 ids\nIf one of the id can\u2019t be checked then it throws an exception\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": true,
        "name": "areElementsInList",
        "nullable": true,
        "type": "IsElementInList"
      },
      {
        "args": [],
        "description": "Author of list.\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "author",
        "nullable": true,
        "type": "UserProfile"
      },
      {
        "args": [],
        "description": "Created time\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "createdDate",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "List description\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "ListDescription"
      },
      {
        "args": [],
        "description": "Unique id of list.\n\n---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "itemElementId",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Is element with id (e.g. tt00000001, nm00000002) part of the list\nOnly supported for authenticated users at this time.\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "isElementInList",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Gets whether the list is a predefined list.\nPredefined User Lists have a ListClass of CHECK_INS, FAVORITE_ACTORS,\nFAVORITE_THEATRES, NOT_INTERESTED, RESEARCH_NOTES, SEEN, or WATCH_LIST.\nThey are automatically created for a user, and cannot be deleted or renamed.\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "isPredefined",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ListItemFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ListItemFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "jumpToPosition",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "{by: LIST_ORDER, order: ASC}",
            "description": "",
            "kind": "ListItemSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ListItemSort"
          }
        ],
        "description": "Returns list items by increasing position order.\n  \njumpTo: option for token-based pagination following IMDbCommonGraphletSchema standards. Jumps to a specific list item\nID and will return the \"first\" items starting with the provided item ID. If the provided item ID is not found, this\noption will be ignored and will have the returned ListConnection's jumpToFound be false.\nWill throw a BAD_USER_INPUT if used with after, last, before, or jumpToPosition.\n  \njumpToPosition: option for index-based pagination. Jumps to a particular numerical, positive contextual position in\nthe list (the position after taking ListItemFilter and ListItemSort into account), and will return the \"first\" items\nstarting at the provided position value. Item positions are one-based.\nIf the provided jumpToPosition is 1 and the list is empty, this option will be ignored and will have the returned\nListConnection's jumpToFound be false while returning the empty list of items.\nWill throw a BAD_USER_INPUT if used with after, last, before, or jumpTo, or if there are no items at the provided\nposition.\n  \njumpToPosition should only be used when displaying only a single page at a time, and the entire list is not being\nloaded into memory. We recommend clients to use the standard token-based pagination mechanism whenever possible.\nThis option is available to enable the following list features -\n1. The ability to have bookmarks / links to specific points in a list for editing\n2. The ability to grab list chunks in parallel\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "items",
        "nullable": true,
        "type": "ListConnection"
      },
      {
        "args": [],
        "description": "Last modified time\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "lastModifiedDate",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "List Class\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "listClass",
        "nullable": true,
        "type": "ListClass"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "timeRanges",
            "nullable": false,
            "type": "ListInteractionCountTimeRange"
          }
        ],
        "description": "Get list interaction counts (views, shares) for a list, for each time range (ex: one week ago, all time).\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": true,
        "name": "listInteractionCounts",
        "nullable": true,
        "type": "ListInteractionCounts"
      },
      {
        "args": [],
        "description": "List Type\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "listType",
        "nullable": true,
        "type": "ListType"
      },
      {
        "args": [],
        "description": "List Name\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "ListName"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AdvancedNameSearchConstraints",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AdvancedNameSearchConstraints"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Option for index-based pagination. Jumps to a particular numerical, positive contextual position in\nthe list (the position after taking filter and sort into account), and will return the \"first\" items\nstarting at the provided position value.\n\nWill throw a BAD_USER_INPUT if used with \"after\", if less than or equal to zero, or greater than or equal to 10,000.\n\nIf the specified position is larger than the result set, will return no results (not null).",
            "kind": "Int",
            "list": false,
            "name": "jumpToPosition",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameListSearchSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "NameListSearchSort"
          }
        ],
        "description": "InvalidParameterErrors would be thrown for non-name lists.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "nameListItemSearch",
        "nullable": true,
        "type": "NameListItemSearchConnection"
      },
      {
        "args": [],
        "description": "Primary Image image for List\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "ListPrimaryImage"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AdvancedTitleSearchConstraints",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AdvancedTitleSearchConstraints"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Option for index-based pagination. Jumps to a particular numerical, positive contextual position in\nthe list (the position after taking filter and sort into account), and will return the \"first\" items\nstarting at the provided position value.\n\nWill throw a BAD_USER_INPUT if used with \"after\", if less than or equal to zero, or greater than or equal to 10,000.\n\nIf the specified position is larger than the result set, will return no results (not null).",
            "kind": "Int",
            "list": false,
            "name": "jumpToPosition",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleListSearchSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "TitleListSearchSort"
          }
        ],
        "description": "InvalidParameterErrors would be thrown for non-title lists.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "titleListItemSearch",
        "nullable": true,
        "type": "TitleListItemSearchConnection"
      },
      {
        "args": [],
        "description": "List Visibility\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "visibility",
        "nullable": true,
        "type": "ListVisibility"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "List",
    "possibleTypes": []
  },
  "ListClass": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ListClassId"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "ListClassName"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListClass",
    "possibleTypes": []
  },
  "ListClassId": {
    "args": [],
    "description": "List classes.\nPredefined Lists have a ListClassId of CHECK_INS, FAVORITE_ACTORS,\nFAVORITE_THEATRES, NOT_INTERESTED, RESEARCH_NOTES, SEEN, or WATCH_LIST.",
    "enumValues": [
      {
        "description": null,
        "name": "CHECK_INS"
      },
      {
        "description": null,
        "name": "FAVORITE_ACTORS"
      },
      {
        "description": null,
        "name": "FAVORITE_THEATRES"
      },
      {
        "description": null,
        "name": "INTERNAL"
      },
      {
        "description": null,
        "name": "LIST"
      },
      {
        "description": null,
        "name": "PRO_LIST"
      },
      {
        "description": null,
        "name": "RESEARCH_NOTES"
      },
      {
        "description": null,
        "name": "WATCH_LIST"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ListClassId",
    "possibleTypes": []
  },
  "ListClassName": {
    "args": [],
    "description": "The type of list\nEx: Watchlist, check ins list",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the predefined list class name",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayed predefined list class name",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListClassName",
    "possibleTypes": []
  },
  "ListCollectionConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ListCollectionEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListCollectionConnection",
    "possibleTypes": []
  },
  "ListCollectionEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "List"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListCollectionEdge",
    "possibleTypes": []
  },
  "ListConnection": {
    "args": [],
    "description": "A Connection which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ListItemEdge"
      },
      {
        "args": [],
        "description": "Denotes whether the data in connection has been updated after the passed pagination token",
        "kind": "",
        "list": false,
        "name": "isPaginationDirty",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Optional field returned if jumpTo param passed",
        "kind": "",
        "list": false,
        "name": "jumpToFound",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListConnection",
    "possibleTypes": []
  },
  "ListDescription": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Markdown text for list item description.\nThis field is editable by the list owner and is displayed under the item's image for each item on the list page.",
        "kind": "",
        "list": false,
        "name": "originalText",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListDescription",
    "possibleTypes": []
  },
  "ListExportDetail": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The date when the export becomes unavailable.\nAfter this date, the export will no longer be returned by the backend.",
        "kind": "",
        "list": false,
        "name": "expiresOn",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "exportType",
        "nullable": false,
        "type": "ExportType"
      },
      {
        "args": [],
        "description": "The metadata of the list being exported at the time of export request",
        "kind": "",
        "list": false,
        "name": "listExportMetadata",
        "nullable": true,
        "type": "ListExportMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "resultUrl",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "startedOn",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ExportStatus"
      },
      {
        "args": [],
        "description": "number of objects in the export",
        "kind": "",
        "list": false,
        "name": "totalExportedObjects",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListExportDetail",
    "possibleTypes": []
  },
  "ListExportMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Nickname of the user who created the list being exported",
        "kind": "",
        "list": false,
        "name": "authorNickname",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The list ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Class of the list",
        "kind": "",
        "list": false,
        "name": "listClassId",
        "nullable": false,
        "type": "ListClassId"
      },
      {
        "args": [],
        "description": "Type of the list",
        "kind": "",
        "list": false,
        "name": "listType",
        "nullable": false,
        "type": "ListTypeId"
      },
      {
        "args": [],
        "description": "Name of the list at the time of export request",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Primary image of the list at the time of export request",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "Image"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListExportMetadata",
    "possibleTypes": []
  },
  "ListFieldAttributeMetadata": {
    "args": [],
    "description": "Attribute Metadata for List Fields",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "listDescription",
        "nullable": false,
        "type": "ListTextFieldMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "listItemDescription",
        "nullable": false,
        "type": "ListTextFieldMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "listName",
        "nullable": false,
        "type": "ListTextFieldMetadata"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListFieldAttributeMetadata",
    "possibleTypes": []
  },
  "ListFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Collection of listClass filters, e.g. WATCH_LIST",
        "list": true,
        "name": "classTypes",
        "nullable": true,
        "type": "ListClassId"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "ListType filter, e.g. TITLES",
        "list": false,
        "name": "listElementType",
        "nullable": true,
        "type": "ListTypeId"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ListFilter",
    "possibleTypes": []
  },
  "ListInteractionCountTimeRange": {
    "args": [],
    "description": "Enum used for list interaction count ranges",
    "enumValues": [
      {
        "description": null,
        "name": "ALL_TIME"
      },
      {
        "description": null,
        "name": "ONE_WEEK"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ListInteractionCountTimeRange",
    "possibleTypes": []
  },
  "ListInteractionCounts": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Number of clicks this list has, or 0 if none.",
        "kind": "",
        "list": false,
        "name": "clicks",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "listId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "List interactions for the specified time range.",
        "kind": "",
        "list": false,
        "name": "timeRange",
        "nullable": false,
        "type": "ListInteractionCountTimeRange"
      },
      {
        "args": [],
        "description": "Number of views this list has, or 0 if none.",
        "kind": "",
        "list": false,
        "name": "views",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListInteractionCounts",
    "possibleTypes": []
  },
  "ListItem": {
    "args": [],
    "description": "List Item Union type",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "ListItem",
    "possibleTypes": [
      "Cinema",
      "Image",
      "Name",
      "Title",
      "Video"
    ]
  },
  "ListItemEdge": {
    "args": [],
    "description": "List Item Edge type",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor for this item.",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Item node.",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ListItemNode"
      },
      {
        "args": [],
        "description": "Item's contextual position in the list (i.e. after applying filtering and/or sorting).",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListItemEdge",
    "possibleTypes": []
  },
  "ListItemFilter": {
    "args": [],
    "description": "Filter options",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter Title items. Requires authentication.\nINCLUDE restricts only to titles rated by authenticated user.\nEXCLUDE filters out titles rated by authenticated user.",
        "list": false,
        "name": "rated",
        "nullable": true,
        "type": "FilterInclusion"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter Title items.\nINCLUDE restricts only to titles that have been released by current date.\nEXCLUDE filters out titles released.",
        "list": false,
        "name": "released",
        "nullable": true,
        "type": "FilterInclusion"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ListItemFilter",
    "possibleTypes": []
  },
  "ListItemNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Item's one-based position in the entire list before applying any sorting or filtering, i.e. its position in ascending LIST_ORDER ordering.\nWill be present except for the ModifiedListOutput of removeElementFromList, removeElementFromPredefinedList, addItemToList, and addItemToPredefinedList.",
        "kind": "",
        "list": false,
        "name": "absolutePosition",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Created time\nWill be present except for the ModifiedListOutput of removeElementFromList, removeElementFromPredefinedList, addItemToList, and addItemToPredefinedList",
        "kind": "",
        "list": false,
        "name": "createdDate",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Description of the list",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "ListDescription"
      },
      {
        "args": [],
        "description": "Will be present except for the ModifiedListOutput of removeElementFromList and removeElementFromPredefinedList",
        "kind": "",
        "list": false,
        "name": "itemId",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Last modified time\nWill be present except for the ModifiedListOutput of removeElementFromList, removeElementFromPredefinedList, addItemToList, and addItemToPredefinedList",
        "kind": "",
        "list": false,
        "name": "lastModifiedDate",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The list item (title, name, video, image, cinema).\nVideos can be nullable when returning geo-blocked videos (visible to users in one location but not another) or transient videos associated with marketing campaigns.\nCinemas can be nullable when the cinema has become inaccessible.",
        "kind": "",
        "list": false,
        "name": "listItem",
        "nullable": true,
        "type": "ListItem"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListItemNode",
    "possibleTypes": []
  },
  "ListItemSearchNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Item's one-based position in the entire list before applying any sorting or\nfiltering, i.e. its position in ascending LIST_ORDER ordering.\nIf this result set contains items from multiple lists, this will be each\nitem's position within its own list, so there could\nbe duplicate values in this field.",
        "kind": "",
        "list": false,
        "name": "absolutePosition",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "createdDate",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "ListDescription"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "itemId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "lastModifiedDate",
        "nullable": true,
        "type": "DateTime"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListItemSearchNode",
    "possibleTypes": []
  },
  "ListItemSort": {
    "args": [],
    "description": "Sort input for list items",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "LIST_ORDER",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "ListItemSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ListItemSort",
    "possibleTypes": []
  },
  "ListItemSortBy": {
    "args": [],
    "description": "Enum for list item sort options",
    "enumValues": [
      {
        "description": null,
        "name": "CREATED_DATE"
      },
      {
        "description": null,
        "name": "LIST_ORDER"
      },
      {
        "description": null,
        "name": "MODIFIED_DATE"
      },
      {
        "description": null,
        "name": "POPULARITY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ListItemSortBy",
    "possibleTypes": []
  },
  "ListName": {
    "args": [],
    "description": "String Text",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Original text",
        "kind": "",
        "list": false,
        "name": "originalText",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListName",
    "possibleTypes": []
  },
  "ListPrimaryImage": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": false,
        "type": "Image"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListPrimaryImage",
    "possibleTypes": []
  },
  "ListSearchConstraint": {
    "args": [],
    "description": "List filtering restriction. Matched entities must be in at least one of the\n`inAnyList` lists and not in any of the `notInAnyList` lists.\nMatched entities must also be in all of `inAllLists` lists. If multiple filters are provided entities returned\nmust satisfy all of the filters.\n\nNote the total count of the lsconsts, included in `inAnyList`, `notInAnyList`,\nand `inAllLists`, must not exceed 10,000 (limit of OpenSearch).\nIf the total count exceeds 10,000 then `GRAPHQL_VALIDATION_FAILED` will be thrown.\n\nNote that IMDb supports lists of multiple list types: Titles, Names, etc -- if\na list specified here is of a type incompatible with the expected context\nthen `GRAPHQL_VALIDATION_FAILED` will be thrown.\n\nIf the requesting user does not have permission to access any\nlist identified here then `FORBIDDEN` will be thrown.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match entities that are in all of these lists, identified by ListIds.",
        "list": true,
        "name": "inAllLists",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match entities that are in all of these predefined lists.\nCurrently only allows for filtering by the predefined lists of the requesting user.",
        "list": true,
        "name": "inAllPredefinedLists",
        "nullable": true,
        "type": "PredefinedListInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match entities that are in any of these lists, identified by ListIds.",
        "list": true,
        "name": "inAnyList",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match entities that are in any of these predefined lists.\nCurrently only allows for filtering by the predefined lists of the requesting user.",
        "list": true,
        "name": "inAnyPredefinedList",
        "nullable": true,
        "type": "PredefinedListInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude entities that are in any of these lists, identified by ListIds.",
        "list": true,
        "name": "notInAnyList",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude entities that are in any of these predefined lists.\nCurrently only allows for filtering by the predefined lists of the requesting user.",
        "list": true,
        "name": "notInAnyPredefinedList",
        "nullable": true,
        "type": "PredefinedListInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ListSearchConstraint",
    "possibleTypes": []
  },
  "ListSearchFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Collection of listClass filters, e.g. WATCH_LIST",
        "list": true,
        "name": "anyClassTypes",
        "nullable": true,
        "type": "ListClassId"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Collection of ListType filter, e.g. TITLES.",
        "list": true,
        "name": "anyListTypes",
        "nullable": true,
        "type": "ListTypeId"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Privacy status of List.",
        "list": true,
        "name": "anyVisibilities",
        "nullable": true,
        "type": "ListVisibilityId"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ListSearchFilter",
    "possibleTypes": []
  },
  "ListSearchSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "ListSearchSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortSearchOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ListSearchSort",
    "possibleTypes": []
  },
  "ListSearchSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Date when the list was created\nASC: Earlier date will be first.",
        "name": "DATE_CREATED"
      },
      {
        "description": "Date when the list was last modified\nASC: Earlier date will be first.",
        "name": "DATE_MODIFIED"
      },
      {
        "description": "List name, sort alphabetically\nASC: Aa-Zz",
        "name": "NAME"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ListSearchSortBy",
    "possibleTypes": []
  },
  "ListSort": {
    "args": [],
    "description": "Sort input for lists",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "MODIFIED_DATE",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "ListSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ListSort",
    "possibleTypes": []
  },
  "ListSortBy": {
    "args": [],
    "description": "Enum for list sort options",
    "enumValues": [
      {
        "description": null,
        "name": "MODIFIED_DATE"
      },
      {
        "description": null,
        "name": "NAME"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ListSortBy",
    "possibleTypes": []
  },
  "ListTextFieldMetadata": {
    "args": [],
    "description": "Attribute Metadata for a List Text Field",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "maxCharacters",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListTextFieldMetadata",
    "possibleTypes": []
  },
  "ListType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ListTypeId"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListType",
    "possibleTypes": []
  },
  "ListTypeId": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "GALLERIES"
      },
      {
        "description": null,
        "name": "IMAGES"
      },
      {
        "description": null,
        "name": "LISTS"
      },
      {
        "description": null,
        "name": "PEOPLE"
      },
      {
        "description": null,
        "name": "THEATRES"
      },
      {
        "description": null,
        "name": "TITLES"
      },
      {
        "description": null,
        "name": "VIDEOS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ListTypeId",
    "possibleTypes": []
  },
  "ListVisibility": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": true,
        "type": "ListVisibilityId"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "ListVisibilityName"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListVisibility",
    "possibleTypes": []
  },
  "ListVisibilityId": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "PRIVATE"
      },
      {
        "description": null,
        "name": "PUBLIC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ListVisibilityId",
    "possibleTypes": []
  },
  "ListVisibilityName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the list visibility name",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayed list visibility name",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ListVisibilityName",
    "possibleTypes": []
  },
  "LocalizedDisplayableCount": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LocalizedDisplayableCount",
    "possibleTypes": []
  },
  "LocalizedDisplayableCountry": {
    "args": [],
    "description": "Generic type for a localized country, which has an ID or token, associated\ndisplay text, and the language of the display text",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The country code - either an ISO 3166 code or an internally defined code if no ISO code exists for that country.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display country",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Display text for the country (e.g. 'United States').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LocalizedDisplayableCountry",
    "possibleTypes": []
  },
  "LocalizedDisplayableEpisodeNumber": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Episode number as a standardized displayableProperty",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "EpisodeNumberDisplayableProperty"
      },
      {
        "args": [],
        "description": "Non localized episode number, can be used for sorting or filtering\nReturns 'unknown' if episode number is unknown",
        "kind": "",
        "list": false,
        "name": "episodeNumber",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "An opaque unique identifier for the displayable episode.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LocalizedDisplayableEpisodeNumber",
    "possibleTypes": []
  },
  "LocalizedDisplayableEpisodeYear": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Year as a standardized displayableProperty",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "YearDisplayableProperty"
      },
      {
        "args": [],
        "description": "An opaque unique identifier for the displayable year.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Non localized year, can be used for sorting or filtering\nReturns 'unknown' if release year is unknown",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LocalizedDisplayableEpisodeYear",
    "possibleTypes": []
  },
  "LocalizedDisplayableSeason": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Season number/text as a standardized displayableProperty",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "SeasonValueDisplayableProperty"
      },
      {
        "args": [],
        "description": "An opaque unique identifier for the displayable season.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Non localized Season, can be used for sorting or filtering\nReturns 'unknown' if season is unknown",
        "kind": "",
        "list": false,
        "name": "season",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LocalizedDisplayableSeason",
    "possibleTypes": []
  },
  "LocalizedMarkdown": {
    "args": [],
    "description": "An object composed of a displayable localized markdown along with the language it is in.\n\nThe language is determined by localization headers sent by the client, if the chosen language is available.\nOtherwise an `en-US` string will likely be returned by default.\n\nMore information on the x-imdb-user-country and x-imdb-user-language headers at\nhttps://w.amazon.com/bin/view/IMDb/Zuko/Headers/",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The language of the returned markdown",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "Language"
      },
      {
        "args": [],
        "description": "The displayable localized markdown",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LocalizedMarkdown",
    "possibleTypes": []
  },
  "LocalizedString": {
    "args": [],
    "description": "An object composed of a displayable localized string along with the language it is in.\n\nThe language is determined by localization headers sent by the client, if the chosen language is available.\nOtherwise an `en-US` string will likely be returned by default.\n\nMore information on the x-imdb-user-country and x-imdb-user-language headers at\nhttps://w.amazon.com/bin/view/IMDb/Zuko/Headers/",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The language of the returned string",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "Language"
      },
      {
        "args": [],
        "description": "The displayable localized string",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LocalizedString",
    "possibleTypes": []
  },
  "Location": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The location/address string",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Location",
    "possibleTypes": []
  },
  "LocationDecimal": {
    "args": [],
    "description": "A decimal used for a latitude or longitude degree value. If more granular location data is given than one hundredth of a degree, the request will be rejected.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "SCALAR",
    "name": "LocationDecimal",
    "possibleTypes": []
  },
  "LogoutRedirectURLInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Association handle of the login context i.e. imdb_us",
        "list": false,
        "name": "associationHandle",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional URL to return to post logout, defaults to home page",
        "list": false,
        "name": "returnURL",
        "nullable": true,
        "type": "URL"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "LogoutRedirectURLInput",
    "possibleTypes": []
  },
  "LogoutRedirectURLOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Redirect URL for user logout flow",
        "kind": "",
        "list": false,
        "name": "redirectURL",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "LogoutRedirectURLOutput",
    "possibleTypes": []
  },
  "MainSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "MainSearchEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MainSearchConnection",
    "possibleTypes": []
  },
  "MainSearchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "MainSearchNode"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MainSearchEdge",
    "possibleTypes": []
  },
  "MainSearchEntity": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "MainSearchEntity",
    "possibleTypes": [
      "Company",
      "Interest",
      "Keyword",
      "Name",
      "NameProfession",
      "ProfessionCategory",
      "Title"
    ]
  },
  "MainSearchNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "entity",
        "nullable": false,
        "type": "MainSearchEntity"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MainSearchNode",
    "possibleTypes": []
  },
  "MainSearchOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Include titles and names in results that have been flagged as explicit.\nBy default explicit titles and names are omitted from results.",
        "list": false,
        "name": "includeAdult",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Only return results that exactly match the search term.\nBy default an exact match is not required.",
        "list": false,
        "name": "isExactMatch",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Additional filters to apply to searches including professions.",
        "list": false,
        "name": "professionSearchOptions",
        "nullable": true,
        "type": "ProfessionSearchOptions"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Term used to match against the names and akas of titles, names, keywords, and companies.",
        "list": false,
        "name": "searchTerm",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Additional filters to apply to searches including titles.",
        "list": false,
        "name": "titleSearchOptions",
        "nullable": true,
        "type": "TitleSearchOptions"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The types of IMDb entities to include in the search.\nBy default search results will only contain titles and names.",
        "list": true,
        "name": "type",
        "nullable": true,
        "type": "MainSearchType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "MainSearchOptions",
    "possibleTypes": []
  },
  "MainSearchTitleType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "MOVIE"
      },
      {
        "description": null,
        "name": "MUSIC_VIDEO"
      },
      {
        "description": null,
        "name": "PODCAST_EPISODE"
      },
      {
        "description": null,
        "name": "PODCAST_SERIES"
      },
      {
        "description": null,
        "name": "TV"
      },
      {
        "description": null,
        "name": "TV_EPISODE"
      },
      {
        "description": null,
        "name": "VIDEO_GAME"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "MainSearchTitleType",
    "possibleTypes": []
  },
  "MainSearchType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "COMPANY"
      },
      {
        "description": null,
        "name": "INTEREST"
      },
      {
        "description": null,
        "name": "KEYWORD"
      },
      {
        "description": null,
        "name": "NAME"
      },
      {
        "description": null,
        "name": "PROFESSION"
      },
      {
        "description": null,
        "name": "PROFESSION_CATEGORY"
      },
      {
        "description": null,
        "name": "TITLE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "MainSearchType",
    "possibleTypes": []
  },
  "ManagedClient": {
    "args": [],
    "description": "Client managed by a customer",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "client",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ManagedClientStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedClient",
    "possibleTypes": []
  },
  "ManagedClientStatus": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Client is not being managed by this manager but can request to be",
        "name": "CAN_REQUEST"
      },
      {
        "description": "Client is being managed by this manager",
        "name": "ENABLED"
      },
      {
        "description": "Client requested being managed by this manager",
        "name": "REQUESTED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ManagedClientStatus",
    "possibleTypes": []
  },
  "ManagedCompanyData": {
    "args": [],
    "description": "Data that company managers control, defined here since it is shared with multple files",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Company known for conrolled by managers of this company",
        "kind": "",
        "list": false,
        "name": "knownFor",
        "nullable": true,
        "type": "ManagedCompanyKnownForGroup"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyData",
    "possibleTypes": []
  },
  "ManagedCompanyKeyStaffCategory": {
    "args": [],
    "description": "Company key staff that includes meta data needed to support managers. Intended for consumption by managers.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Key staff of this company",
        "kind": "",
        "list": false,
        "name": "staff",
        "nullable": false,
        "type": "CompanyKeyStaffConnection"
      },
      {
        "args": [],
        "description": "The status of the key staff for this company, e.g. active vs blocked. Defaults to active.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "CompanyKnownForStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKeyStaffCategory",
    "possibleTypes": []
  },
  "ManagedCompanyKeyStaffGroup": {
    "args": [],
    "description": "Company key staff that company managers control",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Algorithmically calculated key staff for this company for consumption by company managers",
        "kind": "",
        "list": false,
        "name": "automatic",
        "nullable": false,
        "type": "ManagedCompanyKeyStaffCategory"
      },
      {
        "args": [],
        "description": "History of changes to algorithmically calculated key staff for this company for consumption by IMDb admins",
        "kind": "",
        "list": false,
        "name": "automaticHistory",
        "nullable": false,
        "type": "ManagedCompanyKeyStaffHistory"
      },
      {
        "args": [],
        "description": "Custom key staff controlled by managers of this company for consumption by those managers",
        "kind": "",
        "list": false,
        "name": "custom",
        "nullable": false,
        "type": "ManagedCompanyKeyStaffCategory"
      },
      {
        "args": [],
        "description": "History of changes to custom key staff for this company for consumption by IMDb admins",
        "kind": "",
        "list": false,
        "name": "customHistory",
        "nullable": false,
        "type": "ManagedCompanyKeyStaffHistory"
      },
      {
        "args": [],
        "description": "Source preference for key staf for this company, e.g. custom vs automatic. Defaults to automatic.",
        "kind": "",
        "list": false,
        "name": "sourcePreference",
        "nullable": false,
        "type": "KnownForPreference"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKeyStaffGroup",
    "possibleTypes": []
  },
  "ManagedCompanyKeyStaffHistory": {
    "args": [],
    "description": "Company key staff history",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "History of changes to key staff for this company",
        "kind": "",
        "list": false,
        "name": "keyStaffHistory",
        "nullable": false,
        "type": "ManagedCompanyKeyStaffHistoryConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKeyStaffHistory",
    "possibleTypes": []
  },
  "ManagedCompanyKeyStaffHistoryConnection": {
    "args": [],
    "description": "Pagination for managed company key staff version which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of company key staff versions",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyKeyStaffVersionEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKeyStaffHistoryConnection",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForClientCategory": {
    "args": [],
    "description": "Company known for client that includes meta data needed to support managers. Intended for consumption by managers.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Clients this company is known for",
        "kind": "",
        "list": false,
        "name": "clients",
        "nullable": false,
        "type": "CompanyKnownForClientConnection"
      },
      {
        "args": [],
        "description": "The status of the known for clients for this company, e.g. active vs blocked. Defaults to active.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "CompanyKnownForStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForClientCategory",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForClientGroup": {
    "args": [],
    "description": "Company known for client that company managers control",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Algorithmically calculated known for client for this company for consumption by company managers",
        "kind": "",
        "list": false,
        "name": "automatic",
        "nullable": false,
        "type": "ManagedCompanyKnownForClientCategory"
      },
      {
        "args": [],
        "description": "History of changes to algorithmically calculated known for client for this company for consumption by IMDb admins",
        "kind": "",
        "list": false,
        "name": "automaticHistory",
        "nullable": false,
        "type": "ManagedCompanyKnownForClientHistory"
      },
      {
        "args": [],
        "description": "Custom known for client controlled by managers of this company for consumption by those managers",
        "kind": "",
        "list": false,
        "name": "custom",
        "nullable": false,
        "type": "ManagedCompanyKnownForClientCategory"
      },
      {
        "args": [],
        "description": "History of changes to custom known for client for this company for consumption by IMDb admins",
        "kind": "",
        "list": false,
        "name": "customHistory",
        "nullable": false,
        "type": "ManagedCompanyKnownForClientHistory"
      },
      {
        "args": [],
        "description": "Source preference for known for client for this company, e.g. custom vs automatic. Defaults to automatic.",
        "kind": "",
        "list": false,
        "name": "sourcePreference",
        "nullable": false,
        "type": "KnownForPreference"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForClientGroup",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForClientHistory": {
    "args": [],
    "description": "Company known for client history",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "History of changes to known for client for this company",
        "kind": "",
        "list": false,
        "name": "clientHistory",
        "nullable": false,
        "type": "ManagedCompanyKnownForClientHistoryConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForClientHistory",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForClientHistoryConnection": {
    "args": [],
    "description": "Pagination for managed company known for client version which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of company known for client versions",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyKnownForClientVersionEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForClientHistoryConnection",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForClientVersion": {
    "args": [],
    "description": "A version snapshot of company known for client for consumption by IMDb admins",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The list of known for clients for this version snapshot",
        "kind": "",
        "list": false,
        "name": "clients",
        "nullable": false,
        "type": "CompanyKnownForClientConnection"
      },
      {
        "args": [],
        "description": "The time that the known for client version for this company was created",
        "kind": "",
        "list": false,
        "name": "createdDate",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The user and role that modified the known for client version for this company if available",
        "kind": "",
        "list": false,
        "name": "modifiedBy",
        "nullable": true,
        "type": "ModifiedBy"
      },
      {
        "args": [],
        "description": "The status of known for client version for this company, e.g. active vs blocked. Defaults to active.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "CompanyKnownForStatus"
      },
      {
        "args": [],
        "description": "The version number for the known for client version for this company",
        "kind": "",
        "list": false,
        "name": "versionNumber",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForClientVersion",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForGroup": {
    "args": [],
    "description": "Company known for that company managers control",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Group of key staff for this company",
        "kind": "",
        "list": false,
        "name": "keyStaff",
        "nullable": false,
        "type": "ManagedCompanyKeyStaffGroup"
      },
      {
        "args": [],
        "description": "Group of known for client for this company",
        "kind": "",
        "list": false,
        "name": "knownForClient",
        "nullable": false,
        "type": "ManagedCompanyKnownForClientGroup"
      },
      {
        "args": [],
        "description": "Group of known for title for this company",
        "kind": "",
        "list": false,
        "name": "knownForTitle",
        "nullable": false,
        "type": "ManagedCompanyKnownForTitleGroup"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForGroup",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForKeyStaffVersion": {
    "args": [],
    "description": "A version snapshot of company key staff for consumption by IMDb admins",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The time that the key staff version for this company was created",
        "kind": "",
        "list": false,
        "name": "createdDate",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The user and role that modified the key staff version for this company if available",
        "kind": "",
        "list": false,
        "name": "modifiedBy",
        "nullable": true,
        "type": "ModifiedBy"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The list of key staff for this version snapshot",
        "kind": "",
        "list": false,
        "name": "staff",
        "nullable": false,
        "type": "CompanyKeyStaffConnection"
      },
      {
        "args": [],
        "description": "The status of key staff version for this company, e.g. active vs blocked. Defaults to active.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "CompanyKnownForStatus"
      },
      {
        "args": [],
        "description": "The version number for the key staff version entry for this company",
        "kind": "",
        "list": false,
        "name": "versionNumber",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForKeyStaffVersion",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForTitleCategory": {
    "args": [],
    "description": "Company known for title that includes meta data needed to support managers. Intended for consumption by managers.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The status of the known for titles for this company, e.g. active vs blocked. Defaults to active.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "CompanyKnownForStatus"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Titles this company is known for",
        "kind": "",
        "list": false,
        "name": "titles",
        "nullable": false,
        "type": "CompanyKnownForTitleConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForTitleCategory",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForTitleGroup": {
    "args": [],
    "description": "Company known for title that company managers control",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Algorithmically calculated known for title for this company for consumption by company managers",
        "kind": "",
        "list": false,
        "name": "automatic",
        "nullable": false,
        "type": "ManagedCompanyKnownForTitleCategory"
      },
      {
        "args": [],
        "description": "History of changes to algorithmically calculated known for title for this company for consumption by IMDb admins",
        "kind": "",
        "list": false,
        "name": "automaticHistory",
        "nullable": false,
        "type": "ManagedCompanyKnownForTitleHistory"
      },
      {
        "args": [],
        "description": "Custom known for title controlled by managers for this company for consumption by those managers",
        "kind": "",
        "list": false,
        "name": "custom",
        "nullable": false,
        "type": "ManagedCompanyKnownForTitleCategory"
      },
      {
        "args": [],
        "description": "History of changes to custom known for title for this company for consumption by IMDb admins",
        "kind": "",
        "list": false,
        "name": "customHistory",
        "nullable": false,
        "type": "ManagedCompanyKnownForTitleHistory"
      },
      {
        "args": [],
        "description": "Source preference for known for title for this company, e.g. custom vs automatic. Defaults to automatic.",
        "kind": "",
        "list": false,
        "name": "sourcePreference",
        "nullable": false,
        "type": "KnownForPreference"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForTitleGroup",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForTitleHistory": {
    "args": [],
    "description": "Company known for title history",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "History of changes to known for title for this company",
        "kind": "",
        "list": false,
        "name": "titleHistory",
        "nullable": false,
        "type": "ManagedCompanyKnownForTitleHistoryConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForTitleHistory",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForTitleHistoryConnection": {
    "args": [],
    "description": "Pagination for managed company known for title version which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of company known for title versions",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CompanyKnownForTitleVersionEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForTitleHistoryConnection",
    "possibleTypes": []
  },
  "ManagedCompanyKnownForTitleVersion": {
    "args": [],
    "description": "A version snapshot of company known for title for consumption by IMDb admins",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The time that the known for title version for this company was created",
        "kind": "",
        "list": false,
        "name": "createdDate",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The user and role that modified the known title for version for this company if available",
        "kind": "",
        "list": false,
        "name": "modifiedBy",
        "nullable": true,
        "type": "ModifiedBy"
      },
      {
        "args": [],
        "description": "The status of known for title version for this company, e.g. active vs blocked. Defaults to active.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "CompanyKnownForStatus"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The list of known for titles for this version snapshot",
        "kind": "",
        "list": false,
        "name": "titles",
        "nullable": false,
        "type": "CompanyKnownForTitleConnection"
      },
      {
        "args": [],
        "description": "The version number for the known for title version for this company",
        "kind": "",
        "list": false,
        "name": "versionNumber",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagedCompanyKnownForTitleVersion",
    "possibleTypes": []
  },
  "ManagingRepresentative": {
    "args": [],
    "description": "Representative that manages a customer",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "manager",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ManagingRepresentativeStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ManagingRepresentative",
    "possibleTypes": []
  },
  "ManagingRepresentativeStatus": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Representative is not managing a client",
        "name": "DISABLED"
      },
      {
        "description": "Representative is managing a client",
        "name": "ENABLED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ManagingRepresentativeStatus",
    "possibleTypes": []
  },
  "Markdown": {
    "args": [],
    "description": "Markdown type\nExtends external type.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Render titles within markdown using their original title text rather than localized based on localization headers",
            "kind": "Boolean",
            "list": false,
            "name": "showOriginalTitleText",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Returns strings with markdown with [link=titleNumber]...[/link] embedded with rendered markdown so that links could be\nbe displayed on mobile clients.\n  \ne.g. '[link=tt0112022]' returns '[link=tt0112022]JAG (1995)[/link]'\n\n---------------------\nGraphlet Details:\n- Name: markdown\n- CTI: IMDb/GraphQL/Markdown\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "expandedMarkdown",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "markdown",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Include optional pre-rendered query params without '?', e.g. 'ref=tt_ov_dr', to be appended to all links",
            "kind": "String",
            "list": false,
            "name": "queryParams",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "Render a single line break with a <br> tag rather than a whitespace.  Note that double line breaks \\n\\n are always\nrendered with <br/><br/> regardless of this option.  Default to false.\n    \nFor example, let the input text be \"This is\\nan example.\\n\\nStart a new paragraph.\"\nIf showLineBreak is true, the returned text is \"This is<br/>an example.<br/><br/>Start a new paragraph.\"\nIf showLineBreak is false, the returned text is \"This is an example.<br/><br/>Start a new paragraph.\"",
            "kind": "Boolean",
            "list": false,
            "name": "showLineBreak",
            "nullable": true,
            "type": "Boolean"
          },
          {
            "defaultValue": "",
            "description": "Render titles within markdown using their original title text rather than localized based on localization headers",
            "kind": "Boolean",
            "list": false,
            "name": "showOriginalTitleText",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "HTML optimized for PLAID. Renders consts as links with the const display text. Titles are localized according to localization headers.\n\n---------------------\nGraphlet Details:\n- Name: markdown\n- CTI: IMDb/GraphQL/Markdown\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "plaidHtml",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Render titles within markdown using their original title text rather than localized based on localization headers",
            "kind": "Boolean",
            "list": false,
            "name": "showOriginalTitleText",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "The text with most formatting removed and const links replaced with const text. Titles are localized according to localization headers.\n\n---------------------\nGraphlet Details:\n- Name: markdown\n- CTI: IMDb/GraphQL/Markdown\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "plainText",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "List related entities in the markdown string.\n  \nNote: this is limited to the first 100 entities in the markdown string.\n  \nEx:\nrenderedMarkdown(markdownString: \"Remember [link=nm0001094] in [link=tt0062512]?\") {\n    relatedEntities {\n        ... on Name { nameText { text } }\n        ... on Title { titleText { text } }\n    }\n}\n\n---------------------\nGraphlet Details:\n- Name: markdown\n- CTI: IMDb/GraphQL/Markdown\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": true,
        "name": "relatedEntities",
        "nullable": true,
        "type": "MarkdownEntity"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Markdown",
    "possibleTypes": []
  },
  "MarkdownEntity": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "MarkdownEntity",
    "possibleTypes": [
      "Company",
      "Name",
      "Title"
    ]
  },
  "MarkdownSlotCallToAction": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Specifies the localized markdown content for this CTA",
        "kind": "",
        "list": false,
        "name": "markdown",
        "nullable": true,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "An identifier for the returned result of a CTA.\nA CTA will have multiple potential results, with each result having its own identifier.\nThis value is only unique within the CTA. It is not globally unique.\nThe resultId can be used as resultOverride input argument to specify a specific result\nshould be returned for the requested CTA.",
        "kind": "",
        "list": false,
        "name": "resultId",
        "nullable": false,
        "type": "ResultID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MarkdownSlotCallToAction",
    "possibleTypes": []
  },
  "MarkdownTextAreaFieldConstraints": {
    "args": [],
    "description": "Defines a standard shape for vending form constraints for a markdown-enabled text area input.\nCurrently the same as text area constraints but in future may include markdown-specific constraints such as\nallowed/forbidden markdown tags.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Specifies if the customer must provide a non-empty (ie not null or empty string) value",
        "kind": "",
        "list": false,
        "name": "isRequired",
        "nullable": true,
        "type": "BooleanValidationConstraint"
      },
      {
        "args": [],
        "description": "Specifies the maximum allowed number of characters for this markdown text area input",
        "kind": "",
        "list": false,
        "name": "maximumCharacterLength",
        "nullable": true,
        "type": "IntThresholdValidationConstraint"
      },
      {
        "args": [],
        "description": "Specifies the minimum allowed number of characters for this markdown text area input",
        "kind": "",
        "list": false,
        "name": "minimumCharacterLength",
        "nullable": true,
        "type": "IntThresholdValidationConstraint"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MarkdownTextAreaFieldConstraints",
    "possibleTypes": []
  },
  "MaturityLevel": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Include content flagged as mature. Such content is excluded by default.",
        "name": "INCLUDE_MATURE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "MaturityLevel",
    "possibleTypes": []
  },
  "MediaServiceImage": {
    "args": [],
    "description": "A generic implementation of the ImageObject",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Text alternative description of the image for screen reader accessibility.",
        "kind": "",
        "list": false,
        "name": "accessibilityText",
        "nullable": true,
        "type": "CommonLocalizedDisplayableConcept"
      },
      {
        "args": [],
        "description": "Type delineation so that clients are able to determine how to handle the delivered asset.",
        "kind": "",
        "list": false,
        "name": "fileType",
        "nullable": true,
        "type": "ImageFileType"
      },
      {
        "args": [],
        "description": "Original height of the image resource, in pixels.",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "URL for the image resource.",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Original height of the image resource, in pixels.",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MediaServiceImage",
    "possibleTypes": []
  },
  "Metacritic": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "metascore",
        "nullable": false,
        "type": "Metascore"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "reviews",
        "nullable": true,
        "type": "MetacriticReviewConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Metacritic",
    "possibleTypes": []
  },
  "MetacriticReview": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "quote",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "reviewer",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "score",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "site",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MetacriticReview",
    "possibleTypes": []
  },
  "MetacriticReviewConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "MetacriticReviewEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MetacriticReviewConnection",
    "possibleTypes": []
  },
  "MetacriticReviewEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "MetacriticReview"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MetacriticReviewEdge",
    "possibleTypes": []
  },
  "Metascore": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "reviewCount",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "score",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Metascore",
    "possibleTypes": []
  },
  "MeterEvent": {
    "args": [],
    "description": "Event that should be noted with meter",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Title of an event that should be noted with meter",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Type of event that occurred on a certain date and should be noted with meter",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MeterEvent",
    "possibleTypes": []
  },
  "MeterRankChange": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Indicates whether the current rank is better (UP), worse (DOWN),\nor unchanged (FLAT) from the previous rank",
        "kind": "",
        "list": false,
        "name": "changeDirection",
        "nullable": false,
        "type": "MeterRankChangeDirection"
      },
      {
        "args": [],
        "description": "An integer indicating the difference between the current\nand previous rank",
        "kind": "",
        "list": false,
        "name": "difference",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MeterRankChange",
    "possibleTypes": []
  },
  "MeterRankChangeDirection": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "DOWN"
      },
      {
        "description": null,
        "name": "FLAT"
      },
      {
        "description": null,
        "name": "UP"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "MeterRankChangeDirection",
    "possibleTypes": []
  },
  "MeterRankingHistoryEntry": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Timestamp of a meter ranking in the form of YYYY-MM-DD",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "Events on a certain date that should be noted with meter",
        "kind": "",
        "list": true,
        "name": "events",
        "nullable": true,
        "type": "MeterEvent"
      },
      {
        "args": [],
        "description": "IMDbPro meter ranking of item on a certain date",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MeterRankingHistoryEntry",
    "possibleTypes": []
  },
  "MeterRestriction": {
    "args": [],
    "description": "Restriction information applied to Meter.\nBy default, restriction will be based on IMDbPro entitlements.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MeterRestriction",
    "possibleTypes": []
  },
  "MetricDimension": {
    "args": [],
    "description": "A container for metric dimension data",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MetricDimension",
    "possibleTypes": []
  },
  "MiscellaneousCreditAttribute": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MiscellaneousCreditAttribute",
    "possibleTypes": []
  },
  "ModifiedBy": {
    "args": [],
    "description": "The customer that modified the known for category and their role for consumption by IMDb admins",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The role of the user modifying the known for of this company",
        "kind": "",
        "list": false,
        "name": "role",
        "nullable": false,
        "type": "UserRole"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ModifiedBy",
    "possibleTypes": []
  },
  "Money": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Amount of money",
        "kind": "",
        "list": false,
        "name": "amount",
        "nullable": false,
        "type": "Float"
      },
      {
        "args": [],
        "description": "ISO-4217 alphabetic currency codes.  See: http://www.currency-iso.org/",
        "kind": "",
        "list": false,
        "name": "currency",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Money",
    "possibleTypes": []
  },
  "MonthDay": {
    "args": [],
    "description": "A month and day string in the ISO-8601 format, for example '--06-19'",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "SCALAR",
    "name": "MonthDay",
    "possibleTypes": []
  },
  "MoreLikeThisConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "MoreLikeThisEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MoreLikeThisConnection",
    "possibleTypes": []
  },
  "MoreLikeThisEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "This cursor doesn't work for pagination right now. Please use PageInfo.endCursor instead.",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MoreLikeThisEdge",
    "possibleTypes": []
  },
  "MoreLikeThisNameConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "MoreLikeThisNameEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MoreLikeThisNameConnection",
    "possibleTypes": []
  },
  "MoreLikeThisNameEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MoreLikeThisNameEdge",
    "possibleTypes": []
  },
  "MultiLinkCallToAction": {
    "args": [],
    "description": "This is a multi-link CallToAction that may contain two action lists: abbreviatedActions and standardActions.\nThe client will decide which action list to use when displaying the actions. For example, the client may choose\nto display the abbreviatedActions on devices with small screens, while using standardActions on devices with\nlarger screens. A responsive solution may utilize both action lists.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Provides an abbreviated list of action links for this CallToAction.\nThis is not necessarily a subset of \"standardActions\", but typically will be.\nThe action links in this list may be less in number and/or contain shorter label text.\nEach action link contains a name, URL, and an optional label (localized text) associated with the URL.\nThe name will uniquely identify each action link.",
        "kind": "",
        "list": true,
        "name": "abbreviatedActions",
        "nullable": true,
        "type": "NamedActionLink"
      },
      {
        "args": [],
        "description": "An identifier for the returned result of a CTA.\nA CTA will have multiple potential results, with each result having its own identifier.\nThis value is only unique within the CTA. It is not globally unique.\nThe resultId can be used as resultOverride input argument to specify a specific result\nshould be returned for the requested CTA.",
        "kind": "",
        "list": false,
        "name": "resultId",
        "nullable": false,
        "type": "ResultID"
      },
      {
        "args": [],
        "description": "Provides the standard list of action links for this CallToAction.\nEach action link contains a name, URL, and an optional label (localized text) associated with the URL.\nThe name will uniquely identify each action link.",
        "kind": "",
        "list": true,
        "name": "standardActions",
        "nullable": true,
        "type": "NamedActionLink"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "MultiLinkCallToAction",
    "possibleTypes": []
  },
  "MyFavoriteTheaterSearchFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ONLY_MY_FAVORITE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "MyFavoriteTheaterSearchFilter",
    "possibleTypes": []
  },
  "MyRatingSearchConstraint": {
    "args": [],
    "description": "Rating that the requesting user has given to the title.\nCustomer is determined by x-imdb-customer-id header  (gateway determines from request)",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Select whether constraint should restrict-to or exclude titles that the customer has rated.",
        "list": false,
        "name": "filterType",
        "nullable": false,
        "type": "MyRatingSearchFilterType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on rating given by the requesting user.\nInfers \"min: 1\", or \"max: 10\" if one of those is not provided.\nExample: To restrict to only titles the customer rated between 5-10, use {min: 5}\nExample: To restrict to only titles the customer has rated use {min: 1, max: 10}",
        "list": false,
        "name": "ratingRange",
        "nullable": true,
        "type": "IntRangeInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "MyRatingSearchConstraint",
    "possibleTypes": []
  },
  "MyRatingSearchFilterType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "EXCLUDE"
      },
      {
        "description": null,
        "name": "INCLUDE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "MyRatingSearchFilterType",
    "possibleTypes": []
  },
  "Name": {
    "args": [],
    "description": "Name type\nExtends external type.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Optional parameter which represents today's date for client in format yyyy-mm-dd.\nIt is used for age calculation based on client current date.\nIf not specified, and the person is living, the server date will be used instead.\nIf the person is dead, the death date will be used.",
            "kind": "Date",
            "list": false,
            "name": "currentDate",
            "nullable": true,
            "type": "Date"
          }
        ],
        "description": "Person's age\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "age",
        "nullable": true,
        "type": "AgeDetails"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "A list of alternative names by which the person is also known\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "akas",
        "nullable": true,
        "type": "NameAkaConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Alexa top questions.\n\n---------------------\nGraphlet Details:\n- Name: ziggy\n- CTI: IMDb/GraphQL/Ziggy\n- Affected by headers: x-imdb-user-language\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-ziggy",
        "kind": "",
        "list": false,
        "name": "alexaTopQuestions",
        "nullable": true,
        "type": "AlexaQuestionConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "This is Pro exclusive feature\n\nReturns the latest uncached auto selected user professions(default limit is 3).\nReturn null if no automatic profession details are available for this name.\nThrows UNAUTHENTICATED if the requesting customer is not logged in.\n\n@entitlement(NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": true,
        "name": "autoSelectedProfessions",
        "nullable": true,
        "type": "NameProfession"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AwardNominationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AwardNominationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AwardNominationsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "AwardNominationsSort"
          }
        ],
        "description": "The awards that the person has won or been nominated for\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "awardNominations",
        "nullable": true,
        "type": "AwardNominationConnection"
      },
      {
        "args": [],
        "description": "Details of the person's bio\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "bio",
        "nullable": true,
        "type": "NameBio"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameBiosFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameBiosFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "NameBio items for a name\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "bios",
        "nullable": true,
        "type": "NameBiosConnection"
      },
      {
        "args": [],
        "description": "Details of the person's date of birth.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "birthDate",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "Details of the person's location of birth.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "birthLocation",
        "nullable": true,
        "type": "DisplayableLocation"
      },
      {
        "args": [],
        "description": "The person's birth name as it appears on IMDb.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "birthName",
        "nullable": true,
        "type": "BirthName"
      },
      {
        "args": [],
        "description": "A full URL to see the name on www.imdb.com\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "canonicalUrl",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ClientSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ClientSort"
          }
        ],
        "description": "The names represented by this person in some capacity, like the names this\nperson is the Talent Agent for or the Publicist for.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "clients",
        "nullable": true,
        "type": "NameRepresentationConnection"
      },
      {
        "args": [],
        "description": "This answers if the (name) is primarly considered as an adult actor by IMDb\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "contentWarnings",
        "nullable": true,
        "type": "ContentWarnings"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditCategoryFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameCreditCategoryFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "NameCreditSort"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "creditCategories",
        "nullable": true,
        "type": "NameCreditCategoryWithCredits"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Cursor from which to begin providing credits from.\nUse cursor values vended on CreditGroupingEdge values to continue pagination in subsequent calls.\n\nNote that if you include filtering parameters in an initial call, you must pass the same parameters along with\nyour cursor, to ensure the full listing of credits is consistent.",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "By default, credits are sorted by release date (see NameCreditV2Sort for definition)",
            "kind": "NameCreditV2Sort",
            "list": false,
            "name": "creditSort",
            "nullable": true,
            "type": "NameCreditV2Sort"
          },
          {
            "defaultValue": "",
            "description": "By default, credited roles are sorted by credited role importance (see CreditedRoleSort for definition)",
            "kind": "CreditedRoleSort",
            "list": false,
            "name": "creditedRoleSort",
            "nullable": true,
            "type": "CreditedRoleSort"
          },
          {
            "defaultValue": "",
            "description": "Allows for filtering in or out of credits based on several criteria.\nSee NameCreditsV2Filter for details.",
            "kind": "NameCreditsV2Filter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameCreditsV2Filter"
          },
          {
            "defaultValue": "",
            "description": "Number of CreditGrouping values to fetch.\nMaximum per request is 250.",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "By default, groupings are sorted by grouping importance (see CreditGroupingSort for definition)",
            "kind": "CreditGroupingSort",
            "list": false,
            "name": "groupingSort",
            "nullable": true,
            "type": "CreditGroupingSort"
          },
          {
            "defaultValue": "true",
            "description": "In general: whether to utilise any entitlements passed to alter the behaviour of this API.\nSpecifically: For industry professionals (IMDbPro members) IMDb discloses attachment credits; which are essentially\nrumored credits to in-development title that have not been publicly announced.\n\nWhen false; attachments are not provided, as seen on the IMDb website.\nWhen true; attachments are provided if the requester is entitled to receive the credits.",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Vends credits for this name on titles, grouped into groupings defined by input parameter.\n\nWe group credits into \"groupings\" in a way that best highlights a person's work.\nAppearances in a title where they were not directly involved, such as Archive Footage,\nare removed from their appearance credits and moved into separate groupings.\nSoundtrack credits are included within a name's credits as a separate category. This is different to a title-focused\nview, where Soundtrack credits are modelled as a separate data type.\nAll other credit categories are presented 1-1 as groupings.\n\nWhen a name has credits on individual episodes in a series, these are rolled up and presented at the series level\nas a single CreditV2 value, giving a summary of their contribution. Details of individual episodes are available\nfrom \"episodeCredits\" on a CreditedRole within a CreditV2 value.\n\nWhen a credit has performed many roles on a title within a grouping, these are aggregated into a single CreditV2\nvalue, with each individual role represented as a separate CreditedRole within the CreditV2.\n\nCredits on in-development titles are only available to clients providing a Pro tier entitlement.\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "creditGroupings",
        "nullable": true,
        "type": "CreditGroupingConnection"
      },
      {
        "args": [],
        "description": "Summary for the name credits\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "creditSummary",
        "nullable": true,
        "type": "NameCreditSummary"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required credited with names. Default value is 10 if not passed. Max value is 10",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The names that are credited on titles with the parent name derived from their filmography.\nThe results are in descending order by a relevance score calculated server side.\n\nThrows UNAUTHENTICATED if the requesting customer is not logged in.\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: networking\n- CTI: IMDb/GraphQL/Networking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "creditedWithNames",
        "nullable": true,
        "type": "CreditedWithNamesConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "NameCreditSort"
          }
        ],
        "description": "The entire list of credits for the name\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "credits",
        "nullable": true,
        "type": "NameCreditConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Cursor from which to begin providing credits from.\nClients wishing to retrieve credits within a grouping can fetch an initial list of credits for this name-title pair\nvia the name.creditGroupings field. This call can provide a cursor to use to fetch further pages of credits.\n\nNote that if you include filtering parameters in an initial call, you must pass the same parameters along with\nyour cursor, to ensure the full listing of credits is consistent.\nFor example, if you first call name.creditGroupings with a filter of `grouping: \"grouping-id\"`,\nyou must include this filter in your call to name.creditsV2 for the API to know to continue applying this filter.",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Defines how credits are aggregated together into a single CreditV2 result.\n\nBy default, credits are aggregated by TITLE.",
            "kind": "NameCreditAggregation",
            "list": false,
            "name": "aggregateBy",
            "nullable": true,
            "type": "NameCreditAggregation"
          },
          {
            "defaultValue": "",
            "description": "By default, credits are sorted by release date (see NameCreditV2Sort for definition)",
            "kind": "NameCreditV2Sort",
            "list": false,
            "name": "creditSort",
            "nullable": true,
            "type": "NameCreditV2Sort"
          },
          {
            "defaultValue": "",
            "description": "By default, credited roles are sorted by credited role importance (see CreditedRoleSort for definition)",
            "kind": "CreditedRoleSort",
            "list": false,
            "name": "creditedRoleSort",
            "nullable": true,
            "type": "CreditedRoleSort"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditsV2Filter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameCreditsV2Filter"
          },
          {
            "defaultValue": "",
            "description": "Number of CreditV2 values to fetch.\nMaximum per request is 250.",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "true",
            "description": "In general: whether to utilise any entitlements passed to alter the behaviour of this API.\nSpecifically: For industry professionals (IMDbPro members) IMDb discloses attachment credits; which are essentially\nrumored credits to in-development title that have not been publicly announced.\n\nWhen false; attachments are not provided, as seen on the IMDb website.\nWhen true; attachments are provided if the requester is entitled to receive the credits.",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "The entire list of credits for a name.\n\nWhen a name has credits on individual episodes in a series, these are rolled up and presented at the series level\nas a single CreditV2 value, giving a summary of their contribution. Details of individual episodes are available\nfrom \"episodeCredits\" on a CreditedRole within a CreditV2 value.\n\nWhen a credit has performed many roles on a title, these are aggregated into a single CreditV2 value, with each\nindividual role represented as a separate CreditedRole within the CreditV2.\n\nCredits on in-development titles are only available to clients providing a Pro tier entitlement.\n\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "creditsV2",
        "nullable": true,
        "type": "CreditV2Connection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "This is Pro exclusive feature\n\nReturns a list of uncached professions for the name owner.\nThis list will return userSelectedProfessions when available or fallback on autoSelectedProfessions otherwise.\nReturns null if no userSelectedProfessions/autoSelectedProfessions details are available for this name.\nThrows UNAUTHENTICATED if the requesting customer is not logged in.\n\n@entitlement(NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": true,
        "name": "currentProfessions",
        "nullable": true,
        "type": "NameProfession"
      },
      {
        "args": [],
        "description": "Details of the person's cause of death.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "deathCause",
        "nullable": true,
        "type": "DisplayableNameDeathCause"
      },
      {
        "args": [],
        "description": "Details of the person's date of death.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "deathDate",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "Details of the person's location of death.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "deathLocation",
        "nullable": true,
        "type": "DisplayableLocation"
      },
      {
        "args": [],
        "description": "Details of the person's death\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "deathStatus",
        "nullable": true,
        "type": "NameDeathStatus"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Filters to apply to the demographic data items",
            "kind": "DemographicDataFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "DemographicDataFilter"
          },
          {
            "defaultValue": "",
            "description": "Limit the number of demographic data items to include in the response",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The demographic data items for the given name\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "demographicData",
        "nullable": true,
        "type": "DemographicDataItem"
      },
      {
        "args": [],
        "description": "Ways to contact this name directly\n\nReturn null if no contact details are available for this name or\nif the entitlement criteria is not met.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "directContact",
        "nullable": true,
        "type": "DirectContactDetails"
      },
      {
        "args": [],
        "description": "Roman numeral used to differentiate between 2 people of the same name\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "disambiguator",
        "nullable": true,
        "type": "Disambiguation"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Employment information for this name.\n\nReturn null if no employment information is available for this name or\nif the entitlement criteria is not met.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "employment",
        "nullable": true,
        "type": "EmploymentConnection"
      },
      {
        "args": [],
        "description": "Return Engagement Statistics for a name\n\n---------------------\nGraphlet Details:\n- Name: engagementData\n- CTI: IMDb/GraphQL/Engagement Data\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "engagementStatistics",
        "nullable": true,
        "type": "EngagementStatistics"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Cursor from which to begin providing credits from.\nClients wishing to retrieve episode credits can fetch an initial list of episodes for this name-title pair,\nvia the name.creditsV2 or name.creditGroupings field. These calls can provide a cursor to use to fetch episodes\nspecific to a CreditV2 or CreditedRole value.\n\nNote that if you include filtering parameters in an initial call, you must pass the same parameters along with\nyour cursor, to ensure the full listing of credits is consistent.\nFor example, if you first call name.creditsV2 with a filter of `titleType: PODCAST`, you must include this filter\nin your call to name.episodeCredits for the API to know to continue applying this filter.",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameEpisodeCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameEpisodeCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "Number of episode CreditV2 values to fetch.\nMaximum per request is 250.",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Captures several functional parameter choices in a single value, enabling consistent results across many callsites.\nDefault is to have no mode preset.",
            "kind": "CreditsModePreset",
            "list": false,
            "name": "modePreset",
            "nullable": true,
            "type": "CreditsModePreset"
          },
          {
            "defaultValue": "",
            "description": "Series title ID to display episodes credits for.",
            "kind": "SCALAR",
            "list": false,
            "name": "seriesId",
            "nullable": false,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Default is ascending by release date, series number, then episode number.",
            "kind": "EpisodeCreditsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodeCreditsSort"
          },
          {
            "defaultValue": "true",
            "description": "In general: whether to utilise any entitlements passed to alter the behaviour of this API.\nSpecifically: For industry professionals (IMDbPro members) IMDb discloses attachment credits; which are essentially\nrumored credits to in-development title that have not been publicly announced.\n\nWhen false; attachments are not provided, as seen on the IMDb website.\nWhen true; attachments are provided if the requester is entitled to receive the credits.",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Credits for this name on episodes within a particular series. For access to more broad credit data, see\nname.creditsV2 and name.creditGroupings fields.\n\nEach episode title is represented by a single CreditV2 value. When a name has performed multiple roles on the title,\nthese are represented as separate CreditedRoles within one CreditV2 value.\n\nCredits on in-development titles are only available to clients providing a Pro tier entitlement.\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "episodeCredits",
        "nullable": true,
        "type": "EpisodeCreditConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ClientSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ClientSort"
          }
        ],
        "description": " @experimental Experimental: DO NOT USE\n\nThe names represented by this person in some capacity, like the names this\nperson is the Talent Agent for or the Publicist for.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "experimental_clients",
        "nullable": true,
        "type": "Experimental_NameRepresentationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditCategoryFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameCreditCategoryFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "NameCreditSort"
          }
        ],
        "description": "Experimental Field: DO NOT USE. The list of credits by category for the name\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "experimental_creditCategories",
        "nullable": true,
        "type": "ExperimentalNameCreditCategoryWithCredits"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameCreditSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "NameCreditSort"
          }
        ],
        "description": "Experimental Field: DO NOT USE. The entire list of credits for the name\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "experimental_credits",
        "nullable": true,
        "type": "ExperimentalNameCreditConnection"
      },
      {
        "args": [],
        "description": "@experimental Experimental: DO NOT USE\n\nWays to contact this name directly\n\nReturn null if no contact details are available for this name or\nif the entitlement criteria is not met.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "experimental_directContact",
        "nullable": true,
        "type": "Experimental_DirectContactDetails"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "@experimental Experimental: DO NOT USE\n\nEmployment information for this name.\n\nReturn null if no employment information is available for this name or\nif the entitlement criteria is not met.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "experimental_employment",
        "nullable": true,
        "type": "Experimental_EmploymentConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "@experimental Experimental: DO NOT USE\n\nInformation about what companies and people represent this name, operating\nin capacities including legal, talent, management, and publicity\n\nThere will be one representation instance per combination\nof relationship type and agency/independent rep. For example,\nif someone is an actor's manager and talent agent, there will\nbe one representation instance for each of those relationships.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "experimental_representation",
        "nullable": true,
        "type": "Experimental_NameRepresentationConnection"
      },
      {
        "args": [],
        "description": "@experimental experimental\nResume data for a name page.\n\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "experimental_resume",
        "nullable": true,
        "type": "Experimental_Resume"
      },
      {
        "args": [],
        "description": "The requesting user's track state with notification preferences for this const.\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "experimental_trackNotificationPreferences",
        "nullable": true,
        "type": "Experimental_TrackNotificationPreferences"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ExternalLinksFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ExternalLinksFilter"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "externalLinkCategories",
        "nullable": true,
        "type": "ExternalLinkCategoryWithExternalLinks"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ExternalLinksFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ExternalLinksFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "externalLinks",
        "nullable": true,
        "type": "ExternalLinkConnection"
      },
      {
        "args": [],
        "description": "External links grouped by featured category\nThrows UNAUTHENTICATED if not logged in\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": true,
        "name": "featuredExternalLinkCategories",
        "nullable": true,
        "type": "ExternalLinkCategoryWithFeaturedExternalLinks"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Featured polls for the name.\nCapped at <LIMIT> polls. No pagination\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "featuredPolls",
        "nullable": true,
        "type": "PollsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "CENTIMETER",
            "description": "",
            "kind": "LengthUnit",
            "list": false,
            "name": "unit",
            "nullable": true,
            "type": "LengthUnit"
          }
        ],
        "description": "Details of the person's height, default unit is centimeters\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": true,
        "type": "NameHeight"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameImagesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameImagesFilter"
          }
        ],
        "description": "Images related to the name, grouped by image types\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "imageTypes",
        "nullable": true,
        "type": "ImageTypeWithImages"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the 'upload url' Link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "imageUploadLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Parameter to go around cache, expected to use cursor as a value",
            "kind": "String",
            "list": false,
            "name": "bust",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameImagesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameImagesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "images",
        "nullable": true,
        "type": "ImageConnection"
      },
      {
        "args": [],
        "description": "True if this name page is considered claimed.\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "isClaimed",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Titles this name is known for.\nThis API is being superseded by Name.knownForV2 in 2025. Contact imdb-relevance-tech@ before using this API.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "knownFor",
        "nullable": true,
        "type": "NameKnownForConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Number of known for titles to return. Default limit is 4, matching the maximum number of Known For titles\nwe generate per name. Default limit exists to avoid breaking clients if we begin generating larger volumes\nof titles.",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Captures several functional parameter choices in a single value, enabling consistent results across many callsites.\nDefault is KNOWN_FOR. See CreditsModePreset for details.",
            "kind": "CreditsModePreset",
            "list": false,
            "name": "modePreset",
            "nullable": true,
            "type": "CreditsModePreset"
          }
        ],
        "description": "Titles this name is known for.\nReturns an empty list if there are no known for titles.\nTitles are returned in order from most known for to least.\n\nEach credit captures all of the roles performed by the name on a given title.\nQuentin Tarantino (nm0000233) was actor, writer and director for Reservoir Dogs (tt0105236).\nThe Known For entry captures each of these as a separate creditedRole within the CreditV2 field.\n\nWithin a credit, creditedRoles are ordered by the category of the role. We prioritise categories linked\nto the person's professions, then follow a fixed ordering of categories as seen on Title Full Credits pages\non imdb.com.\n\nWithin a category, creditedRoles are ordered by frequency of role (across episodes in a series), with alphabetical\nused as a tie-breaker. The same is true for characters on appearance credits.\nThis behaviour differs from the ordering of creditedRoles and characters for other credits APIs (see CreditV2\ndocumentation). The idea is to highlight the work most frequently performed by a person, therefore capturing the\nwork they are likely to be most recognised for on the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "knownForV2",
        "nullable": true,
        "type": "KnownForV2"
      },
      {
        "args": [],
        "description": "Name data customer can customize or receive automatically generated data for.\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "managedData",
        "nullable": true,
        "type": "NameManagedData"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "meta",
        "nullable": true,
        "type": "NameMeta"
      },
      {
        "args": [
          {
            "defaultValue": "true",
            "description": "",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "StarMeter rank information\nRanking information beyond 5000 requires entitlement proving Pro subscription or Name ownership.\nUse useEntitlement = false to access non entitled version.\n@entitlement(PREMIUM_OR_NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: ranking\n- CTI: IMDb/GraphQL/ProRanking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "meterRank",
        "nullable": true,
        "type": "NameMeterRanking"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameMeterRankingHistoryInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "NameMeterRankingHistoryInput"
          }
        ],
        "description": "History of IMDbPro STARmeter rankings of a name.\nRequires entitlement proving Pro subscription.\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: ranking\n- CTI: IMDb/GraphQL/ProRanking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "meterRankingHistory",
        "nullable": true,
        "type": "NameMeterRankingHistory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Similar names to this name. The max similar names providable by the backend is 50.\n  \nPagination not supported:\nPagination may produce duplicate results as the ML model is not deterministic and ranking is affected\nby customer behavioral data. Clients are advised to retrieve names using a single request for now.\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "moreLikeThisNames",
        "nullable": true,
        "type": "MoreLikeThisNameConnection"
      },
      {
        "args": [],
        "description": "The person's name as it appears on IMDb.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "nameText",
        "nullable": true,
        "type": "NameText"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "News articles about a name\n\n---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "news",
        "nullable": true,
        "type": "NewsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "nickNames",
        "nullable": true,
        "type": "NickName"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NominationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NominationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NominationsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "NominationsSort"
          }
        ],
        "description": "The nominations that the person has won or been nominated for\nDefault sort is done by sorting nomination id in ascending order\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "nominations",
        "nullable": true,
        "type": "NominationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Other works for a name.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "otherWorks",
        "nullable": true,
        "type": "NameOtherWorkConnection"
      },
      {
        "args": [],
        "description": "The most prestigious awards that the person has won or been nominated for\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "prestigiousAwardSummary",
        "nullable": true,
        "type": "PrestigiousAwardSummary"
      },
      {
        "args": [],
        "description": "The primary image for the name.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "primaryProfessions",
        "nullable": true,
        "type": "PrimaryProfession"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "An ordered list of the primary videos related to a name.\nIf the first argument exceeds 100, the results will be capped to 100.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "primaryVideos",
        "nullable": true,
        "type": "VideoConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Returns a list of profession for a name (default limit is 3).\nThis list will return customerProfessions when available otherwise fallback to automaticProfessions.\nReturns null if no customerProfessions/automaticProfessions details are available for this name\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "professions",
        "nullable": true,
        "type": "NameProfession"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "publicityCategories",
        "nullable": true,
        "type": "PublicityCategoryWithListings"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "PublicityListingsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "PublicityListingsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Publicity Listings for a name.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "publicityListings",
        "nullable": true,
        "type": "PublicityListingConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "quotes",
        "nullable": true,
        "type": "NameQuoteConnection"
      },
      {
        "args": [],
        "description": "Returns page view statistics of this claimed Pro name page.\nReturns null if less than 5 people have viewed the page.\n  \nThrows UNAUTHENTICATED if not logged in.\n@entitlement(PREMIUM_NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "recentlyViewedStatistics",
        "nullable": true,
        "type": "RecentlyViewedStatistics"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Get lists related to a name\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "relatedLists",
        "nullable": true,
        "type": "ListCollectionConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NameRelationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NameRelationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Details of the person's relations\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "relations",
        "nullable": true,
        "type": "NameRelationsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Information about what companies and people represent this name, operating\nin capacities including legal, talent, management, and publicity\n\nThere will be one representation instance per combination\nof relationship type and agency/independent rep. For example,\nif someone is an actor's manager and talent agent, there will\nbe one representation instance for each of those relationships.\n\n@entitlement(PRO_PREMIUM, NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: contactsGQL\n- CTI: IMDb/GraphQL/ContactsGQL\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-name-redesign-2024",
        "kind": "",
        "list": false,
        "name": "representation",
        "nullable": true,
        "type": "NameRepresentationConnection"
      },
      {
        "args": [],
        "description": "Resume data for a name page.\n\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "resume",
        "nullable": true,
        "type": "Resume"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "searchIndexing",
        "nullable": true,
        "type": "NameSearchIndexing"
      },
      {
        "args": [],
        "description": "Self-verified data for this person.\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "selfVerifiedData",
        "nullable": true,
        "type": "SelfVerifiedNameData"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SharedNamesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "SharedNamesFilter"
          },
          {
            "defaultValue": "",
            "description": "Number of required shared names. Default value is 20 if not passed. Max value is 20",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SharedNamesInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "SharedNamesInput"
          }
        ],
        "description": "The shared names that the input and the parent names have worked with derived from their filmography credits\n\n---------------------\nGraphlet Details:\n- Name: networking\n- CTI: IMDb/GraphQL/Networking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "sharedNames",
        "nullable": true,
        "type": "SharedNamesResult"
      },
      {
        "args": [],
        "description": "Returns a summary object for the shared name connections between the currently logged in user and the name being queried.\n\nAlso returns a formatted string for displaying the name connection summary to customers.\n\n---------------------\nGraphlet Details:\n- Name: networking\n- CTI: IMDb/GraphQL/Networking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "sharedNamesSummary",
        "nullable": true,
        "type": "SharedNamesSummary"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required shared titles. Default value is 10 if not passed. Max value is 10",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SharedTitlesInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "SharedTitlesInput"
          }
        ],
        "description": "The shared titles between the input and the parent name derived from their filmography credits\n\n---------------------\nGraphlet Details:\n- Name: networking\n- CTI: IMDb/GraphQL/Networking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "sharedTitles",
        "nullable": true,
        "type": "SharedTitlesConnection"
      },
      {
        "args": [],
        "description": "Details of the person's spouses\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "spouses",
        "nullable": true,
        "type": "NameSpouse"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Salary earned from a title\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "titleSalaries",
        "nullable": true,
        "type": "SalaryConnection"
      },
      {
        "args": [],
        "description": "The requesting user's track state with notification preferences for this const.\nThrows FORBIDDEN if customer does not hve a pro subscription\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "trackNotificationPreferences",
        "nullable": true,
        "type": "TrackNotificationPreferences"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Details of the person's trademarks\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "trademarks",
        "nullable": true,
        "type": "TrademarkConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Trivia for a name.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "trivia",
        "nullable": true,
        "type": "NameTriviaConnection"
      },
      {
        "args": [],
        "description": "This is Pro exclusive feature\n\nReturns the latest uncached user selected profession overides only\nReturn null if no user selected profession details are available for this name.\nThrows UNAUTHENTICATED if the requesting customer is not logged in.\n\n@entitlement(PREMIUM_NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": true,
        "name": "userSelectedProfessions",
        "nullable": true,
        "type": "NameProfession"
      },
      {
        "args": [],
        "description": "The person's vanity URL\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "vanityUrl",
        "nullable": true,
        "type": "VanityUrl"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideosQueryFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "VideosQueryFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideoSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "VideoSort"
          }
        ],
        "description": "Videos related to the name, grouped by video type\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": true,
        "name": "videoTypes",
        "nullable": true,
        "type": "VideoTypeWithVideos"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideosQueryFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "VideosQueryFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideoSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "VideoSort"
          }
        ],
        "description": "An ordered list of videos related to a name.\nIf the first argument exceeds 100, the results will be capped to 100.\nWhen there is no sort passed in it, default to the current videos sort logic and behavior.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "videos",
        "nullable": true,
        "type": "VideoConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Name",
    "possibleTypes": []
  },
  "NameAka": {
    "args": [],
    "description": "Aka details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The alternative name as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNameAkaProperty"
      },
      {
        "args": [],
        "description": "The alternative name",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameAka",
    "possibleTypes": []
  },
  "NameAkaConnection": {
    "args": [],
    "description": "Pagination for NameAkas types which always has a known total number of edges",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of NameAkas",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameAkaEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameAkaConnection",
    "possibleTypes": []
  },
  "NameAkaEdge": {
    "args": [],
    "description": "Page of NameAkas",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the person's alternative names",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameAka"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: NameAka 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameAkaEdge",
    "possibleTypes": []
  },
  "NameBio": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The bio author. Optional as it will be null for auto generated bios",
        "kind": "",
        "list": false,
        "name": "author",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The category of bio",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "NameBioCategory"
      },
      {
        "args": [],
        "description": "The bio as displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": true,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "Unique ID for this bio item",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the bio text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The bio text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameBio",
    "possibleTypes": []
  },
  "NameBioCategory": {
    "args": [],
    "description": "A category of person's bio describing the type of bio, e.g. 'auto-generated', 'mini-bio'",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameBioCategory",
    "possibleTypes": []
  },
  "NameBioEdge": {
    "args": [],
    "description": "Page of name bios",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A NameBio node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameBio"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: NameBio 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameBioEdge",
    "possibleTypes": []
  },
  "NameBiosConnection": {
    "args": [],
    "description": "Pagination for NameBio types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of name bios",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameBioEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameBiosConnection",
    "possibleTypes": []
  },
  "NameBiosFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Return person's bios of specified categories",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return person's bios in all available locales when true, otherwise returns all available bios in the requested language",
        "list": false,
        "name": "includeAllLocales",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameBiosFilter",
    "possibleTypes": []
  },
  "NameChartRankingsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameChartRankingsEdge"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameChartRankingsConnection",
    "possibleTypes": []
  },
  "NameChartRankingsEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameChartRankingsNode"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameChartRankingsEdge",
    "possibleTypes": []
  },
  "NameChartRankingsInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "It is made optional for adapting future use cases.\nNot passing a valid value will result in client error.",
        "list": false,
        "name": "rankingsChartType",
        "nullable": true,
        "type": "NameChartRankingsType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameChartRankingsInput",
    "possibleTypes": []
  },
  "NameChartRankingsNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "item",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameChartRankingsNode",
    "possibleTypes": []
  },
  "NameChartRankingsType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "STARmeter chart geared to India",
        "name": "INDIA_STAR_METER"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NameChartRankingsType",
    "possibleTypes": []
  },
  "NameCreditAggregation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Defines how credits are aggregated together into a single CreditV2 result.\n\nAggregation allows clients to choose the level of detail to show for credits, avoiding repetition of the same\ntitle across many roles.\n\nParameter is modelled as a string to allow for altering the list of allowed values over time. Supported values are:\n\nTITLE: All credits for a single name on a single title are aggregated together.\nThis supports experiences like Name Credits tab on pro.imdb.com, where all work by a name for a title is\nshown together.\nFor example, see Pulp Fiction (1994) in https://pro.imdb.com/name/nm0000233/credits.\n\nTITLE_AND_GROUPING: Credits are broken down by title and grouping.\nThis reflects the same breakdown of credits seen on experiences like Name Main on imdb.com.\nNote that the credits vended would not be grouped or ordered per-grouping in any way.\nFor example, for Quentin Tarantino (https://www.imdb.com/name/nm0000233/), we would return three credits for\nPulp Fiction (1994): Director, Writer (covering two different roles) and Actor.",
        "list": false,
        "name": "aggregationType",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameCreditAggregation",
    "possibleTypes": []
  },
  "NameCreditCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameCreditCategory",
    "possibleTypes": []
  },
  "NameCreditCategoryFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for archived / unarchived credits only",
        "list": false,
        "name": "archived",
        "nullable": true,
        "type": "ArchivedOrUnarchivedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific credit categories.\nThe list of category IDs are available to query from nameMetadata.nameCreditCategories.\nCannot be used in conjunction with \"excludeCategories\", as the behaviour for unspecified values is ambiguous.",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credited or uncredited credits only",
        "list": false,
        "name": "credited",
        "nullable": true,
        "type": "CreditedOrUncreditedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific credit categories.\nThe list of category IDs are available to query from nameMetadata.nameCreditCategories.\nCannot be used in conjunction with \"categories\", as the behaviour for unspecified values is ambiguous.",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out credits on titles with specific genres.\nThe list of genres can be accessed from titleMetadata.titleGenres.\nCannot be used in conjunction with \"genres\", as the behaviour for unspecified values is ambiguous.",
        "list": true,
        "name": "excludeGenres",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific production stages.\nCannot be used in conjunction with \"productionStage\", as the behaviour for unspecified values is ambiguous.",
        "list": true,
        "name": "excludeProductionStage",
        "nullable": true,
        "type": "ProductionStageFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out credits for titles with specific titleTypes.\nThe list of titleTypes can be accessed from titleMetadata.titleTypes.\nCannot be used in conjunction with \"titleType\", as the behaviour for unspecified values is ambiguous.",
        "list": true,
        "name": "excludeTitleType",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credits on titles with specific genres.\nThe list of genres can be accessed from titleMetadata.titleGenres.\nCannot be used in conjunction with \"excludeGenres\", as the behaviour for unspecified values is ambiguous.",
        "list": true,
        "name": "genres",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific production stages.\nCannot be used in conjunction with \"excludeProductionStage\", as the behaviour for unspecified values is ambiguous.",
        "list": true,
        "name": "productionStage",
        "nullable": true,
        "type": "ProductionStageFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for whether the credits belong to the name's primary professions or not",
        "list": false,
        "name": "professions",
        "nullable": true,
        "type": "ProfessionsFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for a project status of UPCOMING, PREVIOUS or PROJECT_IN_DEVELOPMENT.\nOn name.creditCategories, this field supports only one value, where more than\none value is supplied only first value is used.\nOn name.creditGroupings, multiple values are supported.",
        "list": true,
        "name": "projectStatus",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits for titles with specific titleTypes.\nThe list of titleTypes can be accessed from titleMetadata.titleTypes.\nCannot be used in conjunction with \"excludeTitleType\", as the behaviour for unspecified values is ambiguous.",
        "list": true,
        "name": "titleType",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits for titles with specific titleTypeCategory.",
        "list": true,
        "name": "titleTypeCategory",
        "nullable": true,
        "type": "TitleTypeCategoryValue"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits to only those for these specific titles",
        "list": true,
        "name": "titles",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameCreditCategoryFilter",
    "possibleTypes": []
  },
  "NameCreditCategoryWithCredits": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "credits",
        "nullable": true,
        "type": "NameCreditConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameCreditCategoryWithCredits",
    "possibleTypes": []
  },
  "NameCreditConnection": {
    "args": [],
    "description": "Pagination for Credit type on a Name.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of credits",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "CreditEdge"
      },
      {
        "args": [],
        "description": "How the credits are ordered",
        "kind": "",
        "list": false,
        "name": "orderBy",
        "nullable": true,
        "type": "CreditsOrderedBy"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameCreditConnection",
    "possibleTypes": []
  },
  "NameCreditSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "NameCreditSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameCreditSort",
    "possibleTypes": []
  },
  "NameCreditSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "RELEASE_DATE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NameCreditSortBy",
    "possibleTypes": []
  },
  "NameCreditSummary": {
    "args": [],
    "description": "Summary of the name credits.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "List of categories the name has credits on",
        "kind": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "CreditCategorySummary"
      },
      {
        "args": [],
        "description": "List of genres the name has credits on",
        "kind": "",
        "list": true,
        "name": "genres",
        "nullable": true,
        "type": "GenreSummary"
      },
      {
        "args": [],
        "description": "List of title type categories the name has credits on",
        "kind": "",
        "list": true,
        "name": "titleTypeCategories",
        "nullable": true,
        "type": "TitleTypeCategorySummary"
      },
      {
        "args": [],
        "description": "List of title types the name has credits on",
        "kind": "",
        "list": true,
        "name": "titleTypes",
        "nullable": true,
        "type": "TitleTypeSummary"
      },
      {
        "args": [],
        "description": "Total number of credits after restriction is applied and restriction info",
        "kind": "",
        "list": false,
        "name": "totalCredits",
        "nullable": true,
        "type": "TotalCredits"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameCreditSummary",
    "possibleTypes": []
  },
  "NameCreditV2Sort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Capture the order of CreditV2 items in a listing.\n\nThis is modelled as a string to allow for altering the list of allowed values over time. Supported values are:\n\nRELEASE_DATE: Credit ordering follows this priority sequence:\n1. Release date - For singular titles, the primary release date (most recent first)\n2. Latest release date - For series, most recent episode release date that this credit applies to\n3. Title ID - A final tie-break by title ID to ensure consistent ordering (largest first).\n\nRELEASE_DATE is the default.",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameCreditV2Sort",
    "possibleTypes": []
  },
  "NameCreditsFilter": {
    "args": [],
    "description": "In name.credits API, filters only applied to top level credits. Episodes under series have their own filters",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for archived / unarchived credits only.\nBy default, all credits are included, including those marked as \"(archive footage)\" or \"(archive sound)\".",
        "list": false,
        "name": "archived",
        "nullable": true,
        "type": "ArchivedOrUnarchivedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific credit categories.\nThe list of category IDs are available to query from nameMetadata.nameCreditCategories.\nCannot be used in conjunction with \"excludeCategories\", as the behaviour for unspecified values is ambiguous.\nBy default, all categories are included.",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credited or uncredited credits only.\nBy default, all credits are included, including those marked as \"(uncredited)\".",
        "list": false,
        "name": "credited",
        "nullable": true,
        "type": "CreditedOrUncreditedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific credit categories.\nThe list of category IDs are available to query from nameMetadata.nameCreditCategories.\nCannot be used in conjunction with \"categories\", as the behaviour for unspecified values is ambiguous.\nBy default, all categories are included.",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out credits on titles with specific genres.\nThe list of genres can be accessed from titleMetadata.titleGenres.\nCannot be used in conjunction with \"genres\", as the behaviour for unspecified values is ambiguous.\nBy default, credits for all genres are included.",
        "list": true,
        "name": "excludeGenres",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific credit groupings. Individual grouping IDs are found in name.creditGroupings responses.\nClients would often make a call to name.creditGroupings, retrieve an initial page of credits per grouping, then\nfetch additional pages using this API.\nCannot be used in conjunction with \"groupings\", as the behaviour for unspecified values is ambiguous.\nBy default, credits for all groupings are included.",
        "list": true,
        "name": "excludeGroupings",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific production stages.\nCannot be used in conjunction with \"productionStage\", as the behaviour for unspecified values is ambiguous.\nBy default, credits for all production stages are included.",
        "list": true,
        "name": "excludeProductionStage",
        "nullable": true,
        "type": "ProductionStageFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out credits for titles with specific titleTypes.\nThe list of titleTypes can be accessed from titleMetadata.titleTypes.\nCannot be used in conjunction with \"titleType\", as the behaviour for unspecified values is ambiguous.\nBy default, credits for all title types are included.",
        "list": true,
        "name": "excludeTitleType",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Drop credits that have at least one of the given traits on their credit category.\nSupported values are: 'CAST_TRAIT', 'CREW_TRAIT', 'SELF_TRAIT',\n'THANKS_TRAIT', 'ADDITIONAL_APPEARANCES_TRAIT', 'MAJOR_CREATIVE_INPUT_TRAIT',\n'UNCATEGORIZED_TRAIT', 'UNDERGOING_TESTING_TRAIT'.\nCannot be used in conjunction with \"includeTraits\", as the behaviour for unspecified values is ambiguous.\nBy default, credits are not filtered by trait.\nSee CreditCategoryTrait for trait definitions.",
        "list": true,
        "name": "excludeTraits",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credits on titles with specific genres.\nThe list of genres can be accessed from titleMetadata.titleGenres.\nCannot be used in conjunction with \"excludeGenres\", as the behaviour for unspecified values is ambiguous.\nBy default, credits for all genres are included.",
        "list": true,
        "name": "genres",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific credit groupings. Individual grouping IDs are found in name.creditGroupings responses.\nClients would often make a call to name.creditGroupings, retrieve an initial page of credits per grouping, then\nfetch additional pages using this API.\nCannot be used in conjunction with \"excludeGroupings\", as the behaviour for unspecified values is ambiguous.\nBy default, credits for all groupings are included.",
        "list": true,
        "name": "groupings",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Keep credits that have at least one of the given traits on their credit category.\nSupported values are: 'CAST_TRAIT', 'CREW_TRAIT', 'SELF_TRAIT',\n'THANKS_TRAIT', 'ADDITIONAL_APPEARANCES_TRAIT', 'MAJOR_CREATIVE_INPUT_TRAIT',\n'UNCATEGORIZED_TRAIT', 'UNDERGOING_TESTING_TRAIT'.\nCannot be used in conjunction with \"excludeTraits\", as the behaviour for unspecified values is ambiguous.\nBy default, credits are not filtered by trait.\nSee CreditCategoryTrait for trait definitions.",
        "list": true,
        "name": "includeTraits",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific production stages.\nCannot be used in conjunction with \"excludeProductionStage\", as the behaviour for unspecified values is ambiguous.\nBy default, credits for all production stages are included.",
        "list": true,
        "name": "productionStage",
        "nullable": true,
        "type": "ProductionStageFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for a project status of UPCOMING, PREVIOUS or PROJECT_IN_DEVELOPMENT.\nOn name.creditCategories, this field supports only one value, where more than\none value is supplied only first value is used.\nOn name.creditGroupings, multiple values are supported.\nBy default, credits for all project statuses are included. Note that PROJECT_IN_DEVELOPMENT titles are not included\nwhen the request has no Pro tier entitlement.",
        "list": true,
        "name": "projectStatus",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits for titles with specific titleTypes.\nThe list of titleTypes can be accessed from titleMetadata.titleTypes.\nCannot be used in conjunction with \"excludeTitleType\", as the behaviour for unspecified values is ambiguous.\nBy default, credits for all title types are included.",
        "list": true,
        "name": "titleType",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits for titles with specific titleTypeCategory.\nBy default, credits for all title type categories are included.",
        "list": true,
        "name": "titleTypeCategory",
        "nullable": true,
        "type": "TitleTypeCategoryValue"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits to only those for these specific titles.\nBy default, credits for all titles are included.",
        "list": true,
        "name": "titles",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameCreditsFilter",
    "possibleTypes": []
  },
  "NameCreditsV2Filter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply to credits at the contributed credit level.",
        "list": false,
        "name": "creditLevelFilter",
        "nullable": true,
        "type": "CreditLevelCreditsFilterSet"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply to credits at the title level. In this context, they apply to the parent series title.",
        "list": false,
        "name": "titleLevelFilter",
        "nullable": true,
        "type": "TitleLevelCreditsFilterSet"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameCreditsV2Filter",
    "possibleTypes": []
  },
  "NameDataType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Matches names that have awards data",
        "name": "AWARD_NOMINATIONS"
      },
      {
        "description": "Matches names that have biography data",
        "name": "BIOGRAPHY"
      },
      {
        "description": "Matches names that have a birth date",
        "name": "BIRTH_DATE"
      },
      {
        "description": "Matches names that have a birth place",
        "name": "BIRTH_PLACE"
      },
      {
        "description": "Matches names that have a death date",
        "name": "DEATH_DATE"
      },
      {
        "description": "Matches names that have a death place",
        "name": "DEATH_PLACE"
      },
      {
        "description": "Matches names that have height data",
        "name": "HEIGHT_INFO"
      },
      {
        "description": "Matches names that have quotes data",
        "name": "QUOTES"
      },
      {
        "description": "Matches names that have trivia data",
        "name": "TRIVIA"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NameDataType",
    "possibleTypes": []
  },
  "NameDeathStatus": {
    "args": [],
    "description": "Name death status enum",
    "enumValues": [
      {
        "description": null,
        "name": "ALIVE"
      },
      {
        "description": null,
        "name": "DEAD"
      },
      {
        "description": null,
        "name": "PRESUMED_DEAD"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NameDeathStatus",
    "possibleTypes": []
  },
  "NameDisplayPreferences": {
    "args": [],
    "description": "Page display preferences (e.g. whether to hide awards, biography, etc.)",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Visibility setting for 'also known as'",
        "kind": "",
        "list": false,
        "name": "akas",
        "nullable": false,
        "type": "NameDisplayVisibilityLevel"
      },
      {
        "args": [],
        "description": "Visibility setting for self-verified awards",
        "kind": "",
        "list": false,
        "name": "awards",
        "nullable": false,
        "type": "NameDisplayVisibilityLevel"
      },
      {
        "args": [],
        "description": "Visibility setting for biography",
        "kind": "",
        "list": false,
        "name": "biography",
        "nullable": false,
        "type": "NameDisplayVisibilityLevel"
      },
      {
        "args": [],
        "description": "Visibility setting for height",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "NameDisplayVisibilityLevel"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameDisplayPreferences",
    "possibleTypes": []
  },
  "NameDisplayVisibilityLevel": {
    "args": [],
    "description": "Page display visibility preference",
    "enumValues": [
      {
        "description": null,
        "name": "HIDDEN"
      },
      {
        "description": null,
        "name": "PUBLIC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NameDisplayVisibilityLevel",
    "possibleTypes": []
  },
  "NameEpisodeCreditsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply to credits at the contributed credit level.",
        "list": false,
        "name": "creditLevelFilter",
        "nullable": true,
        "type": "CreditLevelCreditsFilterSet"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply to credits at the episode level.",
        "list": false,
        "name": "episodeLevelFilter",
        "nullable": true,
        "type": "EpisodesFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply to credits at the title level. In this context, they apply to the parent series title.",
        "list": false,
        "name": "titleLevelFilter",
        "nullable": true,
        "type": "TitleLevelCreditsFilterSet"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameEpisodeCreditsFilter",
    "possibleTypes": []
  },
  "NameFacetConnection": {
    "args": [],
    "description": "Pagination for name facets",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameFacetEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Provides information on the total number of names you could filter on",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameFacetConnection",
    "possibleTypes": []
  },
  "NameFacetEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "How many items are associated with this name node",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameFacetEdge",
    "possibleTypes": []
  },
  "NameFacetField": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "CREDIT_CATEGORIES"
      },
      {
        "description": null,
        "name": "GENDER_IDENTITY"
      },
      {
        "description": null,
        "name": "JOB_CATEGORIES"
      },
      {
        "description": null,
        "name": "PROFESSIONS"
      },
      {
        "description": null,
        "name": "PROFESSION_CATEGORIES"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NameFacetField",
    "possibleTypes": []
  },
  "NameFilmBiography": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      },
      {
        "args": [],
        "description": "The publicity listing as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNameFilmBiographyProperty"
      },
      {
        "args": [],
        "description": "A list of biographical titles about this person.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameFilmBiography",
    "possibleTypes": []
  },
  "NameGenderIdentity": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Matches names whose gender is female",
        "name": "FEMALE"
      },
      {
        "description": "Matches names whose gender is male",
        "name": "MALE"
      },
      {
        "description": "Matches names whose gender is non_binary",
        "name": "NON_BINARY"
      },
      {
        "description": "Matches names whose gender is other",
        "name": "OTHER"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NameGenderIdentity",
    "possibleTypes": []
  },
  "NameHeight": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name's height as a displayable property, e.g. '6\u2032 4\u2033 (1.93 m)', with imperial provided for customers in the\nfollowing countries: \"US\", \"CA\", \"GB\", \"IN\", \"AU\", \"NZ\", \"IE\", \"HK\", \"MY\"",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNameHeightProperty"
      },
      {
        "args": [],
        "description": "The name's height measurement",
        "kind": "",
        "list": false,
        "name": "measurement",
        "nullable": false,
        "type": "LengthMeasurement"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameHeight",
    "possibleTypes": []
  },
  "NameImagesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Return only a name's featured images, no featured images, or if not specified, all images",
        "list": false,
        "name": "featured",
        "nullable": true,
        "type": "FeaturedImagesOption"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return images meeting the specified gallery constraints",
        "list": false,
        "name": "galleryConstraints",
        "nullable": true,
        "type": "ImageGalleryFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return images meeting the specified name constraints",
        "list": false,
        "name": "nameConstraints",
        "nullable": true,
        "type": "ImageNameFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return only images tagged with at least a minimum and/or at most a maximum number of names",
        "list": false,
        "name": "namesCount",
        "nullable": true,
        "type": "CountInterval"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return images meeting the specified title constraints",
        "list": false,
        "name": "titleConstraints",
        "nullable": true,
        "type": "ImageTitleFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return only images which are one of these types",
        "list": true,
        "name": "types",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameImagesFilter",
    "possibleTypes": []
  },
  "NameKnownFor": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The credit this name is known for\nThe known for credit is selected based on the principal category",
        "kind": "",
        "list": false,
        "name": "credit",
        "nullable": false,
        "type": "Credit"
      },
      {
        "args": [],
        "description": "The title this name is known for",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameKnownFor",
    "possibleTypes": []
  },
  "NameKnownForConnection": {
    "args": [],
    "description": "Pagination for Known For titles which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Known For Titles",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameKnownForEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the connection",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "NameKnownForRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameKnownForConnection",
    "possibleTypes": []
  },
  "NameKnownForEdge": {
    "args": [],
    "description": "Page of Known For Titles",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Known For node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameKnownFor"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: KnownFor 4 out of 100",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameKnownForEdge",
    "possibleTypes": []
  },
  "NameKnownForRestriction": {
    "args": [],
    "description": "Restriction information applied to KnownFor",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameKnownForRestriction",
    "possibleTypes": []
  },
  "NameLevelCreditsFilterSet": {
    "args": [],
    "description": "Filters that apply to credits at the name level.\nEach specified filter is AND-ed together.\nFor filters that accept a list of values, the filter is an OR across that list, so any\ncredit matching one value meets the filter's criteria.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits to only those for these specific names.\nBy default, credits for all names are included.",
        "list": true,
        "name": "nameId",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameLevelCreditsFilterSet",
    "possibleTypes": []
  },
  "NameListItemSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameListItemSearchEdge"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "facetField",
            "nullable": false,
            "type": "NameFacetField"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "facet",
        "nullable": true,
        "type": "SearchFacet"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameListItemSearchConnection",
    "possibleTypes": []
  },
  "NameListItemSearchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ListItemSearchNode"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameListItemSearchEdge",
    "possibleTypes": []
  },
  "NameListSearchSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "NameListSearchSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameListSearchSort",
    "possibleTypes": []
  },
  "NameListSearchSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort names based on their birth date\nASC: Earliest dates to Highest dates (Oldest - Youngest)",
        "name": "BIRTH_DATE"
      },
      {
        "description": "Date when the list item was added to the list\nASC: Earlier date will be first.",
        "name": "DATE_ADDED"
      },
      {
        "description": "Sort names based on their death date\nASC: Earliest dates to last dates (Died First - Died Last)",
        "name": "DEATH_DATE"
      },
      {
        "description": "List order determined by the customer",
        "name": "LIST_ORDER"
      },
      {
        "description": "Sort names alphabetically\nASC: A-Z",
        "name": "NAME"
      },
      {
        "description": "Sort names based on their starMeterCurrentWeekRank\nASC: Lower popularity score means that the name is more popular, so the most popular names will be first",
        "name": "POPULARITY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NameListSearchSortBy",
    "possibleTypes": []
  },
  "NameManagedData": {
    "args": [],
    "description": "Name data that provides additional context exclusively for name owner or authorized managers",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Automatic featured images to use if customer does not manually select with max limit 6\n\nThrows UNAUTHENTICATED if not logged in\nThrows FORBIDDEN if not entitled",
        "kind": "",
        "list": true,
        "name": "automaticFeaturedImages",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Automatic known for titles to use if customer does not manually select with max limit 4\n\nThrows UNAUTHENTICATED if not logged in\nThrows FORBIDDEN if not entitled",
        "kind": "",
        "list": true,
        "name": "automaticKnownFor",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Featured images that customer selected manually last time\n\nThrows UNAUTHENTICATED if not logged in\nThrows FORBIDDEN if not entitled",
        "kind": "",
        "list": false,
        "name": "customFeaturedImages",
        "nullable": true,
        "type": "CustomFeaturedImages"
      },
      {
        "args": [],
        "description": "Known for titles that customer selected manually last time\n\nThrows UNAUTHENTICATED if not logged in\nReturns null if not entitled\n\n@entitlement(PREMIUM_NAME_OWNER)",
        "kind": "",
        "list": false,
        "name": "customKnownFor",
        "nullable": true,
        "type": "CustomKnownFor"
      },
      {
        "args": [],
        "description": "Primary image settings configured by the name owner\n\nThrows UNAUTHENTICATED if not logged in\nThrows FORBIDDEN if not entitled",
        "kind": "",
        "list": false,
        "name": "customPrimaryImage",
        "nullable": true,
        "type": "CustomPrimaryImage"
      },
      {
        "args": [],
        "description": "Page display preferences (e.g. whether to hide biography, akas, etc.)\n\nThrows UNAUTHENTICATED if not logged in\nThrows FORBIDDEN if not entitled",
        "kind": "",
        "list": false,
        "name": "displayPreferences",
        "nullable": true,
        "type": "NameDisplayPreferences"
      },
      {
        "args": [],
        "description": "Up-to-date primary image for customer",
        "kind": "",
        "list": false,
        "name": "latestPrimaryImage",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Managing permission statuses for the given clients\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PREMIUM_NAME_OWNER)",
        "kind": "",
        "list": true,
        "name": "managedClients",
        "nullable": true,
        "type": "ManagedClient"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Managing permission statuses for the given representatives\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PREMIUM_NAME_OWNER)",
        "kind": "",
        "list": true,
        "name": "managingRepresentatives",
        "nullable": true,
        "type": "ManagingRepresentative"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameManagedData",
    "possibleTypes": []
  },
  "NameManagingPermissionRequestResponse": {
    "args": [],
    "description": "A request sent from a rep to a client to ask for managing permission\nNotes: it is the return type of a query field",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "True if permission request is valid (not expired, not yet approved or denied by target, etc.)",
        "kind": "",
        "list": false,
        "name": "isValid",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "requester",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "target",
        "nullable": false,
        "type": "Name"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameManagingPermissionRequestResponse",
    "possibleTypes": []
  },
  "NameMeta": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "canonicalId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "publicationStatus",
        "nullable": false,
        "type": "PublicationStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameMeta",
    "possibleTypes": []
  },
  "NameMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "All the name credit categories",
        "kind": "",
        "list": true,
        "name": "nameCreditCategories",
        "nullable": false,
        "type": "NameCreditCategory"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameMetadata",
    "possibleTypes": []
  },
  "NameMeterRanking": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The current IMDbPro StarMeter ranking of the name. A lower value is better.\nRanking information beyond 5000 requires entitlement proving Pro subscription.",
        "kind": "",
        "list": false,
        "name": "currentRank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "If a previous rank exists, this is a set of fields comparing the current rank\nto the previous rank",
        "kind": "",
        "list": false,
        "name": "rankChange",
        "nullable": true,
        "type": "MeterRankChange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameMeterRanking",
    "possibleTypes": []
  },
  "NameMeterRankingHistory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The best historical IMDbPro StarMeter ranking of a name. \nA lower value is better. By default, returns the values over all time.\nRequires entitlement proving Pro subscription.",
        "kind": "",
        "list": false,
        "name": "bestRank",
        "nullable": true,
        "type": "MeterRankingHistoryEntry"
      },
      {
        "args": [],
        "description": "History of IMDbPro STARmeter rankings of a name.\nRequires entitlement proving Pro subscription.",
        "kind": "",
        "list": true,
        "name": "ranks",
        "nullable": true,
        "type": "MeterRankingHistoryEntry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "MeterRestriction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameMeterRankingHistory",
    "possibleTypes": []
  },
  "NameMeterRankingHistoryInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Last date to obtain STARmeter history for. If not provided, default is most recent ranking date.\nIf there is no ranking on end date, the date is the most recent date before this one.",
        "list": false,
        "name": "endDate",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "First date to obtain STARmeter history for. If not provided, default is first ranking date.\nIf there is no ranking on start date, the date is the earliest date after this one.",
        "list": false,
        "name": "startDate",
        "nullable": true,
        "type": "Date"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameMeterRankingHistoryInput",
    "possibleTypes": []
  },
  "NameOtherWork": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Type of the Other Work item",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "NameOtherWorkCategory"
      },
      {
        "args": [],
        "description": "Other work as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNameOtherWorkProperty"
      },
      {
        "args": [],
        "description": "Start date of the OtherWork item",
        "kind": "",
        "list": false,
        "name": "fromDate",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The details of the work this person was involved in",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "End date of the OtherWork item",
        "kind": "",
        "list": false,
        "name": "toDate",
        "nullable": true,
        "type": "Date"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameOtherWork",
    "possibleTypes": []
  },
  "NameOtherWorkCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "id will be the same as text",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameOtherWorkCategory",
    "possibleTypes": []
  },
  "NameOtherWorkConnection": {
    "args": [],
    "description": "Pagination for Other Works types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of OtherWork",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameOtherWorkEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameOtherWorkConnection",
    "possibleTypes": []
  },
  "NameOtherWorkEdge": {
    "args": [],
    "description": "Page of OtherWork",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A OtherWork node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameOtherWork"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: OtherWork 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameOtherWorkEdge",
    "possibleTypes": []
  },
  "NamePersonalLocation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "ID of the location",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "latitude",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "longitude",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Display text of the location, e.g. 'Sydney, Australia'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NamePersonalLocation",
    "possibleTypes": []
  },
  "NamePersonalLocationMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The maximum number of values a customer can have for personal locations",
        "kind": "",
        "list": false,
        "name": "limit",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "All valid values for personal locations",
        "kind": "",
        "list": true,
        "name": "validValues",
        "nullable": false,
        "type": "NamePersonalLocation"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NamePersonalLocationMetadata",
    "possibleTypes": []
  },
  "NamePersonalLocations": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "locations",
        "nullable": false,
        "type": "NamePersonalLocation"
      },
      {
        "args": [],
        "description": "Total number of personal locations",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NamePersonalLocations",
    "possibleTypes": []
  },
  "NamePortrayal": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      },
      {
        "args": [],
        "description": "The publicity listing as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNamePortrayalProperty"
      },
      {
        "args": [],
        "description": "A list of titles in which this person was portrayed by an actor, not including biographical titles about this person.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NamePortrayal",
    "possibleTypes": []
  },
  "NamePrintBiography": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Text describing the authors for this book",
        "kind": "",
        "list": true,
        "name": "authors",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      },
      {
        "args": [],
        "description": "The biographical book as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNamePrintBiographyProperty"
      },
      {
        "args": [],
        "description": "The ISBN number, without hyphens, corresponding to the biography book. Can be ISBN-10 or ISBN-13.",
        "kind": "",
        "list": false,
        "name": "isbn",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Information about the publisher.",
        "kind": "",
        "list": false,
        "name": "publisher",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "The title of the biographical book.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "PublicityListingTitleText"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NamePrintBiography",
    "possibleTypes": []
  },
  "NameProfession": {
    "args": [],
    "description": "A NameProfession is a type of work that someone wants to be known for doing on an ongoing basis.\nFor example a \u201cMakeup Artist\u201d.\n\nAll fields are marked as nullable in case of invalid graphlet cross-link - in practice these should never be null.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The profession ID e.g. amzn1.imdb.profession.1.2.3\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Flags whether this profession can be selected by customers in menus during contribution or search.\nStaff-only professions like 'Monarch of the United Kingdom' are false. \nUndefined values will be treated as false\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "isCustomerSelectable",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Details of the Profession\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "profession",
        "nullable": true,
        "type": "DisplayableProfession"
      },
      {
        "args": [],
        "description": "Details of the Profession Category\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "professionCategory",
        "nullable": true,
        "type": "ProfessionCategory"
      },
      {
        "args": [],
        "description": "short description of the Profession\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "shortDescription",
        "nullable": true,
        "type": "DisplayableProfessionDescription"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameProfession",
    "possibleTypes": []
  },
  "NameProfessionCategorySearchConstraint": {
    "args": [],
    "description": "The constraints here are combined (AND).\n\nexample:\n\nprofessionCategoryConstraint: {\n    allProfessionCategoryIds: [\"amzn1.imdb.concept.profession_category.0001...\",\n\"amzn1.imdb.concept.profession_category.0002...\"],\n    anyProfessionCategoryIds: [\"amzn1.imdb.concept.profession_category.0003...\",\n\"amzn1.imdb.concept.profession_category.0004...\"]\n    excludeProfessionCategoryIds: [\"amzn1.imdb.concept.profession_category.0005...\"]\n}\nwill match names that have the profession categories (\"...0001...\" AND\n\"...0002...\") AND (\"...0003...\" OR \"...0004...\") AND NOT \"...0005...\"",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must have all of these profession categories",
        "list": true,
        "name": "allProfessionCategoryIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must have AT LEAST ONE of these profession categories",
        "list": true,
        "name": "anyProfessionCategoryIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must not have any of these profession categories\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results will be empty.",
        "list": true,
        "name": "excludeProfessionCategoryIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameProfessionCategorySearchConstraint",
    "possibleTypes": []
  },
  "NameProfessionSearchConstraint": {
    "args": [],
    "description": "The constraints here are combined (AND).\n\nexample:\n\nprofessionConstraint: {\n    allProfessionIds: [\"amzn1.imdb.concept.profession.0001...\", \"amzn1.imdb.concept.profession.0002...\"],\n    anyProfessionIds: [\"amzn1.imdb.concept.profession.0003...\", \"amzn1.imdb.concept.profession.0004...\"]\n    excludeProfessionIds: [\"amzn1.imdb.concept.profession.0005...\"]\n}\nwill match names that have the professions (\"...0001...\" AND \"...0002...\") AND\n(\"...0003...\" OR \"...0004...\") AND NOT \"...0005...\"",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must have all of these professions",
        "list": true,
        "name": "allProfessionIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must have AT LEAST ONE of these professions",
        "list": true,
        "name": "anyProfessionIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must not have any of these professions\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results will be empty.",
        "list": true,
        "name": "excludeProfessionIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameProfessionSearchConstraint",
    "possibleTypes": []
  },
  "NameQuote": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The quote as a displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": true,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameQuote",
    "possibleTypes": []
  },
  "NameQuoteConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameQuoteEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameQuoteConnection",
    "possibleTypes": []
  },
  "NameQuoteEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameQuote"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameQuoteEdge",
    "possibleTypes": []
  },
  "NameQuoteMatchingSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must contain ALL of these search terms in at least one of its quotes.",
        "list": true,
        "name": "allQuoteTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must contain AT LEAST ONE of these search terms in at least one of its quotes.",
        "list": true,
        "name": "anyQuoteTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameQuoteMatchingSearchConstraint",
    "possibleTypes": []
  },
  "NameRecommendation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation for why we recommend this name, to comply with privacy laws",
        "kind": "",
        "list": false,
        "name": "explanation",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRecommendation",
    "possibleTypes": []
  },
  "NameRecommendationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameRecommendationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRecommendationConnection",
    "possibleTypes": []
  },
  "NameRecommendationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameRecommendation"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRecommendationEdge",
    "possibleTypes": []
  },
  "NameRecommendations": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "names",
        "nullable": true,
        "type": "NameRecommendationConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "refTag",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRecommendations",
    "possibleTypes": []
  },
  "NameRelation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Date of Birth for the related person",
        "kind": "",
        "list": false,
        "name": "birthDate",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "Gender of the related person",
        "kind": "",
        "list": false,
        "name": "genderIdentity",
        "nullable": true,
        "type": "GenderIdentity"
      },
      {
        "args": [],
        "description": "Relation ID, e.g. rs0023922",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the relative of this name.",
        "kind": "",
        "list": false,
        "name": "relationName",
        "nullable": true,
        "type": "RelationName"
      },
      {
        "args": [],
        "description": "Relationship type, e.g. parent",
        "kind": "",
        "list": false,
        "name": "relationshipType",
        "nullable": false,
        "type": "NameRelationType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRelation",
    "possibleTypes": []
  },
  "NameRelationType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRelationType",
    "possibleTypes": []
  },
  "NameRelationsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of NameRelation",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameRelationsEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRelationsConnection",
    "possibleTypes": []
  },
  "NameRelationsEdge": {
    "args": [],
    "description": "Page of NameRelation",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the relationship",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameRelation"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: NameRelation 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRelationsEdge",
    "possibleTypes": []
  },
  "NameRelationsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific relation categories",
        "list": true,
        "name": "excludeRelationshipTypes",
        "nullable": true,
        "type": "RelationshipTypeFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific relation categories",
        "list": true,
        "name": "relationshipTypes",
        "nullable": true,
        "type": "RelationshipTypeFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameRelationsFilter",
    "possibleTypes": []
  },
  "NameRepresentation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The company representing this name, if there is one\n\nEither agency or independentRepresentative will have data but not both",
        "kind": "",
        "list": false,
        "name": "agency",
        "nullable": true,
        "type": "Agency"
      },
      {
        "args": [],
        "description": "The name being represented",
        "kind": "",
        "list": false,
        "name": "client",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "An obfuscated persistent id to uniquely identify this data",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Someone representing this name but not associated with a company.\n\nEither agency or independentRepresentative will have data but not both",
        "kind": "",
        "list": false,
        "name": "independentRepresentative",
        "nullable": true,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The type of relationship this representation has with the name",
        "kind": "",
        "list": false,
        "name": "relationshipType",
        "nullable": false,
        "type": "RepresentationRelationshipType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRepresentation",
    "possibleTypes": []
  },
  "NameRepresentationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameRepresentationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRepresentationConnection",
    "possibleTypes": []
  },
  "NameRepresentationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameRepresentation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameRepresentationEdge",
    "possibleTypes": []
  },
  "NameSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameSearchEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameSearchConnection",
    "possibleTypes": []
  },
  "NameSearchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Name"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameSearchEdge",
    "possibleTypes": []
  },
  "NameSearchIndexing": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A boolean flag that indicates whether IMDb should set the `noIndex` tag on pages for this name.",
        "kind": "",
        "list": false,
        "name": "disableIndexing",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameSearchIndexing",
    "possibleTypes": []
  },
  "NameSpouse": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Attributes that describe the spouse relationship",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "SpouseAttributes"
      },
      {
        "args": [],
        "description": "Indicates if this is the current spouse",
        "kind": "",
        "list": false,
        "name": "current",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Spouse displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNameSpouseProperty"
      },
      {
        "args": [],
        "description": "Details of the spouse of this name.",
        "kind": "",
        "list": false,
        "name": "spouse",
        "nullable": true,
        "type": "SpouseName"
      },
      {
        "args": [],
        "description": "Spouse time range as a formatted string eg '12 January 2020 - present'",
        "kind": "",
        "list": false,
        "name": "timeRange",
        "nullable": true,
        "type": "DisplayableSpouseTimeRange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameSpouse",
    "possibleTypes": []
  },
  "NameText": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameText",
    "possibleTypes": []
  },
  "NameTextSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Matches names based on their name text.\nThere is no fuzzy matching.\nFor example: 'Audrey Hepburn' will be matched by 'Audrey' and 'Hepburn' but not 'Audrey Hep'",
        "list": false,
        "name": "searchTerm",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameTextSearchConstraint",
    "possibleTypes": []
  },
  "NameToTitleAttachment": {
    "args": [],
    "description": "Details about an attachment event, i.e. when a name is attached to a title",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The time (in ISO 8601 format) that the name-to-title attachment was published\n\ne.g. '2020-06-23T15:41:18.243Z'",
        "kind": "",
        "list": false,
        "name": "attachmentTime",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "If the attached name is in the cast of the title, this list contains the\nnames of the characters they are credited as",
        "kind": "",
        "list": true,
        "name": "characterList",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The attached name's credited professions in the title",
        "kind": "",
        "list": true,
        "name": "creditCategories",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [],
        "description": "Unique Id associated with this attachment event",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The name in this name to title attachment",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The title in this name to title attachment",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameToTitleAttachment",
    "possibleTypes": []
  },
  "NameToTitleAttachmentConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameToTitleAttachmentEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of attachments that match the input query",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameToTitleAttachmentConnection",
    "possibleTypes": []
  },
  "NameToTitleAttachmentEdge": {
    "args": [],
    "description": "cursor matches the Id of the last attachment event returned",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameToTitleAttachment"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameToTitleAttachmentEdge",
    "possibleTypes": []
  },
  "NameTrackRecommendationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID of the name track recommendation",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A name track recommendation node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "Position of the node in this context, e.g. NameTrackRecommendationEdge 2 out of 10",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameTrackRecommendationEdge",
    "possibleTypes": []
  },
  "NameTrackRecommendationsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Page of name track recommendations",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameTrackRecommendationEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of name track recommendations",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameTrackRecommendationsConnection",
    "possibleTypes": []
  },
  "NameTrivia": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Date of the Trivia item",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The trivia as a displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": true,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "trivia Voting summary",
        "kind": "",
        "list": false,
        "name": "interestScore",
        "nullable": false,
        "type": "InterestScore"
      },
      {
        "args": [],
        "description": "The trivia text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameTrivia",
    "possibleTypes": []
  },
  "NameTriviaConnection": {
    "args": [],
    "description": "Pagination for Trivia types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Trivia",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NameTriviaEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameTriviaConnection",
    "possibleTypes": []
  },
  "NameTriviaEdge": {
    "args": [],
    "description": "Page of Trivia",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Trivia node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NameTrivia"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Trivia 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameTriviaEdge",
    "possibleTypes": []
  },
  "NameTriviaMatchingSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must contain ALL of these search terms in at least one of its trivia.",
        "list": true,
        "name": "allTriviaTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A name match must contain AT LEAST ONE of these search terms in at least one of its trivia.",
        "list": true,
        "name": "anyTriviaTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NameTriviaMatchingSearchConstraint",
    "possibleTypes": []
  },
  "NameWeight": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "unit",
        "nullable": false,
        "type": "WeightUnit"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Float"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NameWeight",
    "possibleTypes": []
  },
  "NamedActionLink": {
    "args": [],
    "description": "Generic type for an action link which has a unique name, url, and optionally associated label (localized text)",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name for this action link. Each action link in a list will have a unique name assigned.\nThis name will persist, allowing client to identify the action link by its name.",
        "kind": "",
        "list": false,
        "name": "actionName",
        "nullable": false,
        "type": "ActionLinkName"
      },
      {
        "args": [],
        "description": "Optional label (localized text) to associate with URL.\nThe label could be used with a button, text link, or other UI component.",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": true,
        "type": "CallToActionText"
      },
      {
        "args": [],
        "description": "The URL for the action link",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NamedActionLink",
    "possibleTypes": []
  },
  "NearbyCinemasFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter cinemas based on favorite status.\nIf not provided, defaults to return all cinemas.\nSpecifying `favorites` will make the query personalized, so it will result in the query not being cached.",
        "list": false,
        "name": "favorites",
        "nullable": true,
        "type": "FavoriteFilterOption"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter cinemas based on location.",
        "list": false,
        "name": "location",
        "nullable": false,
        "type": "ShowtimesLocation"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NearbyCinemasFilter",
    "possibleTypes": []
  },
  "NegativeFormat": {
    "args": [],
    "description": "A negative format, along with any attributes. For example, we could have 70MM film that was used for the IMAX and IMAX3D\nversions.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Negative format as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationProperty"
      },
      {
        "args": [],
        "description": "The negative format",
        "kind": "",
        "list": false,
        "name": "negativeFormat",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NegativeFormat",
    "possibleTypes": []
  },
  "NegativeFormats": {
    "args": [],
    "description": "Negative formats for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of negative format items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "NegativeFormat"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of negative format items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NegativeFormats",
    "possibleTypes": []
  },
  "News": {
    "args": [],
    "description": "News details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The title text of this news article",
        "kind": "",
        "list": false,
        "name": "articleTitle",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The byline of this news article",
        "kind": "",
        "list": false,
        "name": "byline",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "The date of this news article",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "A direct link to the article on an external news site (if available)",
        "kind": "",
        "list": false,
        "name": "externalUrl",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Unique persistent ID for this news article",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An image associated with this news article",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [],
        "description": "The language of this news article",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Duplicate or very similar news articles are aggregated here",
        "kind": "",
        "list": true,
        "name": "similarNewsItems",
        "nullable": true,
        "type": "News"
      },
      {
        "args": [],
        "description": "Name and link to homepage for the source website of this news article",
        "kind": "",
        "list": false,
        "name": "source",
        "nullable": false,
        "type": "NewsSource"
      },
      {
        "args": [],
        "description": "The lead paragraph of this news article",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "News",
    "possibleTypes": []
  },
  "NewsCategory": {
    "args": [],
    "description": "Categories of news articles.\n\nThis contains both Consumer and Pro categories.\n\nThe newsCategories() query can be used to fetch additional metadata\nfor each enum value and to fetch specifically Consumer or Pro sets of categories.",
    "enumValues": [
      {
        "description": null,
        "name": "ALL_INDUSTRY"
      },
      {
        "description": null,
        "name": "AWARDS_AND_EVENTS"
      },
      {
        "description": null,
        "name": "CELEBRITY"
      },
      {
        "description": null,
        "name": "DEVELOPMENT_AND_PRODUCTION"
      },
      {
        "description": null,
        "name": "INDIE"
      },
      {
        "description": null,
        "name": "INTERVIEWS_PROFILES_AND_THINK_PIECES"
      },
      {
        "description": null,
        "name": "MOVIE"
      },
      {
        "description": null,
        "name": "RELEASES_AND_PREMIERES"
      },
      {
        "description": null,
        "name": "RESULTS"
      },
      {
        "description": null,
        "name": "REVIEWS_AND_RECAPS"
      },
      {
        "description": null,
        "name": "THE_BUSINESS"
      },
      {
        "description": null,
        "name": "TOP"
      },
      {
        "description": null,
        "name": "TOP_INDUSTRY"
      },
      {
        "description": null,
        "name": "TV"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NewsCategory",
    "possibleTypes": []
  },
  "NewsCategoryConstraints": {
    "args": [],
    "description": "Specifies which types of news categories we want to return.\n\ndomain can be used to return only Consumer or only Pro categories.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Specifies which domain to fetch news categories for",
        "list": false,
        "name": "domain",
        "nullable": true,
        "type": "BusinessDomain"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NewsCategoryConstraints",
    "possibleTypes": []
  },
  "NewsCategoryMetadata": {
    "args": [],
    "description": "Additional metadata about NewsCategory enum values",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The NewsCategory enum value that corresponds to this metadata",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "NewsCategory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NewsCategoryMetadata",
    "possibleTypes": []
  },
  "NewsConnection": {
    "args": [],
    "description": "Pagination for news articles which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of news",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NewsEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "NewsPageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "NewsRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NewsConnection",
    "possibleTypes": []
  },
  "NewsEdge": {
    "args": [],
    "description": "Page of news articles.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A news node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "News"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NewsEdge",
    "possibleTypes": []
  },
  "NewsEntity": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "NewsEntity",
    "possibleTypes": [
      "Company",
      "Name",
      "Title"
    ]
  },
  "NewsLink": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NewsLink",
    "possibleTypes": []
  },
  "NewsPageInfo": {
    "args": [],
    "description": "Page info of news articles.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "When paginating forwards, the cursor to continue",
        "kind": "",
        "list": false,
        "name": "endCursor",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hasNextPage",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NewsPageInfo",
    "possibleTypes": []
  },
  "NewsRestriction": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NewsRestriction",
    "possibleTypes": []
  },
  "NewsSource": {
    "args": [],
    "description": "A news source",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Text description of the source, which is only populated if homepage is undefined",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Link to the homepage of the site (if available)",
        "kind": "",
        "list": false,
        "name": "homepage",
        "nullable": true,
        "type": "NewsLink"
      },
      {
        "args": [],
        "description": "The icon associated with this news source",
        "kind": "",
        "list": false,
        "name": "icon",
        "nullable": true,
        "type": "NewsSourceIconImage"
      },
      {
        "args": [],
        "description": "Unique persistent ID for this news source",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Field to indicate that this news source has been verified to be a trusted news source by IMDb",
        "kind": "",
        "list": false,
        "name": "trustedSource",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NewsSource",
    "possibleTypes": []
  },
  "NewsSourceIconImage": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Height of the icon image, in pixels",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "URL of the NewsSource icon image",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Width of the icon image, in pixels",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NewsSourceIconImage",
    "possibleTypes": []
  },
  "NickName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The nickname as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableNickNameProperty"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NickName",
    "possibleTypes": []
  },
  "Nomination": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The award this nomination is associated with\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "award",
        "nullable": true,
        "type": "NominationAward"
      },
      {
        "args": [],
        "description": "Company/Companies, Title(s) and/or name(s) the award is for\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "awardedEntities",
        "nullable": true,
        "type": "NominationAwardedEntities"
      },
      {
        "args": [],
        "description": "The category in which the award was given. Example: Best Motion Picture of the Year.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "AwardCategory"
      },
      {
        "args": [],
        "description": "The event this nomination is associated with\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "event",
        "nullable": true,
        "type": "NominationEvent"
      },
      {
        "args": [],
        "description": "The event edition this nomination associated with\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "eventEdition",
        "nullable": true,
        "type": "NominationEventEdition"
      },
      {
        "args": [],
        "description": "Optional specific episode(s) for which the nomination is associated with\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "forEpisodes",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Optional song title(s) for which the nomination is associated with\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "forSongTitles",
        "nullable": true,
        "type": "DisplayableSongTitle"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Did the awarded entities win this award\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "isWinner",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Additional notes associated with the award.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "notes",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "Optional date and time when the award win was officially announced.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "winAnnouncementDate",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "The ranking of this nomination, when applicable.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "winningRank",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Nomination",
    "possibleTypes": []
  },
  "NominationAward": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Award Id",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AwardNominationCategoriesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AwardNominationCategoriesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Nominations for an award grouped by its category",
        "kind": "",
        "list": false,
        "name": "nominationCategories",
        "nullable": true,
        "type": "NominationsWithCategoryConnection"
      },
      {
        "args": [],
        "description": "Award name",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationAward",
    "possibleTypes": []
  },
  "NominationAwardedEntities": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "NominationAwardedEntities",
    "possibleTypes": [
      "AwardedCompanies",
      "AwardedNames",
      "AwardedTitles"
    ]
  },
  "NominationCategoriesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out given nomination award categories",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for given nomination award categories",
        "list": true,
        "name": "includeCategories",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NominationCategoriesFilter",
    "possibleTypes": []
  },
  "NominationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of award nominations",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NominationEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationConnection",
    "possibleTypes": []
  },
  "NominationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An award nomination node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Nomination"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Nomination 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationEdge",
    "possibleTypes": []
  },
  "NominationEvent": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Other Event names by which this Event is known, default sort order is alphabetically",
        "kind": "",
        "list": true,
        "name": "akas",
        "nullable": false,
        "type": "NominationEventAka"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "A list of all distinct awards across event's editions sorted alphabetically",
        "kind": "",
        "list": true,
        "name": "awards",
        "nullable": false,
        "type": "NominationAward"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NominationEventEditionFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NominationEventEditionFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "A list of all the event's editions sorted by year, followed by\ninstanceWithinYear, with the most recent first (e.g. 2023, 2022 edition 2,\n2022 edition 1, ...)",
        "kind": "",
        "list": true,
        "name": "editions",
        "nullable": false,
        "type": "NominationEventEdition"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The location of the event",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "DisplayableLocation"
      },
      {
        "args": [],
        "description": "Event name",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "NominationEventName"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of trivia items related to the event with potential markdown links for movies/people",
        "kind": "",
        "list": true,
        "name": "trivia",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The urls for the event",
        "kind": "",
        "list": true,
        "name": "urls",
        "nullable": false,
        "type": "EventUrl"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationEvent",
    "possibleTypes": []
  },
  "NominationEventAka": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "End year associated with the event name",
        "kind": "",
        "list": false,
        "name": "endYear",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Name of the event",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "NominationEventName"
      },
      {
        "args": [],
        "description": "Start year associated with the event name",
        "kind": "",
        "list": false,
        "name": "startYear",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationEventAka",
    "possibleTypes": []
  },
  "NominationEventEdition": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NominationEventEditionAwardsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NominationEventEditionAwardsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "A list of awards announced in an event edition e.g. 'Oscar'",
        "kind": "",
        "list": true,
        "name": "awards",
        "nullable": false,
        "type": "NominationAward"
      },
      {
        "args": [],
        "description": "Dates over which this event edition occurred or will occur. Field is null means the date(s) of the event are not known.\nIf event was a 1 day event endDate will be null.",
        "kind": "",
        "list": false,
        "name": "dateRange",
        "nullable": true,
        "type": "DisplayableDateRange"
      },
      {
        "args": [],
        "description": "The event to which this edition is a part of, e.g. Academy Awards",
        "kind": "",
        "list": false,
        "name": "event",
        "nullable": false,
        "type": "NominationEvent"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A number that defines the sequence of editions within a year, starting with 1",
        "kind": "",
        "list": false,
        "name": "instanceWithinYear",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of trivia items related to the event edition with potential markdown links for movies/people",
        "kind": "",
        "list": true,
        "name": "trivia",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The year this edition of the event took place",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationEventEdition",
    "possibleTypes": []
  },
  "NominationEventEditionAwardsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter awards by award id",
        "list": false,
        "name": "awards",
        "nullable": true,
        "type": "AwardsFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NominationEventEditionAwardsFilter",
    "possibleTypes": []
  },
  "NominationEventEditionFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out given instances order within the year. e.g [1, 2]",
        "list": true,
        "name": "excludeInstancesWithinYear",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out given EventEdition years",
        "list": true,
        "name": "excludeYears",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for given instances order within the year. e.g [1, 2]",
        "list": true,
        "name": "includeInstancesWithinYear",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for given EventEdition years",
        "list": true,
        "name": "includeYears",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NominationEventEditionFilter",
    "possibleTypes": []
  },
  "NominationEventName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Type token",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationEventName",
    "possibleTypes": []
  },
  "NominationsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter awards by award id",
        "list": false,
        "name": "awards",
        "nullable": true,
        "type": "AwardsFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter awards by event id",
        "list": false,
        "name": "events",
        "nullable": true,
        "type": "EventsFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter nominations on win status",
        "list": false,
        "name": "wins",
        "nullable": true,
        "type": "WinsFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NominationsFilter",
    "possibleTypes": []
  },
  "NominationsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "NominationsSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "NominationsSort",
    "possibleTypes": []
  },
  "NominationsSortBy": {
    "args": [],
    "description": "Default sort is done by sorting nomination id",
    "enumValues": [
      {
        "description": "Sorts by prestigious awards first, then reverse chronological by year",
        "name": "PRESTIGIOUS"
      },
      {
        "description": "Sorts by wins first, then preserve default nomination order",
        "name": "WINS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "NominationsSortBy",
    "possibleTypes": []
  },
  "NominationsWithCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The category of the nomination e.g. 'Best Picture'. If no category exist for a nomination, category is returns null.",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "AwardCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NominationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NominationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NominationsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "NominationsSort"
          }
        ],
        "description": "Nominations belong to the category",
        "kind": "",
        "list": false,
        "name": "nominations",
        "nullable": true,
        "type": "NominationConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationsWithCategory",
    "possibleTypes": []
  },
  "NominationsWithCategoryConnection": {
    "args": [],
    "description": "Pagination for NominationsWithCategory types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of nominations with category",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "NominationsWithCategoryEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationsWithCategoryConnection",
    "possibleTypes": []
  },
  "NominationsWithCategoryEdge": {
    "args": [],
    "description": "Page of nominations with category",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An NominationsWithCategory node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "NominationsWithCategory"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: NominationsWithCategory 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "NominationsWithCategoryEdge",
    "possibleTypes": []
  },
  "OccupationValue": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "OccupationValue",
    "possibleTypes": []
  },
  "OpeningWeekendBoxOfficeGrossConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of opening weekend box office grosses",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "OpeningWeekendBoxOfficeGrossEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "OpeningWeekendBoxOfficeGrossConnection",
    "possibleTypes": []
  },
  "OpeningWeekendBoxOfficeGrossEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An opening weekend box office gross node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "OpeningWeekendGross"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: opening weekend box office gross 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "OpeningWeekendBoxOfficeGrossEdge",
    "possibleTypes": []
  },
  "OpeningWeekendBoxOfficeGrossFilter": {
    "args": [],
    "description": "Only opening weekend grosses for Box Office areas specified in the filter will be returned.\nIf the filter isn't provided, opening weekend grosses for all available Box Office areas will be returned.\nIf a specified Box Office area doesn't exist or no opening weekend grosses are available for it, nothing will be returned.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "boxOfficeAreaCodes",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "OpeningWeekendBoxOfficeGrossFilter",
    "possibleTypes": []
  },
  "OpeningWeekendGross": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The BoxOfficeAreaType the gross is related to.",
        "kind": "",
        "list": false,
        "name": "boxOfficeAreaType",
        "nullable": false,
        "type": "BoxOfficeAreaType"
      },
      {
        "args": [],
        "description": "The opening weekend gross for the title within the area, between the start and end dates.",
        "kind": "",
        "list": false,
        "name": "gross",
        "nullable": false,
        "type": "BoxOfficeGross"
      },
      {
        "args": [],
        "description": "The theater count for the title within the area, between the start and end dates.",
        "kind": "",
        "list": false,
        "name": "theaterCount",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The last day of the opening weekend for the title within the area.",
        "kind": "",
        "list": false,
        "name": "weekendEndDate",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The first day of the opening weekend for the title within the area.",
        "kind": "",
        "list": false,
        "name": "weekendStartDate",
        "nullable": true,
        "type": "Date"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "OpeningWeekendGross",
    "possibleTypes": []
  },
  "OriginCountrySearchConstraint": {
    "args": [],
    "description": "Country contribution guidelines:\nhttps://help.imdb.com/article/contribution/titles/countries/GTSW4DN8H8LKCXER",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that are at least partially from ALL of these countries\nCountry code in ISO 3166 (IMDbLocaleConfig:region_codes.json)\nExample: To match titles that are at least partially from US and GB: ['US', 'GB']",
        "list": true,
        "name": "allCountries",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that are at least partially from AT LEAST ONE of these countries\nCountry code in ISO 3166 (IMDbLocaleConfig:region_codes.json)\nExample: To match titles that are at least partially from US or GB: ['US', 'GB']",
        "list": true,
        "name": "anyCountries",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that are primarily from AT LEAST ONE of these countries\nCountry code in ISO 3166 (IMDbLocaleConfig:region_codes.json)\nExample: To match titles that are from US or GB: ['US', 'GB']",
        "list": true,
        "name": "anyPrimaryCountries",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude titles that are at least partially from AT LEAST ONE of these countries\nCountry code in ISO 3166 (IMDbLocaleConfig:region_codes.json)\nExample: To match titles that are at least partially not from US or GB: ['US', 'GB']\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeCountries",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude titles that are primarily from ONE of these countries\nCountry code in ISO 3166 (IMDbLocaleConfig:region_codes.json)\nExample: To match titles that are not from US or GB: ['US', 'GB']\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludePrimaryCountries",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "OriginCountrySearchConstraint",
    "possibleTypes": []
  },
  "OutstreamAdParametersApp": {
    "args": [],
    "description": "Input for the outstreamVideoAdApp API used to provide context for and decorate the VAES request.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Parameters representing contextual client data used to form the request URL returned by the outstreamVideoAdApp API.",
        "list": false,
        "name": "adParametersApp",
        "nullable": false,
        "type": "AdParametersApp"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The placement type used in the technical implementation of this video ad - i.e. preroll, postroll, outstream.\nIf this field is used, its value will replace the default value of 'outstream'\nused in the VAES URL returned by the outstreamVideoAdApp API.\nThis field is intended to be used as an override when the client's ad\nimplementation differs from the default 'outstream' type.",
        "list": false,
        "name": "overridePlacementType",
        "nullable": true,
        "type": "VideoPlacementType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "OutstreamAdParametersApp",
    "possibleTypes": []
  },
  "OverrideLiveEventInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Id for award associated with the specified event. Ex: aw0000016 for 'Oscar'",
        "list": false,
        "name": "awardId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Event edition id. Ex: ee0131659 for Oscars 2022",
        "list": false,
        "name": "eventEditionId",
        "nullable": false,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "OverrideLiveEventInput",
    "possibleTypes": []
  },
  "PageInfo": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "When paginating forwards, the cursor to continue",
        "kind": "",
        "list": false,
        "name": "endCursor",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hasNextPage",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hasPreviousPage",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "When paginating backwards, the cursor to continue",
        "kind": "",
        "list": false,
        "name": "startCursor",
        "nullable": true,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PageInfo",
    "possibleTypes": []
  },
  "PaginatedTitles": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "paginationToken",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "titles",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PaginatedTitles",
    "possibleTypes": []
  },
  "PaginatedVideos": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The pagination token. Use this value as the token parameter on the\nnext call to get the next page of results",
        "kind": "",
        "list": false,
        "name": "paginationToken",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "List of Video Entities returned by a query",
        "kind": "",
        "list": true,
        "name": "videos",
        "nullable": false,
        "type": "Video"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PaginatedVideos",
    "possibleTypes": []
  },
  "ParentsGuide": {
    "args": [],
    "description": "Parents guides for a given title",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ParentsGuideCategoryFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ParentsGuideCategoryFilter"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ParentsGuideCategorySummary"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ParentsGuideFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ParentsGuideFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "guideItems",
        "nullable": true,
        "type": "ParentsGuideConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ParentsGuide",
    "possibleTypes": []
  },
  "ParentsGuideCategory": {
    "args": [],
    "description": "Parents guide category details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Parents guide category ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is written in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayable text type of the parents guide category, e.g. 'Violence & Gore'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ParentsGuideCategory",
    "possibleTypes": []
  },
  "ParentsGuideCategoryFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ParentsGuideCategoryFilter",
    "possibleTypes": []
  },
  "ParentsGuideCategorySummary": {
    "args": [],
    "description": "Parents guide severity summary",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Category for the guide, e.g. 'Violence & Gore'",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "ParentsGuideCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Parents guides for a given category",
        "kind": "",
        "list": false,
        "name": "guideItems",
        "nullable": true,
        "type": "ParentsGuideConnection"
      },
      {
        "args": [],
        "description": "Displayable severity of this category",
        "kind": "",
        "list": false,
        "name": "severity",
        "nullable": true,
        "type": "SeverityLevel"
      },
      {
        "args": [],
        "description": "A breakdown of the severity levels for this category",
        "kind": "",
        "list": true,
        "name": "severityBreakdown",
        "nullable": true,
        "type": "SeverityLevel"
      },
      {
        "args": [],
        "description": "Total number of users who voted on the severity levels in this category",
        "kind": "",
        "list": false,
        "name": "totalSeverityVotes",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ParentsGuideCategorySummary",
    "possibleTypes": []
  },
  "ParentsGuideConnection": {
    "args": [],
    "description": "Pagination for parents guide items",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of parents guides",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ParentsGuideEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ParentsGuideConnection",
    "possibleTypes": []
  },
  "ParentsGuideEdge": {
    "args": [],
    "description": "Page of parents guide items",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A parents guide item",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ParentsGuideItem"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Parents Guide 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ParentsGuideEdge",
    "possibleTypes": []
  },
  "ParentsGuideFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ParentsGuideFilter",
    "possibleTypes": []
  },
  "ParentsGuideItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The category of parents guide, e.g. 'violenceGuide'\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "ParentsGuideCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the parental guide correction link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "correctionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Is this guide a spoiler\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "isSpoiler",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the parental guide reporting link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "reportingLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "The parents guide text, including markdown if present\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The title related to the parental guide\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ParentsGuideItem",
    "possibleTypes": []
  },
  "PersonalDetailsOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Current country or region of user's residence. ID in ISO 3166 format.",
        "kind": "",
        "list": false,
        "name": "countryOfResidence",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "User's date of birth in ISO-8601 format (YYYY-MM-DD)",
        "kind": "",
        "list": false,
        "name": "dateOfBirth",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "Currently set gender of user.",
        "kind": "",
        "list": false,
        "name": "gender",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PersonalDetailsOutput",
    "possibleTypes": []
  },
  "PersonalEmployment": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "branch",
        "nullable": true,
        "type": "CompanyBranch"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "employeeContact",
        "nullable": true,
        "type": "CompanyContactDetails"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "jobTitle",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "occupation",
        "nullable": true,
        "type": "OccupationValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PersonalEmployment",
    "possibleTypes": []
  },
  "PersonalizedSuggestedVideosConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "PersonalizedSuggestedVideosEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PersonalizedSuggestedVideosConnection",
    "possibleTypes": []
  },
  "PersonalizedSuggestedVideosEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Video"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PersonalizedSuggestedVideosEdge",
    "possibleTypes": []
  },
  "PlacementContext": {
    "args": [],
    "description": "Provides context for the location of the list widget on client",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The page type the query was made from e.g. home, title",
        "list": false,
        "name": "pageType",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PlacementContext",
    "possibleTypes": []
  },
  "PlaidOverride": {
    "args": [],
    "description": "Key-value pair for PLAID overrides, formatted as a PLAID CSS property and its value\n(e.g. { key: \"baseAltShade1\", value: \"#0f0f0f\" })",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The key for the PLAID override",
        "kind": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The value for the PLAID override",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PlaidOverride",
    "possibleTypes": []
  },
  "PlatformId": {
    "args": [],
    "description": "The client platforms that watch options are available on",
    "enumValues": [
      {
        "description": null,
        "name": "ANDROID"
      },
      {
        "description": null,
        "name": "ANDROID_FIRE"
      },
      {
        "description": null,
        "name": "FIRE_TV_DETAIL"
      },
      {
        "description": null,
        "name": "IOS"
      },
      {
        "description": null,
        "name": "MOBILE_WEB"
      },
      {
        "description": null,
        "name": "WEB"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PlatformId",
    "possibleTypes": []
  },
  "PlatformLinkFormatId": {
    "args": [],
    "description": "Link format available for watch options",
    "enumValues": [
      {
        "description": null,
        "name": "ANDROID"
      },
      {
        "description": null,
        "name": "ANDROID_FIRE"
      },
      {
        "description": null,
        "name": "FIRE_TV_DETAIL"
      },
      {
        "description": null,
        "name": "IOS"
      },
      {
        "description": null,
        "name": "MDOT"
      },
      {
        "description": null,
        "name": "WEB"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PlatformLinkFormatId",
    "possibleTypes": []
  },
  "PlaybackURL": {
    "args": [],
    "description": "Represents a single URL that can be used for video playback. Contains the mime type and\ndefinition of content behind the URL.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A description of playback experience suitable for displaying to the customer to\nset expectations or be leveraged in via in player URL selection.\nExamples include short qualitative descriptions like 780p, SD, or Ultra HD",
        "kind": "",
        "list": false,
        "name": "displayName",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "Metric dimensions about the playback URL. Maximum of 5 metric dimensions.",
        "kind": "",
        "list": true,
        "name": "metricDimensions",
        "nullable": true,
        "type": "MetricDimension"
      },
      {
        "args": [],
        "description": "The URL that can be given to the player to view this videos content. It may or may\nnot be valid for a limited time and thus is intended for immediate use by the caller.",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Describes the resolution of the content behind the URL.",
        "kind": "",
        "list": false,
        "name": "videoDefinition",
        "nullable": false,
        "type": "VideoDefinition"
      },
      {
        "args": [],
        "description": "Mime type in the enum format that describes the content behind the URL. Suitable for\nsupplying to the browser or video player.",
        "kind": "",
        "list": false,
        "name": "videoMimeType",
        "nullable": false,
        "type": "VideoMimeType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PlaybackURL",
    "possibleTypes": []
  },
  "Plot": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name of the plot's author. This field is not required as it can be null for an anonymous author.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "author",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the plot correction link or null if a non-english plot or a plot synopsis.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "correctionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Whether this plot contains spoilers\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "isSpoiler",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The language of the plot text\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The plot text\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "plotText",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The type of the plot\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "plotType",
        "nullable": true,
        "type": "PlotType"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the plot reporting link or null if a non-english plot or a plot synopsis.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "reportingLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "PlotRestriction"
      },
      {
        "args": [],
        "description": "Title related to the plot\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Plot",
    "possibleTypes": []
  },
  "PlotConnection": {
    "args": [],
    "description": "Pagination for plot types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of plots",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "PlotEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "PlotRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PlotConnection",
    "possibleTypes": []
  },
  "PlotEdge": {
    "args": [],
    "description": "Page of plots",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A plot node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Plot"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Plot 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PlotEdge",
    "possibleTypes": []
  },
  "PlotMatchingSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of plot summary/outline 'Mushroom-Kingdom' OR 'Mysterious', PLUS\nthe title must contain 'bloodthirsty', PLUS the title had the plot written by 'huggo' OR 'guy',\nspecify anyPlotTextTerms: ['mushroom-kingdom', 'mysterious'] plus\nallPlotTextTerms: ['bloodthirsty'] plus plotAuthor: ['huggo', 'guy']",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these search terms",
        "list": true,
        "name": "allPlotTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain a plot written by AT LEAST ONE of these authors",
        "list": true,
        "name": "anyPlotAuthors",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these search terms",
        "list": true,
        "name": "anyPlotTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PlotMatchingSearchConstraint",
    "possibleTypes": []
  },
  "PlotRestriction": {
    "args": [],
    "description": "Information about restrictions applied to plot",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PlotRestriction",
    "possibleTypes": []
  },
  "PlotType": {
    "args": [],
    "description": "Our legacy plot types.\nHere to support existing features that requires knowing this to power business logic.",
    "enumValues": [
      {
        "description": null,
        "name": "OUTLINE"
      },
      {
        "description": null,
        "name": "SUMMARY"
      },
      {
        "description": null,
        "name": "SYNOPSIS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PlotType",
    "possibleTypes": []
  },
  "Poll": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "{by: ANSWER_INDEX, order: ASC}",
            "description": "",
            "kind": "PollAnswerSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "PollAnswerSort"
          }
        ],
        "description": "Answers for the poll, by default it returns the list in a consistent order defined by the author.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "answers",
        "nullable": false,
        "type": "PollAnswersConnection"
      },
      {
        "args": [],
        "description": "Author of this poll.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "author",
        "nullable": false,
        "type": "UserProfile"
      },
      {
        "args": [],
        "description": "The date when the poll was created.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "createDate",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The id of the list that the poll is created from.\nRequired for legacy pollId to listId redirection.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "createdFromListId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Vote from the current logged in customer (if x-imdb-customer-id header is present).\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "currentCustomerVote",
        "nullable": true,
        "type": "PollVote"
      },
      {
        "args": [],
        "description": "Description of the poll.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Whether the poll is closed for voting.\nClosed polls and its results can be viewed but not voted on.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "isClosed",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Primary image for poll, nullable response\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "PollPrimaryImage"
      },
      {
        "args": [],
        "description": "Poll question, E.g., Favorite 'TITLE' Character.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "question",
        "nullable": false,
        "type": "PollQuestion"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns most recent votes on this poll, from latest to earliest.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "recentVotes",
        "nullable": true,
        "type": "PollVoteConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns the list of related polls to this poll in random order.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "relatedPolls",
        "nullable": true,
        "type": "PollsConnection"
      },
      {
        "args": [],
        "description": "Total vote count on the poll across all answers.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "totalVotes",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Entity Type of the poll answer item (Title/Name/Image).\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "PollAnswerItemType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Poll",
    "possibleTypes": []
  },
  "PollAdminAction": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Admin created a new poll from a list.",
        "name": "CREATE"
      },
      {
        "description": "Admin synced an existing poll with the list.",
        "name": "SYNC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PollAdminAction",
    "possibleTypes": []
  },
  "PollAdminActivity": {
    "args": [],
    "description": "Entity type to represent a poll admin activity on the poll.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The actual action made on the poll (create/sync).",
        "kind": "",
        "list": false,
        "name": "action",
        "nullable": false,
        "type": "PollAdminAction"
      },
      {
        "args": [],
        "description": "Time when the action was made on the poll.",
        "kind": "",
        "list": false,
        "name": "actionTime",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Admin User who made the action on the poll.",
        "kind": "",
        "list": false,
        "name": "admin",
        "nullable": false,
        "type": "UserProfile"
      },
      {
        "args": [],
        "description": "The poll on which the action was made.",
        "kind": "",
        "list": false,
        "name": "poll",
        "nullable": false,
        "type": "Poll"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollAdminActivity",
    "possibleTypes": []
  },
  "PollAdminActivityConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "PollAdminActivityEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollAdminActivityConnection",
    "possibleTypes": []
  },
  "PollAdminActivityEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "PollAdminActivity"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollAdminActivityEdge",
    "possibleTypes": []
  },
  "PollAnswer": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Integer index of this answer in the poll. Defined by the poll author.\nAnswer indices are not subject to ever change.",
        "kind": "",
        "list": false,
        "name": "answerIndex",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Optional description of the answer.",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "item",
        "nullable": false,
        "type": "AnswerItem"
      },
      {
        "args": [],
        "description": "Percentage of total votes on this answer.",
        "kind": "",
        "list": false,
        "name": "votePercentage",
        "nullable": false,
        "type": "Float"
      },
      {
        "args": [],
        "description": "Total number of votes for this answer.",
        "kind": "",
        "list": false,
        "name": "votes",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollAnswer",
    "possibleTypes": []
  },
  "PollAnswerEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "PollAnswer"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollAnswerEdge",
    "possibleTypes": []
  },
  "PollAnswerItemType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "IMAGE"
      },
      {
        "description": null,
        "name": "NAME"
      },
      {
        "description": null,
        "name": "TITLE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PollAnswerItemType",
    "possibleTypes": []
  },
  "PollAnswerSort": {
    "args": [],
    "description": "Sort input for poll answers",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "ANSWER_INDEX",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "PollAnswerSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PollAnswerSort",
    "possibleTypes": []
  },
  "PollAnswerSortBy": {
    "args": [],
    "description": "Enum for poll answer sort options",
    "enumValues": [
      {
        "description": "Sort answers by author defined index value.\nASC: From the least (1) to the greatest number.",
        "name": "ANSWER_INDEX"
      },
      {
        "description": "Sort answers based on their vote count.\nDESC: From greatest number to the least number. For same vote count, least ANSWER_INDEX first.",
        "name": "VOTE_COUNT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PollAnswerSortBy",
    "possibleTypes": []
  },
  "PollAnswersConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "PollAnswerEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollAnswersConnection",
    "possibleTypes": []
  },
  "PollEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Poll"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollEdge",
    "possibleTypes": []
  },
  "PollFilter": {
    "args": [],
    "description": "Poll filter options.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "False by default, if true, closed polls will not be returned.",
        "list": false,
        "name": "excludeClosed",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "False by default, if true, polls voted by the logged in customer will not be returned. (Ignored if x-imdb-customer-id header is not present.)",
        "list": false,
        "name": "excludeVoted",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PollFilter",
    "possibleTypes": []
  },
  "PollPrimaryImage": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": false,
        "type": "Image"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollPrimaryImage",
    "possibleTypes": []
  },
  "PollQuestion": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "originalText",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollQuestion",
    "possibleTypes": []
  },
  "PollSort": {
    "args": [],
    "description": "Sort input for polls",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "CREATE_TIME",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "PollSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PollSort",
    "possibleTypes": []
  },
  "PollSortBy": {
    "args": [],
    "description": "Enum for poll sort options",
    "enumValues": [
      {
        "description": "Sort polls based on their create time.\nDESC: From latest to earliest.",
        "name": "CREATE_TIME"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PollSortBy",
    "possibleTypes": []
  },
  "PollVote": {
    "args": [],
    "description": "Entity type to represent a vote on the poll.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The answer item of vote.",
        "kind": "",
        "list": false,
        "name": "answer",
        "nullable": false,
        "type": "AnswerItem"
      },
      {
        "args": [],
        "description": "Integer index of this answer in the poll.",
        "kind": "",
        "list": false,
        "name": "answerIndex",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The poll on which the vote was made.",
        "kind": "",
        "list": false,
        "name": "poll",
        "nullable": false,
        "type": "Poll"
      },
      {
        "args": [],
        "description": "User who voted on the poll.",
        "kind": "",
        "list": false,
        "name": "user",
        "nullable": false,
        "type": "UserProfile"
      },
      {
        "args": [],
        "description": "Time when the vote was made on the poll.",
        "kind": "",
        "list": false,
        "name": "voteTime",
        "nullable": false,
        "type": "DateTime"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollVote",
    "possibleTypes": []
  },
  "PollVoteConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "PollVoteEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollVoteConnection",
    "possibleTypes": []
  },
  "PollVoteEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "PollVote"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollVoteEdge",
    "possibleTypes": []
  },
  "PollsConnection": {
    "args": [],
    "description": "Total will vend total polls returned instead of the absolute total number of polls.\nPageInfo fields are accurate and will provide information on subsequent pagination requests.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "PollEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PollsConnection",
    "possibleTypes": []
  },
  "PopularTitlesQueryFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out current user's ratings",
        "list": false,
        "name": "filterOutUserRatings",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Inclusive date range to filter on",
        "list": false,
        "name": "releaseDateRange",
        "nullable": true,
        "type": "DateRange"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PopularTitlesQueryFilter",
    "possibleTypes": []
  },
  "PostalCodeLocation": {
    "args": [],
    "description": "The location of the client by postal code. The country field is an ISO 3166-1 alpha-2 country code (ex. US or GB).\nThe postalCode field is alpha numeric (ex. 98109 or D-11179).",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "country",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "postalCode",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PostalCodeLocation",
    "possibleTypes": []
  },
  "PredefinedListInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The Class Id associated with the predefined list.\nFor example: classId 'CHECK_INS', or classId 'WATCH_LIST'",
        "list": false,
        "name": "classId",
        "nullable": false,
        "type": "ListClassId"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PredefinedListInput",
    "possibleTypes": []
  },
  "PrestigiousAwardSummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "awardNomination",
        "nullable": false,
        "type": "AwardNomination"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "nominations",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "wins",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrestigiousAwardSummary",
    "possibleTypes": []
  },
  "PrimaryProfession": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "profession",
        "nullable": true,
        "type": "Profession"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrimaryProfession",
    "possibleTypes": []
  },
  "PrimaryWatchOption": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Number provided when there are multiple watch options",
        "kind": "",
        "list": false,
        "name": "additionalWatchOptionsCount",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "watchOption",
        "nullable": false,
        "type": "WatchOption"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrimaryWatchOption",
    "possibleTypes": []
  },
  "PrincipalCreditsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A list of job category ids. User can input 'cast' to filter for 'actor', 'actress' or 'self'",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PrincipalCreditsFilter",
    "possibleTypes": []
  },
  "PrincipalCreditsForCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Category (e.g. 'Producer' or 'Actor')",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "credits",
        "nullable": false,
        "type": "Credit"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the category",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of (principal and non-principal) credits in this category including uncredited credits",
        "kind": "",
        "list": false,
        "name": "totalCredits",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrincipalCreditsForCategory",
    "possibleTypes": []
  },
  "PrincipalCreditsForGrouping": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Returns credits within this grouping.\n\nThe API is optimized for retrieving principal credits with max-limit 30 (default 10 credits per grouping).\nFor complete credit lists, please use the title.creditGroupings API.\n\nHandles both TV series and standard credits with specialized logic. For episode based titles like \nTV series, podcast etc. episode credits are consolidated to series level while preserving episode counts\nand consistent role details. Multiple character appearances are unified into single\ncredit entries, with characters ordered by frequency and first appearance. Includes\ngap detection for optimal credit sequence display.\n\nSee TitleCreditsV2Sort for how credits are ordered.",
        "kind": "",
        "list": true,
        "name": "credits",
        "nullable": false,
        "type": "CreditV2"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "GroupingTextInput",
            "list": false,
            "name": "groupingTextInput",
            "nullable": true,
            "type": "GroupingTextInput"
          }
        ],
        "description": "Credit Grouping details.\nCredit groupings are ordered according to a predefined sequence.\nGroupings not in the predefined list are sorted after all listed groupings.",
        "kind": "",
        "list": false,
        "name": "grouping",
        "nullable": false,
        "type": "CreditGrouping"
      },
      {
        "args": [],
        "description": "Restriction related information if exists for the grouping",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "Total number of (principal and non-principal) credits in this grouping",
        "kind": "",
        "list": false,
        "name": "totalCredits",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrincipalCreditsForGrouping",
    "possibleTypes": []
  },
  "PrincipalCreditsV2Filter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Whether to include all credits, only credited, or only uncredited.\nDefault is to include all.",
        "list": false,
        "name": "credited",
        "nullable": true,
        "type": "CreditedOrUncreditedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Should the response include Appearances (credits with CAST_TRAIT or SELF_TRAIT trait). Default is to include them (true).",
        "list": false,
        "name": "includeAppearances",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Denotes what kind of principal credits to fetch. Supported modes are:\n\nTOP_CAST: Only returns on-screen appearances (credits with CAST_TRAIT trait or SELF_TRAIT trait in a single grouping).\n\nDEFAULT: Provide Directors, Writers (includes Head writers within writer\ngrouping) and Appearances for all title types, except TV where we provide\nCreators and Appearances.\n\nEXTENDED: Provide an extended set of credit categories beyond the DEFAULT mode\nlike showrunner, cinematographer etc. Head writers are vended in their own\ngrouping seprate from writers, removing those credits from the writers grouping.\n\nNARROWED: Provide up to two categories from DEFAULT; suitable for smaller display surfaces.",
        "list": false,
        "name": "mode",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PrincipalCreditsV2Filter",
    "possibleTypes": []
  },
  "PrintedFormat": {
    "args": [],
    "description": "A printed format, along with any attributes. For example, the BluRay version is 1080p.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Printed format as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationProperty"
      },
      {
        "args": [],
        "description": "The printed format",
        "kind": "",
        "list": false,
        "name": "printedFormat",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrintedFormat",
    "possibleTypes": []
  },
  "PrintedFormats": {
    "args": [],
    "description": "Printed formats for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of printed format items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "PrintedFormat"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of printed format items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrintedFormats",
    "possibleTypes": []
  },
  "PrivacyDirectives": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Encoded consent token using amazon vendor list.",
        "kind": "",
        "list": false,
        "name": "avlTcfString",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Encoded token for data sharing and cross-use.",
        "kind": "",
        "list": false,
        "name": "crossUseString",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "base64 encoded json representation of the privacy directives\ne.g. eyJkZWNpc2lvbiI6ICJBQ0NFUFRfQUxMIiwicHVycG9zZXMiOiBbMSwgMiwgM10sInZlbmRvcnMiOiBbMywgNSwgN119\n     Decoded: {\"gvlTcfString\":\"ABCD\",\"avlTcfString\":\"EFGH\",etc}",
        "kind": "",
        "list": false,
        "name": "directivesCookie",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The time after which the privacy directives need to be refreshed.",
        "kind": "",
        "list": false,
        "name": "expirationDate",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Encoded IAB TCFv2 (Transparency and Consent Framework) token. Uses IAB global vendor list.",
        "kind": "",
        "list": false,
        "name": "gvlTcfString",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Granular purpose-level directives from customized privacy preferences\nIf null, do not suppress any purposes",
        "kind": "",
        "list": true,
        "name": "purposes",
        "nullable": true,
        "type": "GranularDirective"
      },
      {
        "args": [],
        "description": "Granular vendor-level directives from customized privacy preferences\nIf null, do not suppress any vendors",
        "kind": "",
        "list": true,
        "name": "vendors",
        "nullable": true,
        "type": "GranularDirective"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrivacyDirectives",
    "possibleTypes": []
  },
  "PrivacyDirectivesOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Contains the privacy directives that must be enforced for the user\nMay be empty, in which case there are no privacy directives to enforce.\nMay also return null if privacy enforcement is not launched",
        "kind": "",
        "list": false,
        "name": "directives",
        "nullable": true,
        "type": "PrivacyDirectives"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrivacyDirectivesOutput",
    "possibleTypes": []
  },
  "PrivacyPrompt": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Localized text for the accept button. Button sets PrivacyPromptAction in `respondToPrivacyPrompt` mutation",
        "kind": "",
        "list": false,
        "name": "acceptButtonLabel",
        "nullable": false,
        "type": "PrivacyPromptText"
      },
      {
        "args": [],
        "description": "Localized text for the customize button. If is null do not display button",
        "kind": "",
        "list": false,
        "name": "customizeButtonLabel",
        "nullable": true,
        "type": "PrivacyPromptText"
      },
      {
        "args": [],
        "description": "A url from which the user can customize their associated privacy preferences.",
        "kind": "",
        "list": false,
        "name": "customizeUrl",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Unique identifier for the privacy prompt and its associated terms",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Gives the localized markdown for this privacy prompt.",
        "kind": "",
        "list": false,
        "name": "promptMarkdown",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Localized text for the reject button. Button sets PrivacyPromptAction in `respondToPrivacyPrompt` mutation",
        "kind": "",
        "list": false,
        "name": "rejectButtonLabel",
        "nullable": false,
        "type": "PrivacyPromptText"
      },
      {
        "args": [],
        "description": "Whether or not the prompt should be shown on page load.",
        "kind": "",
        "list": false,
        "name": "showPromptOnPageLoad",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrivacyPrompt",
    "possibleTypes": []
  },
  "PrivacyPromptInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The type of prompt we want to display",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "PrivacyPromptType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PrivacyPromptInput",
    "possibleTypes": []
  },
  "PrivacyPromptOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "This is the time at which we should\nre-evaluate whether or not we should prompt the user\nClients should consider this response to be stale\nafter this time as an upper limit.",
        "kind": "",
        "list": false,
        "name": "expirationDate",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The consent requirement or empty if the requested consent type is not required\nfor the given user",
        "kind": "",
        "list": false,
        "name": "privacyPrompt",
        "nullable": true,
        "type": "PrivacyPrompt"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrivacyPromptOutput",
    "possibleTypes": []
  },
  "PrivacyPromptText": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PrivacyPromptText",
    "possibleTypes": []
  },
  "PrivacyPromptType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "The primary consent prompt experience",
        "name": "CONSENT_PRIMARY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PrivacyPromptType",
    "possibleTypes": []
  },
  "ProStatus": {
    "args": [],
    "description": "ProStatus: contains related pro subscription information.\n\nNote: the Pro subscription status is published via Pro subscription service,\nand may be out of sync with the customer's actual subscription",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hasSubscription",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProStatus",
    "possibleTypes": []
  },
  "Process": {
    "args": [],
    "description": "A process used for the film, along with any attributes. For example, CinemaScope may have been used for the IMAX and\nIMAX3D versions.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Process as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationProperty"
      },
      {
        "args": [],
        "description": "The process",
        "kind": "",
        "list": false,
        "name": "process",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Process",
    "possibleTypes": []
  },
  "Processes": {
    "args": [],
    "description": "Processes for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of process items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "Process"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of process items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Processes",
    "possibleTypes": []
  },
  "ProductionAnnouncement": {
    "args": [],
    "description": "Official announcements related to a title",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "comment",
        "nullable": true,
        "type": "ProductionAnnouncementComment"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": false,
        "type": "Date"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionAnnouncement",
    "possibleTypes": []
  },
  "ProductionAnnouncementComment": {
    "args": [],
    "description": "Additional information relating to a title's announcement (e.g. a press release link)",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionAnnouncementComment",
    "possibleTypes": []
  },
  "ProductionBudget": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "budget",
        "nullable": false,
        "type": "Money"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionBudget",
    "possibleTypes": []
  },
  "ProductionDate": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Additional attributes (e.g. 'live broadcast')",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Production end date",
        "kind": "",
        "list": false,
        "name": "endDate",
        "nullable": true,
        "type": "DisplayableDate"
      },
      {
        "args": [],
        "description": "Production start date",
        "kind": "",
        "list": false,
        "name": "startDate",
        "nullable": true,
        "type": "DisplayableDate"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionDate",
    "possibleTypes": []
  },
  "ProductionDatesConnection": {
    "args": [],
    "description": "Pagination for ProductionDates types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of ProductionDates",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ProductionDatesEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionDatesConnection",
    "possibleTypes": []
  },
  "ProductionDatesEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A ProductionDate node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ProductionDate"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: ProductionDates 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionDatesEdge",
    "possibleTypes": []
  },
  "ProductionStage": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Production stage text, e.g. 'In Development', 'Pre-Production', 'Released', etc.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionStage",
    "possibleTypes": []
  },
  "ProductionStageFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ABANDONED"
      },
      {
        "description": null,
        "name": "COMPLETED"
      },
      {
        "description": null,
        "name": "IN_DEVELOPMENT"
      },
      {
        "description": null,
        "name": "IN_PRODUCTION"
      },
      {
        "description": null,
        "name": "POST_PRODUCTION"
      },
      {
        "description": null,
        "name": "PRE_PRODUCTION"
      },
      {
        "description": null,
        "name": "RELEASED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ProductionStageFilter",
    "possibleTypes": []
  },
  "ProductionStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Production status text, e.g. 'Filming', 'Development Unknown', 'Abandoned', etc.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionStatus",
    "possibleTypes": []
  },
  "ProductionStatusDetails": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "announcements",
        "nullable": true,
        "type": "ProductionAnnouncement"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "currentProductionStage",
        "nullable": false,
        "type": "ProductionStage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "productionStatusHistory",
        "nullable": true,
        "type": "ProductionStatusHistory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "ProductionStatusHistoryRestriction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionStatusDetails",
    "possibleTypes": []
  },
  "ProductionStatusHistory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An optional user-displayable string providing additional information or\ncontext about the status (e.g., 'According to a June casting call, filming\nwill commence in November 2006.')",
        "kind": "",
        "list": false,
        "name": "comment",
        "nullable": true,
        "type": "ProductionStatusHistoryComment"
      },
      {
        "args": [],
        "description": "The date when the production status was updated",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "Production stage corresponding to the status",
        "kind": "",
        "list": false,
        "name": "stage",
        "nullable": false,
        "type": "ProductionStage"
      },
      {
        "args": [],
        "description": "Production status at a given point in time (excludes 'announced' statuses)",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ProductionStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionStatusHistory",
    "possibleTypes": []
  },
  "ProductionStatusHistoryComment": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque unique identifier for the displayable comment",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The comment display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionStatusHistoryComment",
    "possibleTypes": []
  },
  "ProductionStatusHistoryRestriction": {
    "args": [],
    "description": "Information about restrictions applied to production status",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProductionStatusHistoryRestriction",
    "possibleTypes": []
  },
  "Profession": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The primary profession",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Profession",
    "possibleTypes": []
  },
  "ProfessionCategory": {
    "args": [],
    "description": "Each NameProfession belongs to a ProfessionCategory.\nFor example, the Makeup Artist profession belongs to the \u201cMakeup Department\u201d ProfessionCategory.\n\nAll fields are marked as nullable in case of invalid graphlet cross-link - in practice these should never be null.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The profession category ID e.g. amzn1.imdb.professionCategory.1.2.3\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the credit category mapped to profession category\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "linkedCreditCategory",
        "nullable": true,
        "type": "CreditCategory"
      },
      {
        "args": [],
        "description": "The order to display this profession category when displaying a list of profession categories\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "listOrder",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Details of the Profession Category\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "DisplayableProfessionCategory"
      },
      {
        "args": [],
        "description": "The unordered set of traits associated with this profession category.\nTraits are intended to be used as functional categorization markers for applying business logic.\n\nCurrent possible values:\n- `WORK_TYPE_CREDIT_TRAIT`. Profession categories that are typically credited on titles.\n- `WORK_TYPE_EMPLOYMENT_TRAIT`. Profession categories that are linked to employment roles (e.g. Executives).\n- `WORK_TYPE_REPRESENTATION_TRAIT`. Profession categories where the employed name represents clients (e.g. Talent Agents).\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "traits",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProfessionCategory",
    "possibleTypes": []
  },
  "ProfessionCount": {
    "args": [],
    "description": "Maps a number to a profession",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "profession",
        "nullable": false,
        "type": "NameProfession"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "totalCount",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProfessionCount",
    "possibleTypes": []
  },
  "ProfessionCountsSummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Display text associated with the map of profession counts\ne.g. \"2 talent agents and 1 producer.\"",
        "kind": "",
        "list": false,
        "name": "displayableCounts",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "A list of professions mapped to the number of people (of that profession)\nthat have viewed the  page",
        "kind": "",
        "list": true,
        "name": "professionCounts",
        "nullable": false,
        "type": "ProfessionCount"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ProfessionCountsSummary",
    "possibleTypes": []
  },
  "ProfessionSearchOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Indicates whether this profession is user selectable.\nBy default, non-user selectable professions will be included in the results.",
        "list": false,
        "name": "isCustomerSelectable",
        "nullable": true,
        "type": "Boolean"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ProfessionSearchOptions",
    "possibleTypes": []
  },
  "ProfessionsFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "EXCLUDE_PRIMARY_PROFESSIONS"
      },
      {
        "description": null,
        "name": "PRIMARY_PROFESSIONS_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ProfessionsFilter",
    "possibleTypes": []
  },
  "PromotedVideoAd": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Ad feedback URL to be linked in the sponsored label of the ad",
        "kind": "",
        "list": false,
        "name": "adFeedbackUrl",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "The video id (viconst) associated with the Promoted Video Ad",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Third Party trackers as defined by the advertising customer",
        "kind": "",
        "list": false,
        "name": "thirdPartyTrackers",
        "nullable": false,
        "type": "ThirdPartyTrackers"
      },
      {
        "args": [],
        "description": "The video object associated with the Promoted Video Ad\nThrows RESOURCE_NOT_FOUND if the associated video is not available",
        "kind": "",
        "list": false,
        "name": "video",
        "nullable": false,
        "type": "Video"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PromotedVideoAd",
    "possibleTypes": []
  },
  "PromotedVideoAdParameters": {
    "args": [],
    "description": "Required and optional parameters to request a Promoted Video Ad from AAX with context from the client",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional CreativeId if an ad is being forced by a Freedonia override",
        "list": false,
        "name": "adOverrideCreativeId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Required and optional parameters used to form the Amazon Ad Exchange request from the context of the app client\nThrows GRAPHQL_VALIDATION_FAILED if adParametersApp is not available for Mobile App requests",
        "list": false,
        "name": "adParametersApp",
        "nullable": true,
        "type": "AdParametersApp"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PromotedVideoAdParameters",
    "possibleTypes": []
  },
  "PromptType": {
    "args": [],
    "description": "Enum representing prompt types",
    "enumValues": [
      {
        "description": "Ratings prompt on title main page",
        "name": "RATINGS_TITLE_MAIN"
      },
      {
        "description": "Ratings prompt on title trivia sub-page",
        "name": "RATINGS_TITLE_TRIVIA"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PromptType",
    "possibleTypes": []
  },
  "PublicationStatus": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "NOT_PUBLISHED"
      },
      {
        "description": null,
        "name": "PUBLISHED"
      },
      {
        "description": null,
        "name": "REDIRECTED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "PublicationStatus",
    "possibleTypes": []
  },
  "PublicityArticle": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "authors",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The publicity listing as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayablePublicityListingProperty"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "publication",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "reference",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "region",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "PublicityListingTitleText"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityArticle",
    "possibleTypes": []
  },
  "PublicityCategoryWithListings": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "publicityListings",
        "nullable": true,
        "type": "PublicityListingConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityCategoryWithListings",
    "possibleTypes": []
  },
  "PublicityInterview": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "authors",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The publicity listing as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayablePublicityListingProperty"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "publication",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "reference",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "region",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "PublicityListingTitleText"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityInterview",
    "possibleTypes": []
  },
  "PublicityListingCategory": {
    "args": [],
    "description": "A category of publicity listings describing the nature of a subset of listings, e.g. 'Article'",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityListingCategory",
    "possibleTypes": []
  },
  "PublicityListingConnection": {
    "args": [],
    "description": "Pagination for Publicity Listing types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of publicityListings",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "PublicityListingEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityListingConnection",
    "possibleTypes": []
  },
  "PublicityListingEdge": {
    "args": [],
    "description": "Page of publicityListings",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A PublicityListing node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "PublicityListingType"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: PublicityListing 4 out of 312",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityListingEdge",
    "possibleTypes": []
  },
  "PublicityListingTitleText": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityListingTitleText",
    "possibleTypes": []
  },
  "PublicityListingType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      }
    ],
    "inputFields": [],
    "kind": "INTERFACE",
    "name": "PublicityListingType",
    "possibleTypes": [
      "NameFilmBiography",
      "NamePortrayal",
      "NamePrintBiography",
      "PublicityArticle",
      "PublicityInterview",
      "PublicityMagazineCover",
      "PublicityPictorial"
    ]
  },
  "PublicityListingsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "PublicityListingsFilter",
    "possibleTypes": []
  },
  "PublicityMagazineCover": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "authors",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The publicity listing as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayablePublicityListingProperty"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "publication",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "reference",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "region",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "PublicityListingTitleText"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityMagazineCover",
    "possibleTypes": []
  },
  "PublicityPictorial": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "authors",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "PublicityListingCategory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "The publicity listing as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayablePublicityListingProperty"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "publication",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "reference",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "region",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "PublicityListingTitleText"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PublicityPictorial",
    "possibleTypes": []
  },
  "PushNotificationUserSettings": {
    "args": [],
    "description": "Push notification metadata for an authenticated user.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Push notification ID for the authenticated user.",
        "kind": "",
        "list": false,
        "name": "pushNotificationUserId",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "PushNotificationUserSettings",
    "possibleTypes": []
  },
  "Query": {
    "args": [],
    "description": "Query",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "AccountDataDialogInput"
          }
        ],
        "description": "Retrieves the data for displaying account data access dialogs. The function\nreturns the text to be displayed for REQUEST, CONFIRM\n\n---------------------\nGraphlet Details:\n- Name: privacy\n- CTI: IMDb/GraphQL/Privacy\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-detected-country-region, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "accountDataDialog",
        "nullable": false,
        "type": "AccountDataDialogOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "Provide options to filter down to a particular set of names",
            "kind": "AdvancedNameSearchConstraints",
            "list": false,
            "name": "constraints",
            "nullable": true,
            "type": "AdvancedNameSearchConstraints"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Option for index-based pagination. Jumps to a particular numerical, positive contextual position in\nthe results (the position after taking \"constraints\" and \"sort\" into account), and will return the\n\"first\" names starting at the provided position value.\n\nWill throw a BAD_USER_INPUT if used with \"after\", if less than or equal to zero, or greater than or equal to 10,000.\n\nIf the specified position is larger than the result set, will return no results (not null).",
            "kind": "Int",
            "list": false,
            "name": "jumpToPosition",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Defaults to popularity sort (sortBy: POPULARITY, sortOrder: ASC)\nNames without data for the sort by key, are sorted after those that do.\nFalls back to sorting by popularity, and then nconst, for ties.",
            "kind": "AdvancedNameSearchSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "AdvancedNameSearchSort"
          }
        ],
        "description": "Search all IMDb names based on a wide variety of constraints\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "advancedNameSearch",
        "nullable": true,
        "type": "AdvancedNameSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "Provide options to filter down to a particular set of titles",
            "kind": "AdvancedTitleSearchConstraints",
            "list": false,
            "name": "constraints",
            "nullable": true,
            "type": "AdvancedTitleSearchConstraints"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Option for index-based pagination. Jumps to a particular numerical, positive contextual position in\nthe results (the position after taking \"constraints\" and \"sort\" into account), and will return the\n\"first\" titles starting at the provided position value.\n\nWill throw a BAD_USER_INPUT if used with \"after\", if less than or equal to zero, or greater than or equal to 10,000.\n\nIf the specified position is larger than the result set, will return no results (not null).",
            "kind": "Int",
            "list": false,
            "name": "jumpToPosition",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Defaults to popularity sort (sortBy: POPULARITY sortOrder: ASC)\nTitles without data for the sort by key, are sorted after those that do, except RELEASE_DATE DESC.\nFalls back to sorting by popularity, and then tconst, for ties.",
            "kind": "AdvancedTitleSearchSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "AdvancedTitleSearchSort"
          }
        ],
        "description": "Search all IMDb titles based on a wide variety of constraints.\n\nIf a Pro-only constraint is used, the x-imdb-customer-id header is required.\n\nThe following errors can occur if a Pro-only constraint is used:\n  Throws UNAUTHENTICATED if not logged in\n  Throws FORBIDDEN if customer w/o any IMDbPro subscription\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "advancedTitleSearch",
        "nullable": true,
        "type": "AdvancedTitleSearchConnection"
      },
      {
        "args": [],
        "description": "Used to fetch advertising related information for IMDb mobile apps.\nReturns an object containing eligibility for apps to serve 3p ads and a configuration map for the slots on each page.\n\n---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "appAdsInfo",
        "nullable": true,
        "type": "AppAdsInfoOutput"
      },
      {
        "args": [],
        "description": "Used to fetch advertising related information for IMDb mobile apps.\nReturns an object containing eligibility for apps to serve 3p ads and a configuration map for the slots on each page.\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "appAdsInfoV2",
        "nullable": true,
        "type": "AppAdsInfoOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Get all available badge guide help entries in the system which represent one\nor more badges for providing awarding instructions and context\ne.g. Oscars yearly badges are represented by the Oscars badge guide entry.\nSome entries only represent a single badge, like the IMDb Staff badge.\nOrdering handled by service ranking.\n\n22 badge guide entries are supported initially.\n\nThrows UNSUPPORTED_IMAGE_TYPE if service cannot provide the requested image type\n\n---------------------\nGraphlet Details:\n- Name: badges\n- CTI: IMDb/GraphQL/Badges\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "badgeGuideEntries",
        "nullable": false,
        "type": "BadgeGuideEntryConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "today",
            "nullable": false,
            "type": "MonthDay"
          }
        ],
        "description": "At most 30 Names born on the given date, ordered by STARmeter, excluding adult and controversial names.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "bornToday",
        "nullable": true,
        "type": "NameSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Highest-grossing titles at the domestic box office over the most recent weekend.  At most 10 titles.\n\n---------------------\nGraphlet Details:\n- Name: mojo\n- CTI: IMDb/GraphQL/Mojo\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "boxOfficeWeekendChart",
        "nullable": true,
        "type": "BoxOfficeWeekendChart"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Optional argument to specify context input data.\nWhen omitted, no context is applied to the conditional logic. Omitting context could affect\nthe result of a CTA that expects context input. For those CTAs that don't need context input,\nproviding a context value has no affect.",
            "kind": "CallToActionContextInput",
            "list": false,
            "name": "context",
            "nullable": true,
            "type": "CallToActionContextInput"
          }
        ],
        "description": "Query used to fetch specified CTAs.\nEach CTA is defined as an individual field in CallToAction\n\n---------------------\nGraphlet Details:\n- Name: callToAction\n- CTI: IMDb/GraphQL/Call To Action\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "callToAction",
        "nullable": true,
        "type": "CallToAction"
      },
      {
        "args": [],
        "description": "True if this customer can claim a name page\n\nThrows UNAUTHENTICATED if customer not authenticated\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "canClaimNamePage",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "ChangeLoginSecurityRedirectURLInput"
          }
        ],
        "description": "@maxAuthAge=900\nReturns a URL to redirect to for user login & security page\nThrows UNAUTHENTICATED if user needs to reauthenticate\nThrows GRAPHQL_VALIDATION_FAILED if an invalid association handle is provided.\nThrows GRAPHQL_VALIDATION_FAILED if returnURL is not an absolute URL or not an IMDb domain (ends with 'imdb.com') if passed\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "changeLoginSecurityRedirectURL",
        "nullable": true,
        "type": "ChangeLoginSecurityRedirectURLOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "chart",
            "nullable": false,
            "type": "ChartNameOptions"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AdvancedNameSearchConstraints",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AdvancedNameSearchConstraints"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AdvancedNameSearchSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "AdvancedNameSearchSort"
          }
        ],
        "description": "Retrieves data associated with specific ranking chart in ordered ranking by default.\nIt supports all filters and sorts, as needed by the Chart pages.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "chartNames",
        "nullable": true,
        "type": "ChartNameSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "chart",
            "nullable": false,
            "type": "ChartTitleOptions"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AdvancedTitleSearchConstraints",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AdvancedTitleSearchConstraints"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AdvancedTitleSearchSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "AdvancedTitleSearchSort"
          }
        ],
        "description": "Retrieves data associated with specific ranking chart in ordered ranking by default.\nIt supports all filters and sorts, as needed by the Chart pages.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "chartTitles",
        "nullable": true,
        "type": "ChartTitleSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Get a Cinema by it's `ci` const.\n  \nNotes:\n - Returns null if the cinema doesn't exist.\n  \nErrors:\n- Throws `BAD_USER_INPUT` if `id` isn't a valid `ci` const\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "cinema",
        "nullable": true,
        "type": "Cinema"
      },
      {
        "args": [],
        "description": "The requesting customer's claimed name information\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "claimedName",
        "nullable": true,
        "type": "ClaimedName"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Next page cursor for pagination.",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": " TV or MOVIE ",
            "kind": "ENUM",
            "list": false,
            "name": "comingSoonType",
            "nullable": false,
            "type": "ComingSoonType"
          },
          {
            "defaultValue": "",
            "description": "Disable the default popularity cap.\nThe cap filters out less popular movies, and is useful for returning higher\nquality results for short windows, like the default 45 days.\nMovies released further in the future are less likely to be popular, so\nremoving the cap will give more complete results for longer time windows.",
            "kind": "Boolean",
            "list": false,
            "name": "disablePopularityFilter",
            "nullable": true,
            "type": "Boolean"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": " Uses the 'US' override if not specified ",
            "kind": "String",
            "list": false,
            "name": "regionOverride",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": " The earliest wide release date eligible to include in these results. ",
            "kind": "SCALAR",
            "list": false,
            "name": "releasingOnOrAfter",
            "nullable": false,
            "type": "Date"
          },
          {
            "defaultValue": "",
            "description": " Optional max date for setting a time window. If not set, we assume 45 days from the releasingOnOrAfter date ",
            "kind": "Date",
            "list": false,
            "name": "releasingOnOrBefore",
            "nullable": true,
            "type": "Date"
          },
          {
            "defaultValue": "",
            "description": " Defaults to [POPULARITY, ASC] if not specified ",
            "kind": "NON_NULL",
            "list": true,
            "name": "sort",
            "nullable": true,
            "type": "ComingSoonSort"
          }
        ],
        "description": "At most 100 titles releasing wide within 45 days of the given Date, ordered by MOVIEmeter, excluding adult titles.\nNOTE: This will return data for the US no matter what x-imdb-user-country value is passed in.\nSEE: https://t.corp.amazon.com/V362117929/communication\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "comingSoon",
        "nullable": true,
        "type": "TitleSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "ids",
            "nullable": true,
            "type": "ID"
          }
        ],
        "description": "Output will be in the same order as input, including remapped (returned as\nmapped id) and non-existent consts (returned with null fields)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "companies",
        "nullable": false,
        "type": "Company"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "company",
        "nullable": true,
        "type": "Company"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "companyMetadata",
        "nullable": true,
        "type": "CompanyMetadata"
      },
      {
        "args": [],
        "description": "Contributor leaderboard queries\n\n---------------------\nGraphlet Details:\n- Name: contributor\n- CTI: IMDb/GraphQL/Contributor\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "contributorLeaderboards",
        "nullable": true,
        "type": "ContributorLeaderboards"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "filter",
            "nullable": false,
            "type": "ContributorRankingsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Return contributor ranking for 1 or more leaderboards in reverse chronological order\n\n---------------------\nGraphlet Details:\n- Name: contributor\n- CTI: IMDb/GraphQL/Contributor\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "contributorRankings",
        "nullable": false,
        "type": "ContributorLeaderboardRankConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "CreateAccountRedirectURLInput"
          }
        ],
        "description": "Returns a URL to redirect to for user account creation\nThrows GRAPHQL_VALIDATION_FAILED if an invalid association handle is provided.\nThrows GRAPHQL_VALIDATION_FAILED if returnURL is not an absolute URL or not an IMDb domain (ends with 'imdb.com') if passed\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "createAccountRedirectURL",
        "nullable": true,
        "type": "CreateAccountRedirectURLOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "creditCategory",
        "nullable": true,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "DeletionDialogInput"
          }
        ],
        "description": "Retrieves the data for displaying deletion dialogs. The function returns the\ntext to be displayed and, if it's for a deletion REQUEST dialog, a requestId as well.\n\n---------------------\nGraphlet Details:\n- Name: privacy\n- CTI: IMDb/GraphQL/Privacy\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-detected-country-region, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "deletionDialog",
        "nullable": false,
        "type": "DeletionDialogOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "DisplayAdsForAppInput"
          }
        ],
        "description": "Query used to fetch one or more ads for an IMDb app.\nReturns an array of ad slots and their creative info returned from the AAX call\n\n---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": true,
        "name": "displayAdsForApp",
        "nullable": true,
        "type": "AdSlot"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "DisplayAdsForAppInput"
          }
        ],
        "description": "Query used to fetch one or more ads for an IMDb app.\nReturns an array of ad slots and their creative info returned from the AAX call\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": true,
        "name": "displayAdsForAppV2",
        "nullable": true,
        "type": "AdSlot"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "constId",
            "nullable": false,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "promptType",
            "nullable": false,
            "type": "PromptType"
          }
        ],
        "description": "Determine if a prompt should be displayed\nconstId: const id of item to determine if prompt should be displayed for\npromptType: the type of prompt to be displayed\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "displayablePrompt",
        "nullable": false,
        "type": "DisplayablePrompt"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Business domain context for the request.\nValid values are defined in the BusinessDomain enum.\nIf not provided, defaults to CONSUMER domain.",
            "kind": "BusinessDomain",
            "list": false,
            "name": "domain",
            "nullable": true,
            "type": "BusinessDomain"
          }
        ],
        "description": "Retrieves all email preferences for the authenticated user.\n  \nThe customer ID is automatically determined from the x-imdb-customer-id header.\nReturns the master marketing preference toggle and all individual email preferences\ncategorized by type (marketing and subscription).\n  \n@throws UNAUTHENTICATED if the customer is not logged in\n\n---------------------\nGraphlet Details:\n- Name: notificationPreferences\n- CTI: IMDb/GraphQL/Notification Preferences\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "emailPreferences",
        "nullable": false,
        "type": "EmailPreferences"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "EventLiveResultsOverrideInput",
            "list": false,
            "name": "override",
            "nullable": true,
            "type": "EventLiveResultsOverrideInput"
          }
        ],
        "description": "Data for displaying the live winners for an ongoing award event. If there is no current ongoing event, returns null.\nServer Cache TTL is 15 minutes when null is returned, 30 seconds when data is returned.\n\nOptionally specify event override to return data for past events or events to be used for testing.\n\n---------------------\nGraphlet Details:\n- Name: winnersWidget\n- CTI: IMDb/GraphQL/Winners Widget\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "eventLiveResults",
        "nullable": true,
        "type": "EventLiveResults"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "eventMetadata",
        "nullable": true,
        "type": "EventMetadata"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "Experimental_WebAdsInput"
          }
        ],
        "description": "@experimental Query used to fetch ads for a specific web page.\nReturns ad slots and their creative info for the requested slots.\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "experimental_webAds",
        "nullable": false,
        "type": "Experimental_WebAdsOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "Experimental_WebAdsInput"
          }
        ],
        "description": "@experimental Get configuration information for web ads on a specific page.\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "experimental_webAdsConfig",
        "nullable": true,
        "type": "Experimental_WebAdsConfigOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "FanPicksFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "FanPicksFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Retrieves Fan Picks titles. Max batch size is 100 titles.\n  \nProviding filter input params filters fan picks titles response based on filtering criteria. Currently we support\nfiltering by title type movie or tv.\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "fanPicksTitles",
        "nullable": true,
        "type": "FanPicksConnection"
      },
      {
        "args": [],
        "description": "Query used to determine if a customer has access to a given feature.\n\nEach field returns true if the feature access is allowed, false if not.\nEach field will return its default state for logged out customers, and will state its default in its comments.\n\nThis field by itself does not grant access to any data, it just signals to the\nclient that they should attempt to access a feature.\nIt is intended for low latency gating checks that cannot otherwise be determined by using an entitled API directly,\nfor example due to an entitled API being expensive to call at scale, or that there is no corresponding entitled API.\n\n---------------------\nGraphlet Details:\n- Name: callToAction\n- CTI: IMDb/GraphQL/Call To Action\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "featureAccess",
        "nullable": true,
        "type": "FeatureAccess"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "FollowFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "FollowFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "FollowSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "FollowSort"
          }
        ],
        "description": "Returns a paginated list of the requesting a logged in customer's followed\nentities. By default, the list is sorted by last updated date.\n\nIn this context, entities refers to content the user has followed with a\nunique ID.  This could be publicly available content like an Interest or Name,\nor in the future a user could follow a conversation or a topic.\n\nSupports page size of at most 250.  Requesting a page size larger than the\nmaximum supported will result in the maximum size being returned.\n\nThrows UNAUTHENTICATED if not logged in as determined via the x-imdb-customer-id header.\n\n---------------------\nGraphlet Details:\n- Name: follows\n- CTI: IMDb/GraphQL/Follows\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "followedEntities",
        "nullable": true,
        "type": "FollowedEntitiesConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "ForgotPasswordRedirectURLInput"
          }
        ],
        "description": "Returns a URL to redirect to for user account forgot password flow\nThrows GRAPHQL_VALIDATION_FAILED if an invalid association handle is provided.\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "forgotPasswordRedirectURL",
        "nullable": true,
        "type": "ForgotPasswordRedirectURLOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ExportFilterByInput",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ExportFilterByInput"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "GetExportsInput"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ExportSortByInput",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ExportSortByInput"
          }
        ],
        "description": "Retrieves the details of all exports based on the provided input. The identity\nof the owner of the exports is determined by the x-amzn-sessionid header for\nnon-logged in users or the x-imdb-customer-id header for logged in users.\nIf sort is not provided, export details are sorted by the export's StartedOn\nvalue in descending order, from the most recent to the oldest.\nRelevant headers: 'x-amzn-sessionid', 'x-imdb-customer-id'\n\nIf the operation fails to complete, a SERVICE_UNAVAILABLE_ERROR will be thrown.\n\n---------------------\nGraphlet Details:\n- Name: privacy\n- CTI: IMDb/GraphQL/Privacy\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-detected-country-region, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "getExports",
        "nullable": false,
        "type": "ExportDetailConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "GetLatestUIWorkflowInput"
          }
        ],
        "description": "Provide a way for a client to re-fetch the last UI workflow model for a given\nworkflow execution, to support recovery from an error, or debugging tools.\nThrows UNAUTHENTICATED if the requesting customer is not logged in.\nThrows FORBIDDEN if the requesting customer is not entitled to view the workflow execution requested.\nThrows RESOURCE_NOT_FOUND if the workflow execution ID requested does not exist.\n\n---------------------\nGraphlet Details:\n- Name: contributionSDUI\n- CTI: IMDb/GraphQL/ContributionSDUI\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-sdui",
        "kind": "",
        "list": false,
        "name": "getLatestUIWorkflow",
        "nullable": true,
        "type": "GetLatestUIWorkflowOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "companyId",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Retrieve guild membership detail for the currently logged in customer for the \ninput companyId. Returns null if the guild membership detail record does not exist\n\nThrows UNAUTHENTICATED if customer is not authenticated\nThrows FORBIDDEN if the customer does not have access to retrieve the membership detail\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "guildMembershipDetail",
        "nullable": true,
        "type": "GuildMembershipDetail"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "imageGalleries",
        "nullable": false,
        "type": "ImageGallery"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "imageGallery",
        "nullable": true,
        "type": "ImageGallery"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "images",
        "nullable": false,
        "type": "Image"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Metadata about a single interest.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "interest",
        "nullable": true,
        "type": "Interest"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "InterestCategoriesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "InterestCategoriesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "A paginated list of all available interest categories, sorted alphabetically. Supports page size of at most 250.\nRequesting a page size larger than the maximum supported will result in the maximum size being returned.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "interestCategories",
        "nullable": true,
        "type": "InterestCategoryConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Metadata about an array of interests.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": true,
        "name": "interests",
        "nullable": false,
        "type": "Interest"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "InvalidAuthProviderInterstitialInput"
          }
        ],
        "description": "Throws GRAPHQL_VALIDATION_FAILED if an invalid provider is provided.\nIf a user with an existing linkage reaches this page, they will have to try login again.\nReturns an error page when user attempts to sign in with Google or Apple and does not have an existing linkage.\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "invalidAuthProviderInterstitial",
        "nullable": true,
        "type": "InvalidAuthProviderInterstitialOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "keyword",
        "nullable": true,
        "type": "Keyword"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "keywordMetadata",
        "nullable": true,
        "type": "KeywordMetadata"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "ids",
            "nullable": true,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "keywords",
        "nullable": false,
        "type": "Keyword"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "Provide options to filter down to a particular set of attachments",
            "kind": "AttachmentSearchConstraint",
            "list": false,
            "name": "attachmentConstraint",
            "nullable": true,
            "type": "AttachmentSearchConstraint"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Paginated list of latest attachments sorted by attachment time (most recent first).\n\nAn attachment is when a name is attached to a title.\n\nSupports page size of at most 250. Requesting a page size larger than the\nmaximum supported will result in the maximum size being returned.\n\nThrows UNAUTHENTICATED if not logged in\nThrows FORBIDDEN if customer w/o any IMDbPro subscription\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "latestNameToTitleAttachments",
        "nullable": true,
        "type": "NameToTitleAttachmentConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Return single list.\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "list",
        "nullable": true,
        "type": "List"
      },
      {
        "args": [],
        "description": "Returns attribute metadata about the different fields of a list, allowing for users to determine the proper\nstructure/standards for these fields (i.e. what is the maximum number of characters that a list name could be)\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "listFieldAttributeMetadata",
        "nullable": false,
        "type": "ListFieldAttributeMetadata"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "filter",
            "nullable": false,
            "type": "ListFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "listOwnerUserId",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "{by: MODIFIED_DATE, order: DESC}",
            "description": "",
            "kind": "ListSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ListSort"
          }
        ],
        "description": "Returns lists for the requested user filtered on provided input.\nThe requested user is in the optional input listOwnerUserId if provided.\nOtherwise the requested user is the current authenticated user.\nlistOwnerUserId can be omitted only when request is made with authenticated user.\nIf listOwnerUserId is provided, whether user is currently authenticated or not, the result includes only public lists belongs to the listOwnerUserId.\nOtherwise the result includes lists with all visibilities belongs to the current authenticated user.\nIf there's no matching list, it returns empty result.\nDefault sort order is most recently modified first.\n  \nThis query is cacheable except when authenticated user loading their own lists (query made with authenticated user and without providing listOwnerUserId).\n  \nThrows UNAUTHENTICATED if user is not logged in and listOwnerUserId is not provided.\nThrows BAD_USER_INPUT if the listOwnerUserId is not valid.\nThrows RESOURCE_NOT_FOUND if the listOwnerUserId doesn't exist.\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "lists",
        "nullable": false,
        "type": "ListCollectionConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "LogoutRedirectURLInput"
          }
        ],
        "description": "Returns a URL to redirect to for user account log out\nThrows GRAPHQL_VALIDATION_FAILED if an invalid association handle is provided.\nThrows GRAPHQL_VALIDATION_FAILED if returnURL is not an absolute URL or not an IMDb domain (ends with 'imdb.com') if passed\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "logoutRedirectURL",
        "nullable": true,
        "type": "LogoutRedirectURLOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "options",
            "nullable": false,
            "type": "MainSearchOptions"
          }
        ],
        "description": "Main search, searches one or multiple data types to find a mixed result set of answers.\n\nNote: Forward Pagination currently only works if you ask for one data type (eg, just NAMEs).\nMulti-index pagination might be added in the future.\n\nSee: https://quip-amazon.com/Nsb2Ad66R8xF/Main-Search-Design\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "mainSearch",
        "nullable": true,
        "type": "MainSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "Name"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "NameChartRankingsInput"
          }
        ],
        "description": "Retrieves data associated with a specifc ranking chart in ordered ranking\nfirst: number of rankings to return for that chart. max is 250.\ninput: type for querying certain ranking chart. Only India STARmeter chart is currently supported.\n\n---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "nameChartRankings",
        "nullable": true,
        "type": "NameChartRankingsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "token",
            "nullable": false,
            "type": "String"
          }
        ],
        "description": "Details of a request to be a manager of a name page, identified by id and token\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "nameManagingPermissionRequest",
        "nullable": true,
        "type": "NameManagingPermissionRequestResponse"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "nameMetadata",
        "nullable": true,
        "type": "NameMetadata"
      },
      {
        "args": [],
        "description": "Names recommended to the customer based on titles/names/other signals that the customer has shown interest in.\n  \nOnly for logged in customers (x-imdb-customer-id header; the gateway determines this from the request).\n  \nMax returned count is 20. Pagination is currently not supported.\n  \nFor use in features recommending Names for the customer to favorite.\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "nameRecommendations",
        "nullable": true,
        "type": "NameRecommendations"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Output will be in the same order as input, including remapped (returned as\nmapped id) and non-existent consts (returned with null fields)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "names",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "filter",
            "nullable": false,
            "type": "NearbyCinemasFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Get cinemas in ascending distance from the request location.\n  \nNotes:\n- If `filter.favorites` is specified as `ONLY_FAVORITES`, `filter.location.radiusInMeters` can be left as null to get all of a user's favorite cinemas.\n- If both lat/long and postal code are provided to `filter.location`, the location will default to using lat/long.\n- It's strongly recommended to explicitly provide startTime to avoid timezone mismatches between server and client, but if `filter.dateRange` is not provided, the startTime will default to server's 'now' and the endTime will default to `3000-01-01T00:00:00Z`.\n- If `filter.dateRange.endTime` is not provided, the endTime will default to `3000-01-01T00:00:00Z`.\n- Backwards pagination is not currently supported.\n  \nErrors:\n- Throws `BAD_USER_INPUT` if `filter.location.radiusInMeters` is null AND filter.favorites` is not set to `ONLY_FAVORITES.\n- Throws `BAD_USER_INPUT` with symbol `filter.location.postalCode` if the location is unknown.\n- Throws `BAD_USER_INPUT` if lat/long is too precise. See `LatLong` input.\n  \nLimits:\n- `first` is limited to a maximum of 100. If the `first` argument exceeds the maximum, the results will be capped to the maximum.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "nearbyCinemas",
        "nullable": true,
        "type": "CinemaConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "category",
            "nullable": false,
            "type": "NewsCategory"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Paginated list of latest news articles.\nSupports both Consumer and Pro news categories.\n\n---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "news",
        "nullable": true,
        "type": "NewsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "newsArticle",
        "nullable": true,
        "type": "News"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "NewsCategoryConstraints",
            "list": false,
            "name": "constraints",
            "nullable": true,
            "type": "NewsCategoryConstraints"
          }
        ],
        "description": "List of news categories along with additional metadata.\n\nThe returned categoryIds can be used as inputs to the news() query.\n\n---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": true,
        "name": "newsCategories",
        "nullable": false,
        "type": "NewsCategoryMetadata"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "newsSource",
        "nullable": true,
        "type": "NewsSource"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "nomination",
        "nullable": true,
        "type": "Nomination"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "nominationEvent",
        "nullable": true,
        "type": "NominationEvent"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "nominationEventEdition",
        "nullable": true,
        "type": "NominationEventEdition"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "nominationEventEditions",
        "nullable": true,
        "type": "NominationEventEdition"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "nominationEvents",
        "nullable": true,
        "type": "NominationEvent"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "nominations",
        "nullable": true,
        "type": "Nomination"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "UserNotificationsSortOrder",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "UserNotificationsSortOrder"
          }
        ],
        "description": "Returns a paginated list of the requesting customer's notifications. By default, the list is sorted by last updated time.\n\nSupports page size of at most 250.  Requesting a page size larger than the\nmaximum supported will result in the maximum size being returned.\n\nThrows UNAUTHENTICATED if neither x-imdb-customer-id nor x-amzn-sessionid is present in the header.\n\n---------------------\nGraphlet Details:\n- Name: notificationcenter\n- CTI: IMDb/GraphQL/NotificationCenter\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language, x-imdb-client-name, x-imdb-client-ip, user-agent\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "notifications",
        "nullable": false,
        "type": "UserNotificationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "OutstreamAdParametersApp"
          }
        ],
        "description": "Query used to fetch a video ad that plays as outstream on an IMDb app\nOutstream video definition: Video ad not directly tied to IMDb video content (no related viconst)\n\n---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "outstreamVideoAdApp",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "@maxAuthAge=900 \nReturns current settings for user's personal details.\nThrows UNAUTHENTICATED if customer needs to re-authenticate.\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "personalDetails",
        "nullable": false,
        "type": "PersonalDetailsOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Returns the detail of a poll.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "poll",
        "nullable": true,
        "type": "Poll"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "true",
            "description": "",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Returns the list of poll admin activities (poll created/synced), from latest to earliest.\nCustomer needs to have POLL_ADMIN entitlement to call this.\n  \nThrows UNAUTHENTICATED if not logged in.\n@entitlement(POLL_ADMIN)\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "pollAdminActivities",
        "nullable": true,
        "type": "PollAdminActivityConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "PollFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "PollFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "jumpToPosition",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "{by: CREATE_TIME, order: DESC}",
            "description": "",
            "kind": "PollSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "PollSort"
          }
        ],
        "description": "Returns a paginated list of the polls on IMDb. By default, the list is sorted by create time in descending order.\nSupports page size of at most 250. Requesting a page size larger than the maximum supported will result in the maximum size being returned.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "polls",
        "nullable": true,
        "type": "PollsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Paginated list of most popular interests.\nSupports page size of at most 250. Requesting a page size larger than the\nmaximum supported will result in the maximum size being returned.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "popularInterests",
        "nullable": true,
        "type": "InterestSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "paginationToken",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "PopularTitlesQueryFilter",
            "list": false,
            "name": "queryFilter",
            "nullable": true,
            "type": "PopularTitlesQueryFilter"
          }
        ],
        "description": "The most popular released movie or TV series titles, as determined by the movie meter ranking.\nIf the specified limit is over the query's page limit (100), the limit will be capped at the query's limit\nTo be replaced by topMeterTitles, which follows the Relay spec.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "popularTitles",
        "nullable": true,
        "type": "PaginatedTitles"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "classType",
            "nullable": false,
            "type": "ListClassId"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "userId",
            "nullable": true,
            "type": "ID"
          }
        ],
        "description": "Retrieve predefined user lists. Predefined User Lists have a ListClass of CHECK_INS, FAVORITE_ACTORS,\nFAVORITE_THEATRES, NOT_INTERESTED, RESEARCH_NOTES, SEEN, or WATCH_LIST. They are automatically created for a user,\nand cannot be deleted or renamed.\nPredefined lists can be accessed by userId and list class pair as there can only be one per user for a type.\nuserId can be omitted only when the request is made while the authenticated user is present in the context (e.g., the user is logged in).\nIf the predefined list does not exist for the user, it returns null instead of throwing an exception.\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "predefinedList",
        "nullable": true,
        "type": "List"
      },
      {
        "args": [],
        "description": "Gets the privacy directives that must be enforced for the user\nRelevant headers: 'x-amzn-sessionid', 'x-imdb-customer-id', 'x-imdb-client-ip', 'x-imdb-client-name'\n\n---------------------\nGraphlet Details:\n- Name: privacy\n- CTI: IMDb/GraphQL/Privacy\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-detected-country-region, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "privacyDirectives",
        "nullable": false,
        "type": "PrivacyDirectivesOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "PrivacyPromptInput"
          }
        ],
        "description": "If applicable, fetch the privacy prompt information that must be displayed to the user\nRelevant headers: 'x-amzn-sessionid', 'x-imdb-customer-id', 'x-imdb-client-ip', 'x-imdb-client-name'\n\n---------------------\nGraphlet Details:\n- Name: privacy\n- CTI: IMDb/GraphQL/Privacy\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-detected-country-region, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "privacyPrompt",
        "nullable": false,
        "type": "PrivacyPromptOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Query used to fetch profession detail\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "profession",
        "nullable": true,
        "type": "NameProfession"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Query used to fetch profession Category detail.\nOutput will be in the same order as input with non-existent consts being removed from response\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "professionCategories",
        "nullable": false,
        "type": "ProfessionCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Query used to fetch profession Category detail\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "professionCategory",
        "nullable": true,
        "type": "ProfessionCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required track recommendations. Default is 200. Max is 999.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "TrackRecommendationsInput"
          }
        ],
        "description": "Names people in a particular profession tend to track\n\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "professionNameTrackRecommendations",
        "nullable": true,
        "type": "NameTrackRecommendationsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required track recommendations. Default is 200. Max is 999.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "TrackRecommendationsInput"
          }
        ],
        "description": "Titles people in a particular profession tend to track\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "professionTitleTrackRecommendations",
        "nullable": true,
        "type": "TitleTrackRecommendationsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Query used to fetch profession detail.\nOutput will be in the same order as input with non-existent consts being removed from response\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "professions",
        "nullable": false,
        "type": "NameProfession"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "PromotedVideoAdParameters"
          }
        ],
        "description": "This query is used to fetch the Promoted Video Ad if one exists for the client\nIf there is an adOverrideCreativeId or x-imdb-adsystem-overrides, it will instead fetch that Promoted Video Ad\nRelevant headers: 'user-agent', 'x-amzn-sessionid', 'x-imdb-adsystem-overrides', 'x-imdb-client-ip', 'x-imdb-customer-id'\n\n---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "promotedVideoAd",
        "nullable": true,
        "type": "PromotedVideoAd"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "PromotedVideoAdParameters"
          }
        ],
        "description": "This query is used to fetch the Promoted Video Ad if one exists for the client\nIf there is an adOverrideCreativeId or x-imdb-adsystem-overrides, it will instead fetch that Promoted Video Ad\nRelevant headers: 'user-agent', 'x-amzn-sessionid', 'x-imdb-adsystem-overrides', 'x-imdb-client-ip', 'x-imdb-customer-id'\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "promotedVideoAdV2",
        "nullable": true,
        "type": "PromotedVideoAd"
      },
      {
        "args": [],
        "description": "Field exposing push notification information for authenticated users. \nDoes not expose any param.\nReturns null if user not signed in.\n\n---------------------\nGraphlet Details:\n- Name: pushNotification\n- CTI: IMDb/GraphQL/Push Notification\n- Affected by headers: x-imdb-customer-id\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "pushNotificationUserSettings",
        "nullable": true,
        "type": "PushNotificationUserSettings"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "paginationToken",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "RecentVideosQueryFilter",
            "list": false,
            "name": "queryFilter",
            "nullable": true,
            "type": "RecentVideosQueryFilter"
          }
        ],
        "description": "Retrieves the latest videos that has been added to the video catalog.\n  \nIf the limit exceeds the maximum, the results will be capped to 100.\nOptionally, a list of VideoContentType can be provided to be used as a filter. If none are provided,\nwe will return all results. When a pagination token is provided, the query filter will be ignored.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "recentVideos",
        "nullable": true,
        "type": "PaginatedVideos"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "RecentlyViewedItemsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "RecentlyViewedItemsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Retrieves RecentlyViewed items.\nCan query views for specific site (default is Consumer site).\n  \nFor Consumer page views:\n- Based on SessionId for all users\n- Max batch size is 100 items\n- Returns name and title consts\n  \nFor Pro page views:\n- Based on CustomerId for all users\n- Max batch size is 20 items\n- Returns name, title, and company consts\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "recentlyViewedItems",
        "nullable": true,
        "type": "RecentlyViewedConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Returns news articles related to names, titles, and/or companies\nmentioned in the article.\n\nA maximum of 3 total related name, title, and/or company consts will be returned.\nFor each related const, a maximum of 3 news items will be returned.\n\nFor example, for an article that mentions Keanu Reeves and The Matrix,\nthe response could include a list of 3 articles related to Keanu Reeves\nand a list of 3 articles related to The Matrix.\n\n---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": true,
        "name": "relatedNews",
        "nullable": true,
        "type": "RelatedNews"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "markdownString",
            "nullable": false,
            "type": "String"
          }
        ],
        "description": "Accepts any markdown string to be rendered\n\n---------------------\nGraphlet Details:\n- Name: markdown\n- CTI: IMDb/GraphQL/Markdown\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "renderedMarkdown",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "RetrieveAccountDataInput"
          }
        ],
        "description": "@maxAuthAge=900\nRetrieves the requested account data after data processing triggered by `confirmAccountDataRequest` mutation is complete.\nRelevant headers: 'x-imdb-customer-id'\nIf re-authentication is successful, the function returns the downloadable data\ninformation through fileMetadata, success will be true,\nand a success text will be in message and a success title text in title.\nIf it was unsuccessful, success will be false and an error text will be in message \nand an error title text will be in title. fileMetadata will have its values set to empty.\nThrows UNAUTHENTICATED if the user is not logged in or fails 15 minute maxAuthAge check.\nThrows FORBIDDEN if logged in user doesn't match the customerID from the initial request.\nThrows INVALID_INPUT_EXCEPTION if dataRequestId provided is invalid.\n\n---------------------\nGraphlet Details:\n- Name: privacy\n- CTI: IMDb/GraphQL/Privacy\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-detected-country-region, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "retrieveAccountData",
        "nullable": false,
        "type": "RetrieveAccountDataOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "review",
        "nullable": true,
        "type": "Review"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Next page cursor for pagination.",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "The first N filters per this query.",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "The type of filters to return, see: SavedSearchFilterType",
            "kind": "ENUM",
            "list": false,
            "name": "type",
            "nullable": false,
            "type": "SavedSearchFilterType"
          }
        ],
        "description": "Get paginated saved search filters, of a given input SavedSearchFilterType, for a customerId.\nSorted by updatedTimestamp, descending.\nCustomer ID is taken from the request header, not as part of this input.\n\nSupports page size of at most 250. Requesting a page size larger than the\nmaximum supported will result in the maximum size being returned.\n\nThrows UNAUTHENTICATED if user is not logged in.\nThrows BAD_USER_INPUT if the customerId is not valid.\nThrows RESOURCE_NOT_FOUND if the customerId doesn't exist.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "savedSearchFilters",
        "nullable": true,
        "type": "SavedSearchFiltersConnection"
      },
      {
        "args": [],
        "description": "Data that can be useful for crafting search queries.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "searchMetadata",
        "nullable": true,
        "type": "SearchMetadata"
      },
      {
        "args": [],
        "description": "Metadata for some self-verified name data attributes\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "selfVerifiedNameMetadata",
        "nullable": true,
        "type": "SelfVerifiedNameMetadata"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "location",
            "nullable": false,
            "type": "ShowtimesLocation"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "queryMetadata",
            "nullable": false,
            "type": "ShowtimesTitlesQueryMetadata"
          }
        ],
        "description": "Retrieves Showtimes titles. Max batch size is 100 titles. We currently do not support pagination in existing\nshowtimes API but hope to in the future.\n  \nThrows if `location.radiusInMeters` is null.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "showtimesTitles",
        "nullable": true,
        "type": "ShowtimesTitleConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "cinemasMetadata",
            "nullable": false,
            "type": "ShowtimesTitlesCinemasMetadata"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Retrieves titles currently showing in the specified cinemas.\n  \nNotes:\n- It's strongly recommended to explicitly provide startTime to avoid timezone mismatches between server and client, but if `filter.dateRange` is not provided, the startTime will default to server's 'now' and the endTime will default to `3000-01-01T00:00:00Z`.\n- If `filter.dateRange.endTime` is not provided, the endTime will default to `3000-01-01T00:00:00Z`.\n- We currently do not support pagination in existing showtimes API but hope to in the future.\n  \nSorting:\n- There is no guaranteed sort order for results returned.\n  \nThrows:\n- Throws `GRAPHQL_VALIDATION_FAILED` if `cinemasMetadata.anyCinemaIds` is null.\n- Throws `BAD_USER_INPUT` if more than 400 unique cinemas are provided in `cinemasMetadata.anyCinemaIds`.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "showtimesTitlesByCinemas",
        "nullable": true,
        "type": "ShowtimesTitleConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "SignInOptionRedirectURLInput"
          }
        ],
        "description": "Returns a single sign in option redirect URL based on association handle from login context\nThe associationHandle in the input will affect the single sign in option returned\nThrows GRAPHQL_VALIDATION_FAILED if an invalid association handle is provided.\nThrows GRAPHQL_VALIDATION_FAILED if returnURL is not an absolute URL or not an IMDb domain (ends with 'imdb.com') if passed\nThrows GRAPHQL_VALIDATION_FAILED if no additionalWebAuthContext is given and associationHandle in input is an association handle\n    used in AAP (Amazon account pool) creation/conversion i.e. 'imdb_amazon', 'imdb_pro_amazon', etc.\nThrows GRAPHQL_VALIDATION_FAILED if an invalid signInPrefilledEmail is provided.\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "signInOptionRedirectURL",
        "nullable": true,
        "type": "SignInOptionRedirectURLOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "SignInOptionsRedirectURLsInput"
          }
        ],
        "description": "Returns sign in options redirect URLs based on association handle from login context\nThe associationHandle in the input will only affect the 1P IMDb sign in option, all of the other 3P logins will be configured with their own association handles\nThrows GRAPHQL_VALIDATION_FAILED if an invalid association handle is provided.\nThrows GRAPHQL_VALIDATION_FAILED if returnURL is not an absolute URL or not an IMDb domain (ends with 'imdb.com') if passed\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "signInOptionsRedirectURLs",
        "nullable": true,
        "type": "SignInOptionsRedirectURLsOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required track recommendations. Default is 200. Max is 999.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Names people that tend to track similar pages track\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "similarNameTrackRecommendations",
        "nullable": true,
        "type": "NameTrackRecommendationsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required track recommendations. Default is 200. Max is 999.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Titles people that tend to track similar pages track\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "similarTitleTrackRecommendations",
        "nullable": true,
        "type": "TitleTrackRecommendationsConnection"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: zukoTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "staticSchemaTest",
        "nullable": true,
        "type": "Test"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "StreamingTitlesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "StreamingTitlesFilter"
          }
        ],
        "description": "Gets the StreamingTitles for the providers applicable for this user/territory\nSince this is a personalized selection it will always be a finite size (typically\nless than 15 providers worth)\nCaller may optionally filter to only a select set of providers if the IDs have\nalready been obtained\nThrows InvalidParameterError if filter is for TitleTypeCategoryValue other than tv or movie\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": true,
        "name": "streamingTitles",
        "nullable": false,
        "type": "StreamingTitles"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: zukoStubs\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: None\n- Cache TTL: 300 seconds\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "stubQuery",
        "nullable": true,
        "type": "QueryStubs"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SuggestionSearchFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "SuggestionSearchFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SuggestionSearchOptions",
            "list": false,
            "name": "options",
            "nullable": true,
            "type": "SuggestionSearchOptions"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "searchTerm",
            "nullable": false,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Boolean",
            "list": false,
            "name": "shouldShowOriginalTitles",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Top search suggestions\n\nThis suggestionSearch query is used by IMDb Consumer and \"Pro\" products for filling in suggestions for the search bar.\nMore info at https://w.amazon.com/bin/view/IMDb/Search/Suggestion/\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "suggestionSearch",
        "nullable": true,
        "type": "SuggestionSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "false",
            "description": "",
            "kind": "Boolean",
            "list": false,
            "name": "cached",
            "nullable": true,
            "type": "Boolean"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "GetPlacementsInput"
          }
        ],
        "description": "Retrieves a list of placements from Content Symphony.\n  \nThis graphlet utilizes dynamic caching (https://w.amazon.com/bin/view/IMDb/Zuko/DynamicGraphletResponseCaching)\nThe cached flag is false by default, customer and session IDs WILL be used to fetch placements,\nand the response WILL NOT be cached. If the cached flag is true,\nthen customer and session IDs WILL NOT be used, and the response WILL be cached.\n\n---------------------\nGraphlet Details:\n- Name: contentSymphony\n- CTI: IMDb/GraphQL/ContentSymphony\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-detected-country, x-imdb-client-name, x-imdb-client-ip, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-foundation-web-platform-office-hours",
        "kind": "",
        "list": true,
        "name": "symphonyPlacements",
        "nullable": true,
        "type": "SymphonyPlacement"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: zukoTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "test",
        "nullable": true,
        "type": "Test"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "testAuth",
        "nullable": true,
        "type": "TestAuth"
      },
      {
        "args": [],
        "description": "@maxAuthAge=120\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "testAuthTimer",
        "nullable": true,
        "type": "TestAuthTimer"
      },
      {
        "args": [],
        "description": "True if granted entitlement\n@entitlement(PREMIUM_OR_NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "testCombinedEntitlement",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Each entry responds to input array, true if granted entitlement\n@entitlement(NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": true,
        "name": "testContextEntitlement",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if granted entitlement\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "testEntitlement",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "String"
          },
          {
            "defaultValue": "false",
            "description": "",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Test field with useEntitlement defaulting to false (query author can opt in)\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "testEntitlementWithOptIn",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "String"
          },
          {
            "defaultValue": "true",
            "description": "",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Test field with useEntitlement defaulting to true (query author can opt out)\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "testEntitlementWithOptOut",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "All received entitlements.\n@entitlement(NAME_OWNER,PRO_ANY_TIER,PRO_PREMIUM,PREMIUM_OR_NAME_OWNER)\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": true,
        "name": "testEntitlements",
        "nullable": true,
        "type": "TestEntitlement"
      },
      {
        "args": [],
        "description": "True if granted entitlement\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "testProAnyTierEntitlement",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if granted entitlement\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: zukoAuthTest\n- CTI: IMDb/GraphQL/Gateway\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-ip, x-imdb-detected-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-api-gateway-external",
        "kind": "",
        "list": false,
        "name": "testProPremiumEntitlement",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "TitleChartRankingsInput"
          }
        ],
        "description": "Retrieves data associated with a specifc ranking chart in ordered ranking\nfirst: number of rankings to return for that chart\nafter: pagination token to begin returning ranking set (Optional)\ninput: type for querying certain ranking chart\n\n---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "titleChartRankings",
        "nullable": true,
        "type": "TitleChartRankingsConnection"
      },
      {
        "args": [],
        "description": "Titles recommended based on title genre a customer has shown interest in. Only for logged in customers.\nMax batch size is 30 items.\nWill return an UNAUTHENTICATED error code if no customer associated with the request.\n  \nFor use in Genre recommendation features.\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "titleGenreRecommendations",
        "nullable": true,
        "type": "TitleGenreRecommendation"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "titleMetadata",
        "nullable": true,
        "type": "TitleMetadata"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleRecommendationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleRecommendationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "PlacementContext",
            "list": false,
            "name": "placementContext",
            "nullable": true,
            "type": "PlacementContext"
          }
        ],
        "description": "Titles recommended based on activity, either by user id when available, or session id otherwise.\n  \nFor use in Top Picks features.\n  \nProviding placement context in request generates different title recommendations based on input. If no placement\ncontext is provided, or pageType passed in is not supported, the default behavior is optimized for home page\nplacement, which is today's behavior. Currently supported page types are: home, title.\n  \nProviding filter input params filters title recommendations response based on filtering criteria. Currently we support\nfiltering by title type movie or tv.\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "titleRecommendations",
        "nullable": true,
        "type": "TitleRecommendationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns personalized watchlist title recommendations for a logged in customer (x-imdb-customer-id header; the gateway determines this from the request).\n  \nFor a customer with zero watchlist titles (cold start behavior), there will be no recommended titles returned. Cold start recommendations may be added in the future.\n  \nMax returned count is 10. Pagination is currently not supported, but will be supported later.\n  \nRecommendations returned as sorted by title aggregate rating in descending order.\n  \nWill return an UNAUTHENTICATED error code if no customer associated with the request.\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "titleWatchlistRecommendations",
        "nullable": true,
        "type": "TitleWatchlistRecommendationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Output will be in the same order as input, including remapped (returned as\nmapped id) and non-existent consts (returned with null fields)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "titles",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "filter",
            "nullable": false,
            "type": "TopGrossingReleasesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Top grossing releases at the Box Office for the specified filter.\nCurrently there will be at most 10 releases.\n\n---------------------\nGraphlet Details:\n- Name: mojo\n- CTI: IMDb/GraphQL/Mojo\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "topGrossingReleases",
        "nullable": true,
        "type": "TopGrossingReleasesConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "itemId",
            "nullable": false,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "topListType",
            "nullable": false,
            "type": "TopListType"
          }
        ],
        "description": "Returns a collection of top Lists\nfirst can have a maximum value of <LIMIT>\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "topListsForItem",
        "nullable": false,
        "type": "ListCollectionConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "The most popular names, sorted by StarMeter.\nMax page size supported is 250.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "topMeterNames",
        "nullable": true,
        "type": "NameSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TopMeterTitlesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TopMeterTitlesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "The most popular titles, sorted by MovieMeter.\nMax page size supported is 250.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "topMeterTitles",
        "nullable": true,
        "type": "TitleSearchConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Prefer titleRecommendations, which includes recommendation explanations\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "topPicksTitles",
        "nullable": true,
        "type": "TopPicksConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "TopTrendingInput"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "topTrendingNames",
        "nullable": true,
        "type": "TrendingNameConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "TopTrendingSetsPredefinedInput"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "topTrendingSetsPredefined",
        "nullable": true,
        "type": "TrendingTitleConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "TopTrendingInput"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "topTrendingTitles",
        "nullable": true,
        "type": "TrendingTitleConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "TopTrendingInput"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "topTrendingVideos",
        "nullable": true,
        "type": "TrendingVideoConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required tracked names. Default is 500. Max is 2500.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The requesting user's tracked names\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "trackedNames",
        "nullable": true,
        "type": "TrackedNamesConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required tracked titles. Default is 500. Max is 2500.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The requesting user's tracked titles\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "trackedTitles",
        "nullable": true,
        "type": "TrackedTitlesConnection"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "trendingNamesCollectionOptions",
        "nullable": true,
        "type": "TrendingNameCollectionOptions"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "paginationToken",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "trendingTitles",
        "nullable": true,
        "type": "PaginatedTitles"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: trending\n- CTI: IMDb/GraphQL/Trending\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "trendingTitlesCollectionOptions",
        "nullable": true,
        "type": "TrendingTitleCollectionOptions"
      },
      {
        "args": [],
        "description": "Query to return the unread notification count for the customer. 0 means no unread notification.\n\nThe unread status is determined by the last time a customer visited their notification center. Clients should call\nupdateNotificationCenterAccess to update it at proper times.\n\nThrows UNAUTHENTICATED if neither x-imdb-customer-id nor x-amzn-sessionid is present in the header.\n\n---------------------\nGraphlet Details:\n- Name: notificationcenter\n- CTI: IMDb/GraphQL/NotificationCenter\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language, x-imdb-client-name, x-imdb-client-ip, user-agent\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "unreadNotificationCount",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Pagination cursor",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Number of required track recommendations. Default is 200. Max is 999.",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "TrackRecommendationsInput"
          }
        ],
        "description": "Unreleased titles people in a particular profession tend to track\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "unreleasedTitleTrackRecommendations",
        "nullable": true,
        "type": "TitleTrackRecommendationsConnection"
      },
      {
        "args": [],
        "description": "Field exposing information for requestingUserId. Does not expose any param\nIncludes private information for signed in user\nReturns null if user not signed in\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "user",
        "nullable": true,
        "type": "User"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "UserBadgesInput"
          }
        ],
        "description": "Get all earned badges, for either the authenticated user or for the optionally given userid\nOrdering handled by service ranking.\n\n100 badges are supported initially.\n\nThrows UNAUTHENTICATED if userId is not provided and the x-imdb-customer-id header is empty.\nThrows UNSUPPORTED_IMAGE_TYPE if service cannot provide the requested image type\n\n---------------------\nGraphlet Details:\n- Name: badges\n- CTI: IMDb/GraphQL/Badges\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "userBadges",
        "nullable": false,
        "type": "BadgeConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "UserConsentInput"
          }
        ],
        "description": "Fetch whether the current user is opted in or out of a consent.\n\n---------------------\nGraphlet Details:\n- Name: privacy\n- CTI: IMDb/GraphQL/Privacy\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-detected-country-region, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "userConsent",
        "nullable": true,
        "type": "UserConsentOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "UserLinkedAuthProviderStatusesInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "UserLinkedAuthProviderStatusesInput"
          }
        ],
        "description": "@maxAuthAge=900\nReturns status and linking information for all auth providers for the current user.\nThrows UNAUTHENTICATED if customer needs to re-authenticate.\nThrows GRAPHQL_VALIDATION_FAILED if returnURL is not an absolute URL or not an IMDb domain (ends with 'imdb.com') if passed\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "userLinkedAuthProviderStatuses",
        "nullable": true,
        "type": "UserLinkedAuthProviderStatusesOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ListSearchFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ListSearchFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "listOwnerUserId",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ListSearchSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ListSearchSort"
          }
        ],
        "description": "Returns a filtered and sorted list of lists for a user\n\nThere are two behaviors\n  1. authenticated user - retrun private and public lists\n  2. listOwnerUserId - return public lists owned by the user\n  Note: listOwnerUserId takes precendence over the authenticated user\n\nThis query currently uses non-cached endpoint as IMDbSearchGraphlet does not support caching for List now.\nThis query is designed for search scenarios, leveraging the search index to deliver eventual consistency while\noffering an efficient and cost effective approach to filtering and sorting user lists.\n\nFor strict consistency requirements, the following APIs offer direct access to lists from the primary data store:\n1. lists API: Retrieves the lists for a user.\n2. predefinedList API: Retrieves a specific predefined list for a user.\n3. list API: Retrieves a single list for a list id.\n\nThrows UNAUTHENTICATED if user is not logged in and listOwnerUserId is not provided.\nThrows BAD_USER_INPUT if the listOwnerUserId is not valid.\nThrows RESOURCE_NOT_FOUND if the listOwnerUserId doesn't exist.\n\n---------------------\nGraphlet Details:\n- Name: search\n- CTI: IMDb/GraphQL/Search\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-country, x-imdb-user-language, x-imdb-normalized-languages\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-disco",
        "kind": "",
        "list": false,
        "name": "userListSearch",
        "nullable": false,
        "type": "ListCollectionConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "UserProfileInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "UserProfileInput"
          }
        ],
        "description": "Returns a user's profile.\n\nWhen the optional userId is omitted, authentication is required and the current user's profile is returned.\nWhen the userId is provided, the public version of the user profile is returned.\nThis query is not cacheable when the userId is omitted for authenticated users viewing their own profile.\n\nPossible Errors:\n- Throws UNAUTHENTICATED if the user is not logged-in and no userId is provided.\n- Throws BAD_USER_INPUT if the userId is not valid.\n- Throws RESOURCE_NOT_FOUND if the userId doesn't exist.\n\n---------------------\nGraphlet Details:\n- Name: userProfile\n- CTI: IMDb/GraphQL/UserProfile\n- Affected by headers: x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "userProfile",
        "nullable": true,
        "type": "UserProfile"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "Provide options to filter down to a particular set of titles",
            "kind": "RatingsConstraints",
            "list": false,
            "name": "constraints",
            "nullable": true,
            "type": "RatingsConstraints"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Defaults to top rated sort (sortBy: TOP_RATED sortOrder: ASC)",
            "kind": "RatingsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "RatingsSort"
          },
          {
            "defaultValue": "",
            "description": "The user id we are searching ratings for, if it's not provided the\nrequesting user's id is used. If the provided user is invalid or the requested\nuser's ratings are private and not the requesting user, an error will be returned\nidentifying which case occurred.\n- Throws BAD_USER_INPUT if user ID is invalid\n- Throws FORBIDDEN if user is not authorized to retrieve ratings",
            "kind": "ID",
            "list": false,
            "name": "userId",
            "nullable": true,
            "type": "ID"
          }
        ],
        "description": "Find a user's title ratings based on a variety of constraints\n\n---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "userRatings",
        "nullable": true,
        "type": "RatingsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "UserReviewsInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "UserReviewsInput"
          }
        ],
        "description": "Find a user's title reviews based on a variety of constraints\n\n---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "userReviews",
        "nullable": false,
        "type": "ReviewsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "userId",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Returns the list of polls a customer has voted on, from latest to earliest.\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "userVotedPolls",
        "nullable": true,
        "type": "PollsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "UserWatchedTitlesInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "UserWatchedTitlesInput"
          }
        ],
        "description": "Returns all the titles this customer has watched. first would have a maximum \nvalue of 1000. CustomerId will be taken from x-imdb-customer-id header.\n- Throws AuthenticationError for non-authenticated requests.\n\n---------------------\nGraphlet Details:\n- Name: watched\n- CTI: IMDb/GraphQL/Watched\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "userWatchedTitles",
        "nullable": false,
        "type": "WatchedTitlesConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "urlPath",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "Information about a vanity URL\n\n---------------------\nGraphlet Details:\n- Name: managedName\n- CTI: IMDb/GraphQL/Managed Name\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "vanityUrl",
        "nullable": true,
        "type": "VanityUrl"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "id",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Retrieves a Video by its Id\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "video",
        "nullable": true,
        "type": "Video"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "VideoAdFeedbackUrlInput"
          }
        ],
        "description": "This query is used to fetch an ad feedback URL for a given video ad\n\n---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "videoAdFeedbackUrl",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "VideoAdFeedbackUrlInput"
          }
        ],
        "description": "This query is used to fetch an ad feedback URL for a given video ad\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "videoAdFeedbackUrlV2",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "context",
            "nullable": false,
            "type": "VideoRecommendationsContext"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns video items, with ad display indicators intermixed\nThis query considers customer and session states\n  \nfirst: number of items requested\nafter: cursor for pagination. the value is from previous page's endCursor\ncontext: additional context used to generate the response\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "videoRecommendations",
        "nullable": true,
        "type": "VideoRecommendationsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LIST",
            "list": true,
            "name": "ids",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Retrieves Videos for all given video Ids. Maximum batch size is 100 videos\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": true,
        "name": "videos",
        "nullable": false,
        "type": "Video"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "WatchProvidersQueryFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "WatchProvidersQueryFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Paginated list of all available watch providers in the requester's location, sorted alphabetically.\nMaximum page size supported is 250.\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "watchProviders",
        "nullable": true,
        "type": "WatchProviderConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "WebAdsInput"
          }
        ],
        "description": "Query used to fetch display ads for a specific web page.\nReturns ad slots and their creative info for the requested slots.\nThrows SERVICE_UNAVAILABLE_ERROR if unable to render page header markup template.\nThrows BAD_USER_INPUT if bid request to PAS fails input validation.\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "webAds",
        "nullable": false,
        "type": "WebAdsOutput"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "WebAdsInput"
          }
        ],
        "description": "Get configuration information for web ads on a specific page.\nThrows SERVICE_UNAVAILABLE_ERROR if unable to render ad creative markup template.\nFails open on other dependency failures, returning minimal ad response.\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "webAdsConfig",
        "nullable": false,
        "type": "WebAdsConfigOutput"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Query",
    "possibleTypes": []
  },
  "QueryStubs": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "matrix",
        "nullable": true,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "QueryStubs",
    "possibleTypes": []
  },
  "RadioGroupFieldConstraints": {
    "args": [],
    "description": "Defines standard form constraints for a radio group type of input.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Specifies if the customer must select an option in the radio group",
        "kind": "",
        "list": false,
        "name": "isRequired",
        "nullable": true,
        "type": "BooleanValidationConstraint"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RadioGroupFieldConstraints",
    "possibleTypes": []
  },
  "RankChange": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Indicates whether the current rank is better (UP), worse (DOWN), or unchanged (FLAT) from the previous rank",
        "kind": "",
        "list": false,
        "name": "changeDirection",
        "nullable": false,
        "type": "RankChangeDirection"
      },
      {
        "args": [],
        "description": "A non-negative integer indicating the difference between the current and the previous ranks",
        "kind": "",
        "list": false,
        "name": "difference",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RankChange",
    "possibleTypes": []
  },
  "RankChangeDirection": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "DOWN"
      },
      {
        "description": null,
        "name": "FLAT"
      },
      {
        "description": null,
        "name": "UP"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "RankChangeDirection",
    "possibleTypes": []
  },
  "RankedLifetimeBoxOfficeGross": {
    "args": [],
    "description": "The lifetime gross for the title within the relevant area.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The BoxOfficeAreaType the gross is related to.",
        "kind": "",
        "list": false,
        "name": "boxOfficeAreaType",
        "nullable": false,
        "type": "BoxOfficeAreaType"
      },
      {
        "args": [],
        "description": "The all-time rank for the title.",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The total amount the title made at the box office.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Money"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RankedLifetimeBoxOfficeGross",
    "possibleTypes": []
  },
  "RankedLifetimeBoxOfficeGrossConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of ranked lifetime box office grosses",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "RankedLifetimeBoxOfficeGrossEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RankedLifetimeBoxOfficeGrossConnection",
    "possibleTypes": []
  },
  "RankedLifetimeBoxOfficeGrossEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "An ranked lifetime box office gross node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "RankedLifetimeBoxOfficeGross"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: ranked lifetime box office gross 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RankedLifetimeBoxOfficeGrossEdge",
    "possibleTypes": []
  },
  "RankedLifetimeBoxOfficeGrossFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "boxOfficeAreaCodes",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RankedLifetimeBoxOfficeGrossFilter",
    "possibleTypes": []
  },
  "RankedTitleList": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their ranks",
        "list": false,
        "name": "rankRange",
        "nullable": true,
        "type": "IntRangeInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Select a ranking algorithm",
        "list": false,
        "name": "rankedTitleListType",
        "nullable": false,
        "type": "RankedTitleListType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RankedTitleList",
    "possibleTypes": []
  },
  "RankedTitleListSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must be in ALL of these ranked title lists.",
        "list": true,
        "name": "allRankedTitleLists",
        "nullable": true,
        "type": "RankedTitleList"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must be in NONE of these ranked title lists.\n\nIf the same input is specified in the all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeRankedTitleLists",
        "nullable": true,
        "type": "RankedTitleList"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RankedTitleListSearchConstraint",
    "possibleTypes": []
  },
  "RankedTitleListType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Ranking description: https://w.amazon.com/bin/view/IMDb/Ratings/Build/Logic#Lowest_Rated_Movies",
        "name": "LOWEST_RATED_MOVIES"
      },
      {
        "description": "Popularity-based ranking that aggregates titles of type movie, short, and video.",
        "name": "MOVIE_METER"
      },
      {
        "description": "Popularity-based ranking that aggregates titles of all types aside from episodes (like podcast, tv, audio ...)",
        "name": "TITLE_METER"
      },
      {
        "description": "Ranking description: https://w.amazon.com/bin/view/IMDb/Ratings/Build/Logic#Top_Rated_Movies",
        "name": "TOP_RATED_MOVIES"
      },
      {
        "description": "Popularity-based ranking that aggregates titles of type tv_series, tv_miniseries, tv_movie, tv_short, and tv_special",
        "name": "TV_METER"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "RankedTitleListType",
    "possibleTypes": []
  },
  "Rating": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "date",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Rating",
    "possibleTypes": []
  },
  "RatingValueConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Condition we'll be using to match the titles ratings",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "RatingsCondition"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their user rating",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RatingValueConstraint",
    "possibleTypes": []
  },
  "RatingsBody": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The ratings body code.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Display text for the rating body.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RatingsBody",
    "possibleTypes": []
  },
  "RatingsCondition": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "EQUALS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "RatingsCondition",
    "possibleTypes": []
  },
  "RatingsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "RatingsEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RatingsConnection",
    "possibleTypes": []
  },
  "RatingsConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "ratings",
        "nullable": true,
        "type": "RatingValueConstraint"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RatingsConstraints",
    "possibleTypes": []
  },
  "RatingsEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "RatingsResult"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RatingsEdge",
    "possibleTypes": []
  },
  "RatingsExportDetail": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The date when the export becomes unavailable.\nAfter this date, the export will no longer be returned by the backend.",
        "kind": "",
        "list": false,
        "name": "expiresOn",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "exportType",
        "nullable": false,
        "type": "ExportType"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "resultUrl",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "startedOn",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ExportStatus"
      },
      {
        "args": [],
        "description": "number of objects in the export",
        "kind": "",
        "list": false,
        "name": "totalExportedObjects",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RatingsExportDetail",
    "possibleTypes": []
  },
  "RatingsPrivacy": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the ratings privacy setting",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The ratings privacy setting.",
        "kind": "",
        "list": false,
        "name": "setting",
        "nullable": false,
        "type": "RatingsPrivacySetting"
      },
      {
        "args": [],
        "description": "Localized string value of ratings privacy setting.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RatingsPrivacy",
    "possibleTypes": []
  },
  "RatingsPrivacySetting": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Ratings are always private",
        "name": "PRIVATE"
      },
      {
        "description": "Ratings are always public",
        "name": "PUBLIC"
      },
      {
        "description": "Ratings are only public with attached review",
        "name": "PUBLIC_WITH_REVIEWS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "RatingsPrivacySetting",
    "possibleTypes": []
  },
  "RatingsResult": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Retrieve user's rating data for the associated title. A null value is supported here\nin case a rating does not exist.\nError cases:\n- Throws FORBIDDEN if requesting user is not authorized to view this rating\nThis field intentionally mirrors Title.userRating's behavior to maintain\nconsistency across the API. While the same information could be accessed via\ntitle.userRating, this field provides better performance when retrieving multiple ratings",
        "kind": "",
        "list": false,
        "name": "userRating",
        "nullable": true,
        "type": "Rating"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RatingsResult",
    "possibleTypes": []
  },
  "RatingsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "RatingsSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RatingsSort",
    "possibleTypes": []
  },
  "RatingsSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort by most recent rating date.\nASC: Oldest ratings will be first.\nDESC: Newest ratings will be first.",
        "name": "MOST_RECENT"
      },
      {
        "description": "Sort by highest rating\nASC: Highest ratings will be first.\nDESC: Lowest ratings will be first.",
        "name": "TOP_RATED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "RatingsSortBy",
    "possibleTypes": []
  },
  "RatingsSummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "aggregateRating",
        "nullable": true,
        "type": "Float"
      },
      {
        "args": [],
        "description": "Optional notification text to be displayed about ratings summary.\nNotification language will default to English for now",
        "kind": "",
        "list": false,
        "name": "notificationText",
        "nullable": true,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "topRanking",
        "nullable": true,
        "type": "TopRanking"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "voteCount",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RatingsSummary",
    "possibleTypes": []
  },
  "RatingsSummaryByCountry": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "aggregate",
        "nullable": false,
        "type": "Float"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": false,
        "type": "Country"
      },
      {
        "args": [],
        "description": "Defaults to English for now",
        "kind": "",
        "list": false,
        "name": "displayText",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "voteCount",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RatingsSummaryByCountry",
    "possibleTypes": []
  },
  "Reaction": {
    "args": [],
    "description": "Defines the base Reaction type, holding a description and ID",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Obfuscated identifier for the localized reaction",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Unique, readable identifier for the reaction",
        "kind": "",
        "list": false,
        "name": "reactionId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "User-visible description of the reaction",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Reaction",
    "possibleTypes": []
  },
  "ReactionSummary": {
    "args": [],
    "description": "Holds a reaction and its current count",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Current reaction count",
        "kind": "",
        "list": false,
        "name": "count",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Count used for display purposes, utilizes truncation. For example '3200' will be truncated to '3.2k'",
        "kind": "",
        "list": false,
        "name": "displayCount",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The entity reaction",
        "kind": "",
        "list": false,
        "name": "reaction",
        "nullable": false,
        "type": "Reaction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReactionSummary",
    "possibleTypes": []
  },
  "ReactionSummaryGroup": {
    "args": [],
    "description": "Defines a group of reactions",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Sum of all reaction counts in the group",
        "kind": "",
        "list": false,
        "name": "aggregateCount",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Count used for display purposes, utilizes truncation. For example '3200' will be truncated to '3.2k'",
        "kind": "",
        "list": false,
        "name": "displayCount",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "Unique identifier for the group.",
        "kind": "",
        "list": false,
        "name": "groupId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "List of reactions in the group, and their individual counts",
        "kind": "",
        "list": true,
        "name": "reactionSummaries",
        "nullable": false,
        "type": "ReactionSummary"
      },
      {
        "args": [],
        "description": "Denotes if a given ReactionsGroup should allow a SINGLE reaction to be selected, or MULTIPLE",
        "kind": "",
        "list": false,
        "name": "selectionType",
        "nullable": false,
        "type": "ReactionsGroupSelectionType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReactionSummaryGroup",
    "possibleTypes": []
  },
  "ReactionsGroupSelectionType": {
    "args": [],
    "description": "Denotes if a given ReactionsGroup should allow a SINGLE reaction to be selected,\nor MULTIPLE",
    "enumValues": [
      {
        "description": "Denotes there is no limit to the number of reactions from a group that may be selected",
        "name": "MULTIPLE"
      },
      {
        "description": "Denotes only one reaction from the group may be selected at a time",
        "name": "SINGLE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ReactionsGroupSelectionType",
    "possibleTypes": []
  },
  "ReactionsSummary": {
    "args": [],
    "description": "Defines list of Reaction Summary Groups",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Array of multiple groups of reactions\nSorted by aggregate count, descending\nGroups each set of reactions, defines how many reactions can be selected from\nthe group at a time, and provides an aggregate count for all reactions in the group",
        "kind": "",
        "list": true,
        "name": "reactionSummaryGroups",
        "nullable": false,
        "type": "ReactionSummaryGroup"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReactionsSummary",
    "possibleTypes": []
  },
  "RecentVideosQueryFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "contentTypes",
        "nullable": true,
        "type": "VideoContentTypeId"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RecentVideosQueryFilter",
    "possibleTypes": []
  },
  "RecentlyViewedConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "RecentlyViewedEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "refTag",
        "nullable": true,
        "type": "RefTag"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RecentlyViewedConnection",
    "possibleTypes": []
  },
  "RecentlyViewedEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "RecentlyViewedItem"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RecentlyViewedEdge",
    "possibleTypes": []
  },
  "RecentlyViewedItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "RecentlyViewedItem",
    "possibleTypes": [
      "Company",
      "Name",
      "Title"
    ]
  },
  "RecentlyViewedItemsFilter": {
    "args": [],
    "description": "Filter which recently viewed items to return",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "domain",
        "nullable": false,
        "type": "BusinessDomain"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RecentlyViewedItemsFilter",
    "possibleTypes": []
  },
  "RecentlyViewedStatistics": {
    "args": [],
    "description": "Recent page view statistics for a given Pro claimed name page,\nincluding a more detailed breakdown if available",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Summary of profession counts of people who viewed the page",
        "kind": "",
        "list": false,
        "name": "professionCountsSummary",
        "nullable": true,
        "type": "ProfessionCountsSummary"
      },
      {
        "args": [],
        "description": "Number of unique customers who viewed the page",
        "kind": "",
        "list": false,
        "name": "uniquePageViewCount",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RecentlyViewedStatistics",
    "possibleTypes": []
  },
  "RecommendationExplanation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RecommendationExplanation",
    "possibleTypes": []
  },
  "RecommendedVideoTimedTextTrackFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "If no VideoTimedTextTrackFormat is provided it will default to SRT.",
        "list": false,
        "name": "format",
        "nullable": true,
        "type": "VideoTimedTextTrackFormat"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Used to override the language from the x-imdb-user-language header.",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "Language"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RecommendedVideoTimedTextTrackFilter",
    "possibleTypes": []
  },
  "RedirectLink": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The text to display for the link",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The URL to redirect to",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RedirectLink",
    "possibleTypes": []
  },
  "RefTag": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "ep13nReftag",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RefTag",
    "possibleTypes": []
  },
  "RegionCertificateRatingInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "For example: 'PG-13'",
        "list": false,
        "name": "rating",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "For example: 'US'",
        "list": false,
        "name": "region",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RegionCertificateRatingInput",
    "possibleTypes": []
  },
  "RelatedNews": {
    "args": [],
    "description": "Details of news items related to a particular article",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Entity of the title, name, or company mentioned in the input article",
        "kind": "",
        "list": false,
        "name": "entity",
        "nullable": false,
        "type": "NewsEntity"
      },
      {
        "args": [],
        "description": "List of most recent items about the entity",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "News"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RelatedNews",
    "possibleTypes": []
  },
  "RelationName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Relative displayable property as Markdown",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableRelationNameProperty"
      },
      {
        "args": [],
        "description": "Name association to the relative if the relative has an IMDb Name that is known",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "Name"
      },
      {
        "args": [],
        "description": "Display name text as plain text",
        "kind": "",
        "list": false,
        "name": "nameText",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RelationName",
    "possibleTypes": []
  },
  "RelationshipTypeFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "CHILDREN"
      },
      {
        "description": null,
        "name": "OTHERS"
      },
      {
        "description": null,
        "name": "PARENTS"
      },
      {
        "description": null,
        "name": "UNRELATED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "RelationshipTypeFilter",
    "possibleTypes": []
  },
  "ReleaseDate": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Additional attributes",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "LocalizedDisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "day",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The release date displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleReleaseDateProperty"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "month",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "ReleaseDateRestriction"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReleaseDate",
    "possibleTypes": []
  },
  "ReleaseDateConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ReleaseDateEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReleaseDateConnection",
    "possibleTypes": []
  },
  "ReleaseDateEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ReleaseDate"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReleaseDateEdge",
    "possibleTypes": []
  },
  "ReleaseDateRestriction": {
    "args": [],
    "description": "Information about restrictions applied to release date",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReleaseDateRestriction",
    "possibleTypes": []
  },
  "ReleaseDateSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The earliest release date for a title must fall within the specified range",
        "list": false,
        "name": "releaseDateRange",
        "nullable": true,
        "type": "DateRange"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ReleaseDateSearchConstraint",
    "possibleTypes": []
  },
  "RepresentationRelationshipType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An obfuscated persistent id to uniquely identify this data",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "A non-localized, somewhat human readable string representing this relationship\ntype\n\nIntended to support filtering or search behavior where we need a unique\nway to represent this relationship type\n\nExample: 'talentAgent'",
        "kind": "",
        "list": false,
        "name": "relationshipTypeId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The display text for this relationship type - 'Talent Agent'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RepresentationRelationshipType",
    "possibleTypes": []
  },
  "RestrictionExplanation": {
    "args": [],
    "description": "Restriction explanations",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation id",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Restriction reason for which explanation is about.",
        "kind": "",
        "list": false,
        "name": "reason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "A human readable text string, intended to provide details of what is being\nrestricted e.g. Cast is limited to 5 for in-development titles.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RestrictionExplanation",
    "possibleTypes": []
  },
  "ResultID": {
    "args": [],
    "description": "An identifier for a given result of a CTA. This value is only unique within the CTA. It is not globally unique.\nWhen provided as a resultOverride, the value must match a resultId for one of the results of the requested CTA.\nOtherwise it will be ignored and the evaluated result for the CTA will be returned.\nIf it does match to a result, the back-end conditional logic is skipped and the matching result is returned.\nIf the CTA supports a \"do not display\" result, the resultId to use for override will be \"DoNotDisplayResult\".\nResult override should be used for testing purposes only.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "SCALAR",
    "name": "ResultID",
    "possibleTypes": []
  },
  "Resume": {
    "args": [],
    "description": "All fields under this type are considered self-verified. This means that we accept the Pro customer's submission for\n  their own name page at face value and display it on their page without any guarantees of its validity.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Self verified additional awards for this name.",
        "kind": "",
        "list": false,
        "name": "additionalAwards",
        "nullable": true,
        "type": "SelfVerifiedAwardConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "AdditionalCreditCategoriesInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "AdditionalCreditCategoriesInput"
          }
        ],
        "description": "Self verified additional credits data for this name.",
        "kind": "",
        "list": false,
        "name": "additionalCreditCategories",
        "nullable": true,
        "type": "ResumeAdditionalCreditsCategories"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Self verified additional resume sections for this name.",
        "kind": "",
        "list": false,
        "name": "additionalResumeInfo",
        "nullable": true,
        "type": "AdditionalResumeInfoConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Self verified training history data for this name.",
        "kind": "",
        "list": false,
        "name": "education",
        "nullable": true,
        "type": "SelfVerifiedEducationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "sections",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "Self verified performer profile data for this name.",
        "kind": "",
        "list": true,
        "name": "performerProfile",
        "nullable": true,
        "type": "ResumeDataItem"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "sections",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "Self verified personal details data for this name.",
        "kind": "",
        "list": true,
        "name": "personalDetails",
        "nullable": true,
        "type": "ResumeDataItem"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "sections",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "Self verified profession background data for this name.",
        "kind": "",
        "list": true,
        "name": "professionalBackground",
        "nullable": true,
        "type": "ResumeDataItem"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Self verified references for this name.",
        "kind": "",
        "list": false,
        "name": "references",
        "nullable": true,
        "type": "SelfVerifiedReferenceConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NON_NULL",
            "list": true,
            "name": "sections",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "Self verified skills data for this name.",
        "kind": "",
        "list": true,
        "name": "skills",
        "nullable": true,
        "type": "ResumeDataItem"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Self verified training history data for this name.",
        "kind": "",
        "list": false,
        "name": "training",
        "nullable": true,
        "type": "SelfVerifiedTrainingConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Resume",
    "possibleTypes": []
  },
  "ResumeAdditionalCreditsCategories": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " A list of categories for additional credits on a name page. ",
        "kind": "",
        "list": true,
        "name": "categories",
        "nullable": false,
        "type": "ResumeAdditionalCreditsCategory"
      },
      {
        "args": [],
        "description": " The total number of categories returned. ",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ResumeAdditionalCreditsCategories",
    "possibleTypes": []
  },
  "ResumeAdditionalCreditsCategory": {
    "args": [],
    "description": "These categories differ from normal credit categories and are specific to the\n  unvetted additional credits pro customers can add to their resume.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "A list of credits belonging to this category.\n\nOrdered by ascending contribution date.",
        "kind": "",
        "list": true,
        "name": "credits",
        "nullable": false,
        "type": "AdditionalCreditItem"
      },
      {
        "args": [],
        "description": " The unique identifier for the credit category. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The displayable title for the category. ",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The total number of credits in this category. ",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ResumeAdditionalCreditsCategory",
    "possibleTypes": []
  },
  "ResumeDataItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The label for the data item.",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The value for the data item.",
        "kind": "",
        "list": true,
        "name": "values",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ResumeDataItem",
    "possibleTypes": []
  },
  "RetrieveAccountDataInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Part of the confirmation link",
        "list": false,
        "name": "dataRequestId",
        "nullable": false,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RetrieveAccountDataInput",
    "possibleTypes": []
  },
  "RetrieveAccountDataOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Returns the file metadata for the requested data. Will return one file.",
        "kind": "",
        "list": true,
        "name": "fileMetadata",
        "nullable": false,
        "type": "FileMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "message",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "success",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RetrieveAccountDataOutput",
    "possibleTypes": []
  },
  "Review": {
    "args": [],
    "description": "Cacheable except when query includes correctionLink and/or deletionLink fields.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "author",
        "nullable": true,
        "type": "UserProfile"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "authorRating",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the Contribute Site link for the requesting user to edit the review if they authored it.\nReturns null if the requesting user did not author the review.\n\n---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "correctionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the Contribute Site link for the requesting user to delete the review if they authored it.\nReturns null if the requesting user did not author the review.\n\n---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "deletionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "helpfulness",
        "nullable": true,
        "type": "ReviewHelpfulness"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "Language"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the review reporting link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "reportingLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "spoiler",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "submissionDate",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "summary",
        "nullable": true,
        "type": "ReviewSummary"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "ReviewText"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Review",
    "possibleTypes": []
  },
  "ReviewEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Review"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReviewEdge",
    "possibleTypes": []
  },
  "ReviewHelpfulness": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "downVotes",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "score",
        "nullable": false,
        "type": "Float"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "upVotes",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReviewHelpfulness",
    "possibleTypes": []
  },
  "ReviewSummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "originalText",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReviewSummary",
    "possibleTypes": []
  },
  "ReviewText": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "originalText",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReviewText",
    "possibleTypes": []
  },
  "ReviewsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ReviewEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ReviewsConnection",
    "possibleTypes": []
  },
  "ReviewsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter by author's Rating value. Ratings value can be any integer between 1 and 10.",
        "list": false,
        "name": "authorRating",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter reviews based on whether they contain spoilers.",
        "list": false,
        "name": "spoiler",
        "nullable": true,
        "type": "FilterInclusion"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ReviewsFilter",
    "possibleTypes": []
  },
  "ReviewsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "ReviewsSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ReviewsSort",
    "possibleTypes": []
  },
  "ReviewsSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "HELPFULNESS_SCORE"
      },
      {
        "description": null,
        "name": "SUBMISSION_DATE"
      },
      {
        "description": null,
        "name": "SUBMITTER_REVIEW_COUNT"
      },
      {
        "description": null,
        "name": "TOTAL_VOTES"
      },
      {
        "description": null,
        "name": "USER_RATING"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ReviewsSortBy",
    "possibleTypes": []
  },
  "Runtime": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleRuntimeProperty"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "seconds",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Runtime",
    "possibleTypes": []
  },
  "RuntimeConnection": {
    "args": [],
    "description": "Pagination for Runtime types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Runtime",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "RuntimeEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RuntimeConnection",
    "possibleTypes": []
  },
  "RuntimeEdge": {
    "args": [],
    "description": "Page of Runtime",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Runtime node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Runtime"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Runtime 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "RuntimeEdge",
    "possibleTypes": []
  },
  "RuntimeSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must have a runtime within the specified range",
        "list": false,
        "name": "runtimeRangeMinutes",
        "nullable": true,
        "type": "IntRangeInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "RuntimeSearchConstraint",
    "possibleTypes": []
  },
  "Salary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "amount",
        "nullable": true,
        "type": "Money"
      },
      {
        "args": [],
        "description": "The attributes/qualifiers of that salary",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": true,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "The salary as a displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableSalaryProperty"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The title for which this salary applies.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Salary",
    "possibleTypes": []
  },
  "SalaryConnection": {
    "args": [],
    "description": "Pagination for Salary",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Salary",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SalaryEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SalaryConnection",
    "possibleTypes": []
  },
  "SalaryEdge": {
    "args": [],
    "description": "Page of Salary",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the person's salaries",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Salary"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Salary 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SalaryEdge",
    "possibleTypes": []
  },
  "SavedSearchFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The time when the filter was created",
        "kind": "",
        "list": false,
        "name": "createdTimestamp",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The name of the saved filter",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Generated field, this will be unique under the same user and filter type.",
        "kind": "",
        "list": false,
        "name": "saveId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The domain the filter applies to, such as Names, Titles etc.\nThe types available are defined in SavedSearchFilterType",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "SavedSearchFilterType"
      },
      {
        "args": [],
        "description": "The time when the filter was last updated",
        "kind": "",
        "list": false,
        "name": "updatedTimestamp",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Url of the filter",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SavedSearchFilter",
    "possibleTypes": []
  },
  "SavedSearchFilterType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Filter on tagged names in lists",
        "name": "LIST_ITEM_NAME_TAGS"
      },
      {
        "description": "Filter on tagged titles in lists",
        "name": "LIST_ITEM_TITLE_TAGS"
      },
      {
        "description": "Filter on Names",
        "name": "NAME"
      },
      {
        "description": "Filter on Titles",
        "name": "TITLE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SavedSearchFilterType",
    "possibleTypes": []
  },
  "SavedSearchFiltersConnection": {
    "args": [],
    "description": "Pagination for SavedSearchFilters.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SavedSearchFiltersEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SavedSearchFiltersConnection",
    "possibleTypes": []
  },
  "SavedSearchFiltersEdge": {
    "args": [],
    "description": "Item in a page of saved search filters results.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Saved search filters node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SavedSearchFilter"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SavedSearchFiltersEdge",
    "possibleTypes": []
  },
  "ScreeningDateTime": {
    "args": [],
    "description": "Date and time of a screening.\nThe screening time will be in the timezone of the Cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "DateTime of the screening in ISO 8601 format.",
        "kind": "",
        "list": false,
        "name": "dateTime",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Unique identifier for this ScreeningDateTime.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the display text for the time of the screening.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Display text for the time of the screening.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ScreeningDateTime",
    "possibleTypes": []
  },
  "SearchAwardCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Search-specific identifier for the award category for use in search filtering.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the display text returned for the award category",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Localized displayable name for the award category.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SearchAwardCategory",
    "possibleTypes": []
  },
  "SearchAwardEvent": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A selection of award categories specific to this event to be displayed as additional search filtering options.",
        "kind": "",
        "list": true,
        "name": "awardCategories",
        "nullable": true,
        "type": "SearchAwardCategory"
      },
      {
        "args": [],
        "description": "The event const. For example, `ev0000003` is the id for Oscars.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the display text returned for the event",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Localized displayable name for the event.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SearchAwardEvent",
    "possibleTypes": []
  },
  "SearchAwardEventOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Collection of events and specific award categories to display as options for search.",
        "kind": "",
        "list": true,
        "name": "events",
        "nullable": false,
        "type": "SearchAwardEvent"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SearchAwardEventOptions",
    "possibleTypes": []
  },
  "SearchFacet": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The value which can be used in a search constraint",
        "kind": "",
        "list": false,
        "name": "filterId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A globally unique identifier for this facet",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The count of entities associated with this facet",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SearchFacet",
    "possibleTypes": []
  },
  "SearchMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Curated list of award events and categories to use as filters for advanced search.",
        "kind": "",
        "list": false,
        "name": "advancedSearchAwardOptions",
        "nullable": false,
        "type": "SearchAwardEventOptions"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SearchMetadata",
    "possibleTypes": []
  },
  "SearchTheaterAttribute": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ONLINE_TICKETING"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SearchTheaterAttribute",
    "possibleTypes": []
  },
  "SearchWatchOptionType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Match titles with any digital watch options including subscriptions and\nrent/buy to stream online.",
        "name": "ANY_DIGITAL"
      },
      {
        "description": "Match titles with a subscription-based streaming watch option\nFor example, watch options on Prime, Hulu, Netflix, etc. that can be streamed\nwith a subscription",
        "name": "SUBSCRIPTION"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SearchWatchOptionType",
    "possibleTypes": []
  },
  "SeasonValueDisplayableProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SeasonValueDisplayableProperty",
    "possibleTypes": []
  },
  "SectionCallToAction": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Contains the action link data",
        "kind": "",
        "list": false,
        "name": "action",
        "nullable": false,
        "type": "ActionLink"
      },
      {
        "args": [],
        "description": "An identifier for the returned result of a CTA.\nA CTA will have multiple potential results, with each result having its own identifier.\nThis value is only unique within the CTA. It is not globally unique.\nThe resultId can be used as resultOverride input argument to specify a specific result\nshould be returned for the requested CTA.",
        "kind": "",
        "list": false,
        "name": "resultId",
        "nullable": false,
        "type": "ResultID"
      },
      {
        "args": [],
        "description": "Provides the secondary localized text for a CTA.",
        "kind": "",
        "list": false,
        "name": "sectionContent",
        "nullable": true,
        "type": "CallToActionText"
      },
      {
        "args": [],
        "description": "Provides the primary localized text for a CTA.",
        "kind": "",
        "list": false,
        "name": "sectionTitle",
        "nullable": true,
        "type": "CallToActionText"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SectionCallToAction",
    "possibleTypes": []
  },
  "SelectFieldConstraints": {
    "args": [],
    "description": "Defines standard form constraints for a select / dropdown type of input,",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Specifies if the customer must select an option in the dropdown/select menu",
        "kind": "",
        "list": false,
        "name": "isRequired",
        "nullable": true,
        "type": "BooleanValidationConstraint"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelectFieldConstraints",
    "possibleTypes": []
  },
  "SelfVerified": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Returns true if the item has been verified by the name owner",
        "kind": "",
        "list": false,
        "name": "isSelfVerified",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerified",
    "possibleTypes": []
  },
  "SelfVerifiedAward": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " The title of the award. ",
        "kind": "",
        "list": false,
        "name": "awardTitle",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Additional details about the award. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name of the event for the award. ",
        "kind": "",
        "list": false,
        "name": "event",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " A unique identifier for a resume self-verified award. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The year in which the award was received. ",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedAward",
    "possibleTypes": []
  },
  "SelfVerifiedAwardConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedAwardEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedAwardConnection",
    "possibleTypes": []
  },
  "SelfVerifiedAwardEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SelfVerifiedAward"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedAwardEdge",
    "possibleTypes": []
  },
  "SelfVerifiedEducation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " The degree that the person received. ",
        "kind": "",
        "list": false,
        "name": "degree",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Additional details about their education. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " A unique identifier for the resume education item. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The location of the school ",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name of the school. ",
        "kind": "",
        "list": false,
        "name": "school",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The year in which they completed their education. ",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedEducation",
    "possibleTypes": []
  },
  "SelfVerifiedEducationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedEducationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedEducationConnection",
    "possibleTypes": []
  },
  "SelfVerifiedEducationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SelfVerifiedEducation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedEducationEdge",
    "possibleTypes": []
  },
  "SelfVerifiedNameAttribute": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Total number of individual values (different than values length, if it is constrained by 'limit' argument)",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The individual values matching input arguments (e.g. 'limit')",
        "kind": "",
        "list": true,
        "name": "values",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameAttribute",
    "possibleTypes": []
  },
  "SelfVerifiedNameAttributeMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Whether this attribute allows free-form text value",
        "kind": "",
        "list": false,
        "name": "allowFreeFormText",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The maximum number of values a customer can have for this attribute. A null value means no limit",
        "kind": "",
        "list": false,
        "name": "limit",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "All valid values for this attribute",
        "kind": "",
        "list": true,
        "name": "validValues",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameAttributeMetadata",
    "possibleTypes": []
  },
  "SelfVerifiedNameAttributeValue": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameAttributeValue",
    "possibleTypes": []
  },
  "SelfVerifiedNameAward": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Any additional details of the award",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "event",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "The unique ID of this award item",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameAward",
    "possibleTypes": []
  },
  "SelfVerifiedNameAwardConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of awards",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedNameAwardEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of awards",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameAwardConnection",
    "possibleTypes": []
  },
  "SelfVerifiedNameAwardEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A single award node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SelfVerifiedNameAward"
      },
      {
        "args": [],
        "description": "1-based position of the node in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameAwardEdge",
    "possibleTypes": []
  },
  "SelfVerifiedNameCredit": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "companyOrDirector",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "The unique ID of this credit item",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "projectTitle",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "roleOrPosition",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "SelfVerifiedNameCreditType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameCredit",
    "possibleTypes": []
  },
  "SelfVerifiedNameCreditConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of credits",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedNameCreditEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of credits",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameCreditConnection",
    "possibleTypes": []
  },
  "SelfVerifiedNameCreditEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A single credit node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SelfVerifiedNameCredit"
      },
      {
        "args": [],
        "description": "1-based position of the node in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameCreditEdge",
    "possibleTypes": []
  },
  "SelfVerifiedNameCreditMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "All credit types",
        "kind": "",
        "list": true,
        "name": "creditTypes",
        "nullable": false,
        "type": "SelfVerifiedNameCreditType"
      },
      {
        "args": [],
        "description": "The maximum number of credits a customer can have for each credit type",
        "kind": "",
        "list": false,
        "name": "limit",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameCreditMetadata",
    "possibleTypes": []
  },
  "SelfVerifiedNameCreditType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameCreditType",
    "possibleTypes": []
  },
  "SelfVerifiedNameCreditTypeFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Type credit types to exclude from the response (cannot be specified together with 'includeTypes')",
        "list": true,
        "name": "excludeTypes",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Type credit types to include in the response (cannot be specified together with 'excludeTypes')",
        "list": true,
        "name": "includeTypes",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SelfVerifiedNameCreditTypeFilter",
    "possibleTypes": []
  },
  "SelfVerifiedNameCreditTypeWithCredits": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "creditType",
        "nullable": false,
        "type": "SelfVerifiedNameCreditType"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "credits",
        "nullable": true,
        "type": "SelfVerifiedNameCreditConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameCreditTypeWithCredits",
    "possibleTypes": []
  },
  "SelfVerifiedNameData": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's accents\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "accents",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [],
        "description": "The age range of characters that the person can play\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "agePlayingRange",
        "nullable": true,
        "type": "AgePlayingRange"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's athletic skills\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "athleticSkills",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's self-verified awards\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "awards",
        "nullable": true,
        "type": "SelfVerifiedNameAwardConnection"
      },
      {
        "args": [],
        "description": "Link for the person's blog\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "blog",
        "nullable": true,
        "type": "BlogLink"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SelfVerifiedNameCreditTypeFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "SelfVerifiedNameCreditTypeFilter"
          }
        ],
        "description": "The person's self-verified credits grouped by credit types\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": true,
        "name": "creditTypes",
        "nullable": true,
        "type": "SelfVerifiedNameCreditTypeWithCredits"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The types of the person's dance skills\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "danceSkills",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's educational history\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "educationalHistory",
        "nullable": true,
        "type": "SelfVerifiedNameEducationalHistoryConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's ethnic appearances, i.e. ethnicities the person appears to be in\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "ethnicAppearances",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [],
        "description": "The person's eye color\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "eyeColor",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "GuildAffiliationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "GuildAffiliationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "The person's guild affiliation visibilities",
        "kind": "",
        "list": false,
        "name": "guildAffiliationVisibilities",
        "nullable": true,
        "type": "GuildAffiliationVisibilitiesConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "GuildAffiliationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "GuildAffiliationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "The person's guild affiliations",
        "kind": "",
        "list": false,
        "name": "guildAffiliations",
        "nullable": true,
        "type": "GuildAffiliationsConnection"
      },
      {
        "args": [],
        "description": "The person's guild status\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "guildStatus",
        "nullable": true,
        "type": "GuildStatus"
      },
      {
        "args": [],
        "description": "The person's hair color\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "hairColor",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "The person's hair length\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "hairLength",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "True if the person has valid passport\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "hasValidPassport",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "True if the person is willing to work unpaid\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "isWillingToWorkUnpaid",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's self-verified job categories\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "jobCategories",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's job titles\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "jobTitles",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Musical instruments that the person can play\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "musicalInstruments",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's performer skills\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "performerSkills",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's personal locations\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "personalLocations",
        "nullable": true,
        "type": "NamePersonalLocations"
      },
      {
        "args": [],
        "description": "The person's physique\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "physique",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "The person's primary citizenship\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "primaryCitizenship",
        "nullable": true,
        "type": "LocalizedDisplayableCountry"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's references from other people\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "references",
        "nullable": true,
        "type": "SelfVerifiedNameReferenceConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's custom sections in resume\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "resumeCustomSections",
        "nullable": true,
        "type": "SelfVerifiedResumeCustomSectionConnection"
      },
      {
        "args": [],
        "description": "The person's additional resume details\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "resumeDetails",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Languages that the person can speak\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "spokenLanguages",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's training experiences\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "trainings",
        "nullable": true,
        "type": "SelfVerifiedNameTrainingConnection"
      },
      {
        "args": [],
        "description": "Link for the person's twitter\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "twitter",
        "nullable": true,
        "type": "TwitterLink"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's unique traits\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "uniqueTraits",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's voice types\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "voiceTypes",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "GetNameWeightInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "GetNameWeightInput"
          }
        ],
        "description": "The person's weight\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "weight",
        "nullable": true,
        "type": "NameWeight"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The person's work authorization information in countries\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "workAuthorizationCountries",
        "nullable": true,
        "type": "WorkAuthorizationCountries"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The credit types the person has ever worked as\n\nThrows UNAUTHENTICATED if not logged in\n@entitlement(PRO_ANY_TIER)",
        "kind": "",
        "list": false,
        "name": "workHistoryCreditTypes",
        "nullable": true,
        "type": "SelfVerifiedNameAttribute"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameData",
    "possibleTypes": []
  },
  "SelfVerifiedNameEducation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "degree",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "The unique ID of this education item",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "school",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameEducation",
    "possibleTypes": []
  },
  "SelfVerifiedNameEducationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A single education item node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": true,
        "type": "SelfVerifiedNameEducation"
      },
      {
        "args": [],
        "description": "1-based position of the node in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameEducationEdge",
    "possibleTypes": []
  },
  "SelfVerifiedNameEducationalHistoryConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of education items",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedNameEducationEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of education items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameEducationalHistoryConnection",
    "possibleTypes": []
  },
  "SelfVerifiedNameMetadata": {
    "args": [],
    "description": "Metadata for some self-verified name data attributes",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "accent",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "athleticSkill",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "award",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "credit",
        "nullable": true,
        "type": "SelfVerifiedNameCreditMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "danceSkill",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "educationalHistory",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "ethnicAppearance",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "eyeColor",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "guildAffiliation",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hairColor",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hairLength",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "jobCategory",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "jobTitle",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "musicalInstrument",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "performerSkill",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "personalLocation",
        "nullable": true,
        "type": "NamePersonalLocationMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "physique",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "primaryCitizenship",
        "nullable": true,
        "type": "CountryAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "reference",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "resumeCustomSection",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "spokenLanguage",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "training",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "uniqueTrait",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "voiceType",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "workAuthorizationCountry",
        "nullable": true,
        "type": "CountryAttributeMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "workHistoryCreditType",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeMetadata"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameMetadata",
    "possibleTypes": []
  },
  "SelfVerifiedNameReference": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "contactInfo",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "The unique ID of this reference item",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "relationship",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameReference",
    "possibleTypes": []
  },
  "SelfVerifiedNameReferenceConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of references",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedNameReferenceEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of references",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameReferenceConnection",
    "possibleTypes": []
  },
  "SelfVerifiedNameReferenceEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A single reference node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SelfVerifiedNameReference"
      },
      {
        "args": [],
        "description": "1-based position of this node in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameReferenceEdge",
    "possibleTypes": []
  },
  "SelfVerifiedNameTraining": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "The unique ID of this training item",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "instructor",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "school",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": true,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameTraining",
    "possibleTypes": []
  },
  "SelfVerifiedNameTrainingConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of trainings",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedNameTrainingEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of trainings",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameTrainingConnection",
    "possibleTypes": []
  },
  "SelfVerifiedNameTrainingEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A single training node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": true,
        "type": "SelfVerifiedNameTraining"
      },
      {
        "args": [],
        "description": "1-based position of the node in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedNameTrainingEdge",
    "possibleTypes": []
  },
  "SelfVerifiedReference": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " A contact value for this reference, can be a phone number, email address, etc. ",
        "kind": "",
        "list": false,
        "name": "contact",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " A unique identifier for this reference item. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The name of their reference. ",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " Their relationship to this reference. ",
        "kind": "",
        "list": false,
        "name": "relationship",
        "nullable": true,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedReference",
    "possibleTypes": []
  },
  "SelfVerifiedReferenceConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedReferenceEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedReferenceConnection",
    "possibleTypes": []
  },
  "SelfVerifiedReferenceEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SelfVerifiedReference"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedReferenceEdge",
    "possibleTypes": []
  },
  "SelfVerifiedResumeCustomSection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "body",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      },
      {
        "args": [],
        "description": "The unique ID of this custom section item",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "SelfVerifiedNameAttributeValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedResumeCustomSection",
    "possibleTypes": []
  },
  "SelfVerifiedResumeCustomSectionConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of customer sections",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedResumeCustomSectionEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of resume custom sections",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedResumeCustomSectionConnection",
    "possibleTypes": []
  },
  "SelfVerifiedResumeCustomSectionEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A single custom section node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SelfVerifiedResumeCustomSection"
      },
      {
        "args": [],
        "description": "1-based position of this node in this context",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedResumeCustomSectionEdge",
    "possibleTypes": []
  },
  "SelfVerifiedTraining": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": " Additional details about the training. ",
        "kind": "",
        "list": false,
        "name": "details",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " A unique identifier for this resume training item. ",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": " The name of the person who instructed them. ",
        "kind": "",
        "list": false,
        "name": "instructor",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The location of the school. ",
        "kind": "",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The name of the school or place where they received training. ",
        "kind": "",
        "list": false,
        "name": "school",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The type of training they received. ",
        "kind": "",
        "list": false,
        "name": "training",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": " The year in which they completed the training. ",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedTraining",
    "possibleTypes": []
  },
  "SelfVerifiedTrainingConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SelfVerifiedTrainingEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedTrainingConnection",
    "possibleTypes": []
  },
  "SelfVerifiedTrainingEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SelfVerifiedTraining"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SelfVerifiedTrainingEdge",
    "possibleTypes": []
  },
  "Series": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "displayableEpisodeNumber",
        "nullable": false,
        "type": "DisplayableEpisodeNumber"
      },
      {
        "args": [],
        "description": "The next episode of this series, if there is one",
        "kind": "",
        "list": false,
        "name": "nextEpisode",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "The previous episode of this series, if there is one",
        "kind": "",
        "list": false,
        "name": "previousEpisode",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "series",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Series",
    "possibleTypes": []
  },
  "SeriesCreditAttribute": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque unique identifier for the displayable SeriesCreditAttribute.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The total number of episodes this attribute appears on",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SeriesCreditAttribute",
    "possibleTypes": []
  },
  "SeverityLevel": {
    "args": [],
    "description": "The severity level of a particular title, together with the number of users\nwho voted for this level of severity.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Severity ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language the text is written in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Severity text, e.g. 'Mild', 'Moderate', 'Severe'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The SeverityVote type used in voteForSeverityTitleParentGuide mutation",
        "kind": "",
        "list": false,
        "name": "voteType",
        "nullable": false,
        "type": "SeverityVote"
      },
      {
        "args": [],
        "description": "The number of users who voted for this level of severity",
        "kind": "",
        "list": false,
        "name": "votedFor",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SeverityLevel",
    "possibleTypes": []
  },
  "SeverityVote": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "MILD"
      },
      {
        "description": null,
        "name": "MODERATE"
      },
      {
        "description": null,
        "name": "NONE"
      },
      {
        "description": null,
        "name": "SEVERE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SeverityVote",
    "possibleTypes": []
  },
  "SharedCreditCategorySummary": {
    "args": [],
    "description": "Count for a CreditCategory, used to fiter the name connections data",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "creditCategory",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [],
        "description": "Number of shared names connections for this Credit Category",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedCreditCategorySummary",
    "possibleTypes": []
  },
  "SharedNameEdge": {
    "args": [],
    "description": "Page of Name that have a 2 degree connection with the input and parent names",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A shared name Item with related info",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SharedNameItem"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: SharedTitleEdge 2 out of 10",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedNameEdge",
    "possibleTypes": []
  },
  "SharedNameItem": {
    "args": [],
    "description": "A shared name item containing all the data related to mutual nmconst",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name of the mutual nmconst",
        "kind": "",
        "list": false,
        "name": "mutualName",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Bounded list of titles shared between the input and mutual nmconsts.\nThe default number of titles returned is 2.\nThe titles are returned in the default order (ie. matching tango).",
        "kind": "",
        "list": true,
        "name": "sharedTitlesWithNameInput",
        "nullable": false,
        "type": "SharedTitle"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Bounded list of titles shared between the parent and mutual nmconsts.\nThe default number of titles returned is 2.\nThe titles are returned in the default order (ie. matching tango).",
        "kind": "",
        "list": true,
        "name": "sharedTitlesWithNamePage",
        "nullable": false,
        "type": "SharedTitle"
      },
      {
        "args": [],
        "description": "Total number of shared titles between the input and mutual nmconsts",
        "kind": "",
        "list": false,
        "name": "totalSharedTitlesWithNameInput",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Total number of shared titles between the parent and mutual nmconsts.",
        "kind": "",
        "list": false,
        "name": "totalSharedTitlesWithNamePage",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedNameItem",
    "possibleTypes": []
  },
  "SharedNamesConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Names that have a 2 degree connection with the input and parent nmconsts",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SharedNameEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of shared names",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedNamesConnection",
    "possibleTypes": []
  },
  "SharedNamesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match the name connections with the credit categories of input-mutual and parent-mutual names",
        "list": true,
        "name": "creditCategoryIds",
        "nullable": false,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SharedNamesFilter",
    "possibleTypes": []
  },
  "SharedNamesInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "NameId used to generate shared names with the parent nameId\nIf no nameId is provided, we will use the claimed nameId of the logged in user.\n\nThrows FORBIDDEN is no nameId is passed in with input AND user does not have an active name claim.",
        "list": false,
        "name": "nameId",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SharedNamesInput",
    "possibleTypes": []
  },
  "SharedNamesResult": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "sharedCreditCategorySummary",
        "nullable": true,
        "type": "SharedCreditCategorySummary"
      },
      {
        "args": [],
        "description": "A connection of shared names",
        "kind": "",
        "list": false,
        "name": "sharedNames",
        "nullable": true,
        "type": "SharedNamesConnection"
      },
      {
        "args": [],
        "description": "Null if customer has connections, otherwise contains messaging for customer.",
        "kind": "",
        "list": false,
        "name": "statusMessage",
        "nullable": true,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedNamesResult",
    "possibleTypes": []
  },
  "SharedNamesSummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Whether or not the current user is in the same network as this name.",
        "kind": "",
        "list": false,
        "name": "inNetwork",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Displayable text for the connections summary. Is null if there are no shared connections.\n\nex. \"In your network\" or \"7 shared connections\"",
        "kind": "",
        "list": false,
        "name": "summaryText",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The total number of shared connection the current user has with this name.",
        "kind": "",
        "list": false,
        "name": "totalSharedConnections",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedNamesSummary",
    "possibleTypes": []
  },
  "SharedTitle": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The job categories the input name is credited with on this title.\nResults are sorted with the acting credit always first, followed by the default crew credit sort order.",
        "kind": "",
        "list": true,
        "name": "nameInputCreditedJobCategories",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The job categories the name page is credited with on this title.\nResults are sorted with the acting credit always first, followed by the default crew credit sort order.",
        "kind": "",
        "list": true,
        "name": "namePageCreditedJobCategories",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [],
        "description": "The title that is shared between two name pages",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedTitle",
    "possibleTypes": []
  },
  "SharedTitleEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID of the shared title",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A shared Title node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SharedTitle"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: SharedTitleEdge 2 out of 10",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedTitleEdge",
    "possibleTypes": []
  },
  "SharedTitlesConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of shared titles between the input and the parent name",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SharedTitleEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of shared titles",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SharedTitlesConnection",
    "possibleTypes": []
  },
  "SharedTitlesInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "NameId used to generate shared titles with the parent nameId.\nIf no nameId is provided, we will use the claimed nameId of the logged in user.\n\nThrows FORBIDDEN is no nameId is passed in with input AND user does not have an active name claim.",
        "list": false,
        "name": "nameId",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SharedTitlesInput",
    "possibleTypes": []
  },
  "Showtime": {
    "args": [],
    "description": "A single showtime for a title at a particular cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for this showtime.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The primary ticketing information for this showtime.\nA null `ticketing` value indicates that there is no ticketing information available.",
        "kind": "",
        "list": false,
        "name": "primaryTicketing",
        "nullable": true,
        "type": "ShowtimeTicketing"
      },
      {
        "args": [],
        "description": "Date and time of the screening.",
        "kind": "",
        "list": false,
        "name": "screeningStart",
        "nullable": false,
        "type": "ScreeningDateTime"
      },
      {
        "args": [],
        "description": "The screening type of this showing (e.g., standard, 3D, IMAX).",
        "kind": "",
        "list": false,
        "name": "screeningType",
        "nullable": false,
        "type": "ShowtimeScreeningType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Showtime",
    "possibleTypes": []
  },
  "ShowtimeScreeningType": {
    "args": [],
    "description": "The type of showtime screening with displayable text.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for this showtime screening type.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the showtime screening type display text.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Localized text indicating the showtime screening type.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ShowtimeScreeningType",
    "possibleTypes": []
  },
  "ShowtimeTicketing": {
    "args": [],
    "description": "Ticketing information for a showtime.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "URL for purchasing tickets for this showtime.",
        "kind": "",
        "list": false,
        "name": "link",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ShowtimeTicketing",
    "possibleTypes": []
  },
  "ShowtimesByScreeningType": {
    "args": [],
    "description": "List of showtimes for this screening type and title at this cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The screening type of the showtimes contained in this object (e.g., standard, 3D, IMAX).",
        "kind": "",
        "list": false,
        "name": "screeningType",
        "nullable": false,
        "type": "ShowtimeScreeningType"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of showtimes for this screening type and title at this cinema.\nOrdered by ascending date time of the showtime/screening.\nIf no limit is provided, all showtimes will be provided for this Title/Cinema and date range. ",
        "kind": "",
        "list": true,
        "name": "showtimes",
        "nullable": false,
        "type": "Showtime"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ShowtimesByScreeningType",
    "possibleTypes": []
  },
  "ShowtimesLocation": {
    "args": [],
    "description": "The location of the client. A lat/long or postal code location must be given for the client input to be valid. If both\nlat/long and postal code are provided we default to using lat/long.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "latLong",
        "nullable": true,
        "type": "LatLong"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "postalCode",
        "nullable": true,
        "type": "ShowtimesPostalCodeLocation"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "This can be null in some cases; see the calling field for more information.\nValue must be greater than 0 and less then or equal to 100,000.",
        "list": false,
        "name": "radiusInMeters",
        "nullable": true,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ShowtimesLocation",
    "possibleTypes": []
  },
  "ShowtimesPostalCodeLocation": {
    "args": [],
    "description": "The location of the client by postal code. The country field is an ISO 3166-1 alpha-2 country code (ex. US or GB).\nThe postalCode field is alpha numeric (ex. 98109 or D-11179).\nSee Supported Countries:\nhttps://help.imdb.com/article/imdb/discover-watch/showtimes-ticket-experience-faq/GVV88QD6CJ8FJ2EK#",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "country",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "postalCode",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ShowtimesPostalCodeLocation",
    "possibleTypes": []
  },
  "ShowtimesTitleConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "ShowtimesTitleEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ShowtimesTitleConnection",
    "possibleTypes": []
  },
  "ShowtimesTitleEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ShowtimesTitleEdge",
    "possibleTypes": []
  },
  "ShowtimesTitlesCinemasMetadata": {
    "args": [],
    "description": "The cinemas to retrieve showtimes for. If no cinemas are provided no showtimes will be returned.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Include titles that are showing in at least one of the specified theaters.\nThere is no guaranteed sort order for results returned.\nThrows `BAD_USER_INPUT` if more than 400 unique cinemas are provided.",
        "list": true,
        "name": "anyCinemaIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Include titles that have showtimes for a given date range.",
        "list": false,
        "name": "dateRange",
        "nullable": true,
        "type": "ShowtimesTitlesDateRangeFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ShowtimesTitlesCinemasMetadata",
    "possibleTypes": []
  },
  "ShowtimesTitlesDateRangeFilter": {
    "args": [],
    "description": "Filter showtimes to those within the given date range. \nIt's strongly recommended to explicitly provide startTime to avoid timezone mismatches between server and client, but if `ShowtimesTitlesDateRangeFilter` is not provided, the startTime will default to server's 'now' and the endTime will default to `3000-01-01T00:00:00Z`.\nIf no endTime is provided, the endTime will default to `3000-01-01T00:00:00Z`.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "endTime",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "startTime",
        "nullable": false,
        "type": "DateTime"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ShowtimesTitlesDateRangeFilter",
    "possibleTypes": []
  },
  "ShowtimesTitlesDateTimeRangeFilter": {
    "args": [],
    "description": "Filter for constraining titles that have a showtime in a theater across a specific date/time range.\nBoth `start` and `end` DateTimes must be in ISO-8601 format (e.g. `2025-06-19T17:35:25Z`).",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The `end DateTime to filter to (inclusive).\nMust be provided in ISO-8601 format (e.g. `2025-06-19T17:35:25Z`).\nDefaults to `3000-01-01T00:00:00Z` if not provided.",
        "list": false,
        "name": "end",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The `start` DateTime to filter from (inclusive).\nMust be provided in ISO-8601 format (e.g. `2025-06-19T17:35:25Z`).",
        "list": false,
        "name": "start",
        "nullable": false,
        "type": "DateTime"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ShowtimesTitlesDateTimeRangeFilter",
    "possibleTypes": []
  },
  "ShowtimesTitlesQueryMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "dateRange",
        "nullable": true,
        "type": "ShowtimesTitlesDateRangeFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "sortField",
        "nullable": false,
        "type": "ShowtimesTitlesSortField"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "sortOrder",
        "nullable": false,
        "type": "ShowtimesTitlesSortOrder"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "ticketingTypes",
        "nullable": true,
        "type": "TicketingType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ShowtimesTitlesQueryMetadata",
    "possibleTypes": []
  },
  "ShowtimesTitlesSortField": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "SHOWTIMES_COUNT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ShowtimesTitlesSortField",
    "possibleTypes": []
  },
  "ShowtimesTitlesSortOrder": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ASC"
      },
      {
        "description": null,
        "name": "DESC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ShowtimesTitlesSortOrder",
    "possibleTypes": []
  },
  "SignInOption": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Redirect URL for the sign in option",
        "kind": "",
        "list": false,
        "name": "redirectURL",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Type of authentication provider",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "AuthProviderType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SignInOption",
    "possibleTypes": []
  },
  "SignInOptionRedirectURLInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional additional web context for URL building including the client context (i.e. ubid token)\nRequired if associationHandle in input is an association handle used in AAP (Amazon account pool) creation/conversion\n    i.e. 'imdb_amazon', 'imdb_pro_amazon', etc., otherwise throws GRAPHQL_VALIDATION_FAILED error",
        "list": false,
        "name": "additionalWebAuthContext",
        "nullable": true,
        "type": "AdditionalWebAuthContext"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Association handle of the login context i.e. imdb_us\nThis will affect the single sign in option returned",
        "list": false,
        "name": "associationHandle",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional URL to return to post sign in, defaults to home page if omitted",
        "list": false,
        "name": "returnURL",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional prefilled email for use on Pro when signing in with an Amazon account email that matches an IMDb account email",
        "list": false,
        "name": "signInPrefilledEmail",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SignInOptionRedirectURLInput",
    "possibleTypes": []
  },
  "SignInOptionRedirectURLOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Option for a user to sign in through IMDb or a Third Party Provider based on association handle provided in input",
        "kind": "",
        "list": false,
        "name": "signInOption",
        "nullable": false,
        "type": "SignInOption"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SignInOptionRedirectURLOutput",
    "possibleTypes": []
  },
  "SignInOptionsRedirectURLsInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Additional web context for URL building including the client context (i.e. ubid token)\nRequired for building cross domain Amazon login redirect URL",
        "list": false,
        "name": "additionalWebAuthContext",
        "nullable": false,
        "type": "AdditionalWebAuthContext"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional flag to tell if you need Amazon login url with email gating.\nDefault returning login url without email gating if not provided\nThis will only affect sign-in with Amazon since Amazon account can be registered with mobile only.\nThis is used for clients who requires customer to have email with their account (For example: Help site)",
        "list": false,
        "name": "amazonAccountEmailGating",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Association handle of the login context i.e. imdb_us\nThis will only affect the 1P IMDb sign in option, all of the other 3P logins will be configured with their own association handles",
        "list": false,
        "name": "associationHandle",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional URL to return to post sign in, defaults to home page if omitted",
        "list": false,
        "name": "returnURL",
        "nullable": true,
        "type": "URL"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SignInOptionsRedirectURLsInput",
    "possibleTypes": []
  },
  "SignInOptionsRedirectURLsOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Options for a user to sign in through IMDb or a Third Party Provider",
        "kind": "",
        "list": true,
        "name": "signInOptions",
        "nullable": false,
        "type": "SignInOption"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SignInOptionsRedirectURLsOutput",
    "possibleTypes": []
  },
  "SingleUserRatingSearchConstraint": {
    "args": [],
    "description": "Constrain the search results based on a user's ratings.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Select whether constraint should restrict-to or exclude titles that the customer has rated.\nExample: undefined if we sort titles by SINGLE_USER_RATING/SINGLE_USER_RATING_DATE without filtering.\nExample: INCLUDE if we restrict to only titles within rating range and sort\ntitles by SINGLE_USER_RATING/SINGLE_USER_RATING_DATE.",
        "list": false,
        "name": "filterType",
        "nullable": true,
        "type": "SingleUserRatingSearchFilterType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on rating given by the requesting user.\nInfers \"min: 1\", or \"max: 10\" if one of those is not provided.\nExample: To restrict to only titles the customer rated between 5-10, use {min: 5}\nExample: To restrict to only titles the customer has rated use {min: 1, max: 5}",
        "list": false,
        "name": "ratingRange",
        "nullable": true,
        "type": "IntRangeInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The user id we are filtering/sorting ratings for.\n\nIf the provided user is invalid or the requested\nuser's ratings are private and not the requesting user, an error will be returned\nidentifying which case occurred.\n- Throws BAD_USER_INPUT if user ID is invalid\n- Throws FORBIDDEN if user is not authorized to retrieve ratings",
        "list": false,
        "name": "userId",
        "nullable": false,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SingleUserRatingSearchConstraint",
    "possibleTypes": []
  },
  "SingleUserRatingSearchFilterType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "EXCLUDE"
      },
      {
        "description": null,
        "name": "INCLUDE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SingleUserRatingSearchFilterType",
    "possibleTypes": []
  },
  "SlotSize": {
    "args": [],
    "description": "Entry in the slots size map.\nThis type serves as an input descriptor of an ad slot, while CreativeSize denotes the size of the returned ad.\nThese are not the same for certain types of ad.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The height of the slot in pixels",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The name of the slot",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The width of the slot in pixels",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SlotSize",
    "possibleTypes": []
  },
  "SortOrder": {
    "args": [],
    "description": "The order in which listed elements should be sorted",
    "enumValues": [
      {
        "description": "Ascending order e.g. 1, 2, 3",
        "name": "ASC"
      },
      {
        "description": "Descending order e.g. 3, 2, 1",
        "name": "DESC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SortOrder",
    "possibleTypes": []
  },
  "SortSearchOrder": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ASC"
      },
      {
        "description": null,
        "name": "DESC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SortSearchOrder",
    "possibleTypes": []
  },
  "SoundMix": {
    "args": [],
    "description": "A sound mix, along with any attributes. For example, we could have a DTS sound that used an RCA sound system.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "attributes",
        "nullable": false,
        "type": "DisplayableAttribute"
      },
      {
        "args": [],
        "description": "Sound mix as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTechnicalSpecificationProperty"
      },
      {
        "args": [],
        "description": "An ID for this sound mix, suitable for use in URLs",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The display text for this sound mix",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SoundMix",
    "possibleTypes": []
  },
  "SoundMixSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of sound mix 'Silent' OR 'Dolby' AND NOT 'Mono',\nspecify anySoundMixTypes: ['silent','dolby'] and excludeSoundMixTypes: ['mono']",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that have the specific sound mix",
        "list": true,
        "name": "anySoundMixTypes",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that do not have the specific sound mix\n\nIf the same input is specified in the any and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeSoundMixTypes",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SoundMixSearchConstraint",
    "possibleTypes": []
  },
  "SoundMixes": {
    "args": [],
    "description": "Sound mixes for this title.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The list of sound mix items",
        "kind": "",
        "list": true,
        "name": "items",
        "nullable": false,
        "type": "SoundMix"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TechnicalSpecificationsRestriction"
      },
      {
        "args": [],
        "description": "Total number of sound mix items",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SoundMixes",
    "possibleTypes": []
  },
  "SoundtrackConnection": {
    "args": [],
    "description": "Pagination for soundtrack items which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of tracks",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SoundtrackEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "SoundtrackRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SoundtrackConnection",
    "possibleTypes": []
  },
  "SoundtrackEdge": {
    "args": [],
    "description": "Page of Tracks",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Track node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Track"
      },
      {
        "args": [],
        "description": "Position of the Track in this context, eg: Track 6 out of 11",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SoundtrackEdge",
    "possibleTypes": []
  },
  "SoundtrackMatchingSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of soundtrack 'Dissolved Girl' OR 'String Quartet', PLUS\nthe title must contain 'Dead Fingers Talking', specify anyAlternateTextTerms: ['Dissolved Girl',\n 'String Quartet'] plus allSoundtrackTextTerms: ['Dead Fomgers Talking'].",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these search terms in at least one of its tracks.",
        "list": true,
        "name": "allSoundtrackTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these search terms in at least one of its tracks.",
        "list": true,
        "name": "anySoundtrackTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SoundtrackMatchingSearchConstraint",
    "possibleTypes": []
  },
  "SoundtrackRestriction": {
    "args": [],
    "description": "Restriction information applied to Soundtracks",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SoundtrackRestriction",
    "possibleTypes": []
  },
  "Source": {
    "args": [],
    "description": "Image source details, including attribution requirements.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Link provided by the image source, if required by the license",
        "kind": "",
        "list": false,
        "name": "attributionUrl",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Attribution banner image, if required by the license",
        "kind": "",
        "list": false,
        "name": "banner",
        "nullable": true,
        "type": "Banner"
      },
      {
        "args": [],
        "description": "The image source ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Displayable text for the image source, if required by the license",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Source",
    "possibleTypes": []
  },
  "SpokenLanguage": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Spoken language as displayable property.",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleSpokenLanguageProperty"
      },
      {
        "args": [],
        "description": "The language code - either an ISO 639 code or an internally defined code if no ISO code exists for the language.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Display text for the language (e.g. 'English').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SpokenLanguage",
    "possibleTypes": []
  },
  "SpokenLanguages": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "DEPRECATED - DO NOT USE",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "spokenLanguages",
        "nullable": false,
        "type": "SpokenLanguage"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SpokenLanguages",
    "possibleTypes": []
  },
  "SpouseAttributes": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The spouse attribute",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the localized text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The localized text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SpouseAttributes",
    "possibleTypes": []
  },
  "SpouseName": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Display name text as plain text, or nmconst link if person is an IMDb name",
        "kind": "",
        "list": false,
        "name": "asMarkdown",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "Name association to the spouse if the spouse has an IMDb Name that is known",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "Name"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SpouseName",
    "possibleTypes": []
  },
  "StaffCategory": {
    "args": [],
    "description": "StaffCategory: The most specific group / org this account belongs to",
    "enumValues": [
      {
        "description": null,
        "name": "IMDb"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "StaffCategory",
    "possibleTypes": []
  },
  "StaffStatus": {
    "args": [],
    "description": "StaffStatus: contains related staff information",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "StaffCategory"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "StaffStatus",
    "possibleTypes": []
  },
  "StreamingTitle": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "refTag",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "StreamingTitle",
    "possibleTypes": []
  },
  "StreamingTitleConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "StreamingTitleEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "StreamingTitleConnection",
    "possibleTypes": []
  },
  "StreamingTitleEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "StreamingTitle"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "StreamingTitleEdge",
    "possibleTypes": []
  },
  "StreamingTitles": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The place where a customer can stream the given titles; for example, \"primeVideo\".\n  \nPlease note given the federated nature of this API there is a chance that this value may be null;\nin those cases you should assume that the returned titles should not be displayed to customers.",
        "kind": "",
        "list": false,
        "name": "provider",
        "nullable": true,
        "type": "WatchProvider"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns a paginated view of the titles that are currently streaming on the provider. Again, if the above\nprovider is requested and null, then these probably should not be shown to customers.",
        "kind": "",
        "list": false,
        "name": "titles",
        "nullable": true,
        "type": "StreamingTitleConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "StreamingTitles",
    "possibleTypes": []
  },
  "StreamingTitlesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Includes streaming titles for below title type category values. At time of writing, streamingTitles() only\nsupports movie and tv title type categories.",
        "list": true,
        "name": "includeTitleTypes",
        "nullable": true,
        "type": "TitleTypeCategoryValue"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Limits the number of providers to get streaming titles for, by pruning the providers list based on size",
        "list": false,
        "name": "maxProviders",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "List of providers to get streaming titles for",
        "list": true,
        "name": "providers",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "StreamingTitlesFilter",
    "possibleTypes": []
  },
  "SuggestionSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "SuggestionSearchEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SuggestionSearchConnection",
    "possibleTypes": []
  },
  "SuggestionSearchConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "nameConstraints",
        "nullable": true,
        "type": "SuggestionSearchNameConstraints"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SuggestionSearchConstraints",
    "possibleTypes": []
  },
  "SuggestionSearchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "SuggestionSearchItem"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SuggestionSearchEdge",
    "possibleTypes": []
  },
  "SuggestionSearchFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "constraints",
        "nullable": true,
        "type": "SuggestionSearchConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "type",
        "nullable": true,
        "type": "SuggestionSearchType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SuggestionSearchFilter",
    "possibleTypes": []
  },
  "SuggestionSearchItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "constId",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "displayLabels",
        "nullable": true,
        "type": "DisplayLabels"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": true,
        "type": "MediaServiceImage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Partial ref tag suffix for overrides.\nEx: 'gnr_act' could be used to represent the Action genre override,\nwhich would then be used to generate a full ref tag such as 'andp_srch_sg_gnr_act'.",
        "kind": "",
        "list": false,
        "name": "refTagFragment",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "releaseYear",
        "nullable": true,
        "type": "YearRange"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "titleTypeId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "topVideos",
        "nullable": true,
        "type": "VideoMedia"
      },
      {
        "args": [],
        "description": "Url path of the IMDb destination page",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "videoCount",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SuggestionSearchItem",
    "possibleTypes": []
  },
  "SuggestionSearchMethodType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": " search index",
        "name": "INSTANT_INDEX_V1"
      },
      {
        "description": "Weighted week + day ranking on the ",
        "name": "instant"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SuggestionSearchMethodType",
    "possibleTypes": []
  },
  "SuggestionSearchNameConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "professions",
        "nullable": true,
        "type": "SuggestionSearchNameProfession"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SuggestionSearchNameConstraints",
    "possibleTypes": []
  },
  "SuggestionSearchNameProfession": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "TALENT_AGENT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SuggestionSearchNameProfession",
    "possibleTypes": []
  },
  "SuggestionSearchOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Controls for different search algorithms. Defaults to basic consumer suggestion search.",
        "list": false,
        "name": "searchType",
        "nullable": false,
        "type": "SuggestionSearchMethodType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SuggestionSearchOptions",
    "possibleTypes": []
  },
  "SuggestionSearchType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "COMPANY"
      },
      {
        "description": null,
        "name": "INTEREST"
      },
      {
        "description": null,
        "name": "NAME"
      },
      {
        "description": null,
        "name": "TITLE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "SuggestionSearchType",
    "possibleTypes": []
  },
  "SymphonyArgument": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SymphonyArgument",
    "possibleTypes": []
  },
  "SymphonyMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "contentId",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "creativeId",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The name of the multi-slot optimization group name. Null if it is not part of an MSO group",
        "kind": "",
        "list": false,
        "name": "multiSlotGroupName",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "The order of the slot in it's multi-slot group. Null if it is not part of an MSO group",
        "kind": "",
        "list": false,
        "name": "multiSlotOrder",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "placementId",
        "nullable": true,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SymphonyMetadata",
    "possibleTypes": []
  },
  "SymphonyMultiValueMapEntry": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "key",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "value",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "SymphonyMultiValueMapEntry",
    "possibleTypes": []
  },
  "SymphonyPlacement": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The key-value pair arguments defined in the symphony component/creative",
        "kind": "",
        "list": true,
        "name": "componentArguments",
        "nullable": false,
        "type": "SymphonyArgument"
      },
      {
        "args": [],
        "description": "The metadata of the Symphony placement.",
        "kind": "",
        "list": false,
        "name": "componentMetadata",
        "nullable": true,
        "type": "SymphonyMetadata"
      },
      {
        "args": [],
        "description": "The name of the widget",
        "kind": "",
        "list": false,
        "name": "componentName",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The name of the slot\neg. \"center-1\"",
        "kind": "",
        "list": false,
        "name": "slot",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "SymphonyPlacement",
    "possibleTypes": []
  },
  "Tagline": {
    "args": [],
    "description": "Tagline details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The tagline displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleTaglineProperty"
      },
      {
        "args": [],
        "description": "The tagline text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Tagline",
    "possibleTypes": []
  },
  "TaglineConnection": {
    "args": [],
    "description": "Pagination for tagline types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of taglines",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TaglineEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TaglineConnection",
    "possibleTypes": []
  },
  "TaglineEdge": {
    "args": [],
    "description": "Page of taglines",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Tagline node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Tagline"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Tagline 4 out of 46",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TaglineEdge",
    "possibleTypes": []
  },
  "TechnicalSpecifications": {
    "args": [],
    "description": "A set of technical specifications",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "aspectRatios",
        "nullable": false,
        "type": "AspectRatios"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cameras",
        "nullable": false,
        "type": "Cameras"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "colorations",
        "nullable": false,
        "type": "Colorations"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "filmLengths",
        "nullable": false,
        "type": "FilmLengths"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "laboratories",
        "nullable": false,
        "type": "Laboratories"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "negativeFormats",
        "nullable": false,
        "type": "NegativeFormats"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "printedFormats",
        "nullable": false,
        "type": "PrintedFormats"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "processes",
        "nullable": false,
        "type": "Processes"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "soundMixes",
        "nullable": false,
        "type": "SoundMixes"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TechnicalSpecifications",
    "possibleTypes": []
  },
  "TechnicalSpecificationsFilter": {
    "args": [],
    "description": "Allows filtering of technical specifications based on different versions of a title.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "versions",
        "nullable": true,
        "type": "FilterVersions"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TechnicalSpecificationsFilter",
    "possibleTypes": []
  },
  "TechnicalSpecificationsRestriction": {
    "args": [],
    "description": "Information about restrictions applied to technicalSpecifications",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TechnicalSpecificationsRestriction",
    "possibleTypes": []
  },
  "Test": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "error",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "@experimental experimental field",
        "kind": "",
        "list": false,
        "name": "experimental",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "result",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "cachebuster",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "limit",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "testItems",
        "nullable": true,
        "type": "TestItem"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Test",
    "possibleTypes": []
  },
  "TestAuth": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cacheableResult",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cacheableResultWithNoCacheCustomerId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cacheableResultWithNoCacheUserId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "clientIp",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "detectedCountry",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hasAuthenticationHeaders",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hasGatewayName",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "hasTransitiveAuthenticationHeaders",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "isInternalClient",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "isNon1PInternalClient",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "nonCacheableResult",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "operationName",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "result",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TestAuth",
    "possibleTypes": []
  },
  "TestAuthTimer": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "authTimer",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TestAuthTimer",
    "possibleTypes": []
  },
  "TestEntitlement": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "entitlement",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "result",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TestEntitlement",
    "possibleTypes": []
  },
  "TestItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TestItem",
    "possibleTypes": []
  },
  "TextAreaFieldConstraints": {
    "args": [],
    "description": "Defines a standard shape for vending form constraints for a text area input.\nCurrently the same as text constraints but in future may include text-area\nspecific constraints such as maximum lines or rows.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Specifies if the customer must provide a non-empty (ie not null or empty string) value",
        "kind": "",
        "list": false,
        "name": "isRequired",
        "nullable": true,
        "type": "BooleanValidationConstraint"
      },
      {
        "args": [],
        "description": "Specifies the maximum allowed number of characters for this text area input",
        "kind": "",
        "list": false,
        "name": "maximumCharacterLength",
        "nullable": true,
        "type": "IntThresholdValidationConstraint"
      },
      {
        "args": [],
        "description": "Specifies the minimum allowed number of characters for this text area input",
        "kind": "",
        "list": false,
        "name": "minimumCharacterLength",
        "nullable": true,
        "type": "IntThresholdValidationConstraint"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TextAreaFieldConstraints",
    "possibleTypes": []
  },
  "TextFieldConstraints": {
    "args": [],
    "description": "Defines a standard shape for vending form constraints for a text input.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Specifies if the customer must provide a non-empty (ie not null or empty string) value",
        "kind": "",
        "list": false,
        "name": "isRequired",
        "nullable": true,
        "type": "BooleanValidationConstraint"
      },
      {
        "args": [],
        "description": "Specifies the maximum allowed number of characters for this text input",
        "kind": "",
        "list": false,
        "name": "maximumCharacterLength",
        "nullable": true,
        "type": "IntThresholdValidationConstraint"
      },
      {
        "args": [],
        "description": "Specifies the minimum allowed number of characters for this text input",
        "kind": "",
        "list": false,
        "name": "minimumCharacterLength",
        "nullable": true,
        "type": "IntThresholdValidationConstraint"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TextFieldConstraints",
    "possibleTypes": []
  },
  "ThirdPartyTrackers": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Third Party trackers to fire when the ad is displayed",
        "kind": "",
        "list": true,
        "name": "impressionTrackers",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Third Party trackers to fire when the title poster image is clicked",
        "kind": "",
        "list": true,
        "name": "titlePosterClickTrackers",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Third Party trackers to fire when the video completes",
        "kind": "",
        "list": true,
        "name": "videoCompleteTrackers",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Third Party trackers to fire when the video reaches the first quartile",
        "kind": "",
        "list": true,
        "name": "videoFirstQuartileTrackers",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Third Party trackers to fire when the video reaches the midpoint",
        "kind": "",
        "list": true,
        "name": "videoMidpointTrackers",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Third Party trackers to fire when the video starts",
        "kind": "",
        "list": true,
        "name": "videoStartTrackers",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Third Party trackers to fire when the video reaches the third quartile",
        "kind": "",
        "list": true,
        "name": "videoThirdQuartileTrackers",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ThirdPartyTrackers",
    "possibleTypes": []
  },
  "Thumbnail": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Thumbnail",
    "possibleTypes": []
  },
  "TicketingType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ONLINE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TicketingType",
    "possibleTypes": []
  },
  "TimeUnit": {
    "args": [],
    "description": "Enums",
    "enumValues": [
      {
        "description": null,
        "name": "SECONDS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TimeUnit",
    "possibleTypes": []
  },
  "Title": {
    "args": [],
    "description": "Title type\nExtends external type.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Aggregate Ratings Breakdown for the title\n\n---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "aggregateRatingsBreakdown",
        "nullable": true,
        "type": "AggregateRatingsBreakdown"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AkaFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AkaFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AkaSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "AkaSort"
          }
        ],
        "description": "Other title texts by which this Title is known\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "akas",
        "nullable": true,
        "type": "AkaConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Alexa top questions.\n\n---------------------\nGraphlet Details:\n- Name: ziggy\n- CTI: IMDb/GraphQL/Ziggy\n- Affected by headers: x-imdb-user-language\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-ziggy",
        "kind": "",
        "list": false,
        "name": "alexaTopQuestions",
        "nullable": true,
        "type": "AlexaQuestionConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Alternate versions for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "alternateVersions",
        "nullable": true,
        "type": "AlternateVersionConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Album products of Amazon Music related to this title\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "amazonMusicAlbums",
        "nullable": true,
        "type": "AmazonMusicProduct"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AwardNominationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "AwardNominationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "AwardNominationsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "AwardNominationsSort"
          }
        ],
        "description": "The awards that the title has won or been nominated for\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "awardNominations",
        "nullable": true,
        "type": "AwardNominationConnection"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "canRate",
        "nullable": true,
        "type": "CanRate"
      },
      {
        "args": [],
        "description": "A full URL to see the title on www.imdb.com\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "canonicalUrl",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "The localized certificate for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "certificate",
        "nullable": true,
        "type": "Certificate"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "CertificatesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "CertificatesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "certificates",
        "nullable": true,
        "type": "CertificatesConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleCinemaShowtimesFallbackOption",
            "list": false,
            "name": "fallback",
            "nullable": true,
            "type": "TitleCinemaShowtimesFallbackOption"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "filter",
            "nullable": false,
            "type": "TitleCinemaShowtimesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "For a given Title, returns the Title's showtimes grouped by cinema and screening type.\n  \nNotes:\n- Only cinemas with showtimes for the requested title will be returned.\n- If both lat/long and postal code are provided to `filter.location`, the location will default to using lat/long.\n- It's strongly recommended to explicitly provide startTime to avoid timezone mismatches between server and client, but if `filter.dateRange` is not provided, the startTime will default to the server's 'now' and the endTime will default to `3000-01-01T00:00:00Z`.\n- If `filter.dateRange.endTime` is not provided, the endTime will default to `3000-01-01T00:00:00Z`.\n- Backwards pagination is not currently supported.\n- If `fallback` is not provided, there will be no fallback logic applied to the response.\n- If `fallback` has `NEXT_AVAILABLE_DATE`  as it's value and the original result contains no data, the graphlet will attempt to fallback the results to the showtimes for the next available date from the provided `filter.dateRange.startTime` input value. If fallback results are found, the `fallback` results field will be non-null and provide information about the fallback result set.\n  \nSorting:\n- If `filter.location` provided, sorting will be in ascending distance from the provided location.\n- If `filter.anyCinemaIds` provided, the sort order will not be guaranteed. Currently, there is no requirement to support any sort for the resulting cinemaShowtimes, since the only use case we have is for a singular cinema, which will only return a single node.\n  \nErrors:\n- Throws `BAD_USER_INPUT` with symbol `filter.location.postalCode` if the location is unknown.\n- Throws `BAD_USER_INPUT` if lat/long is too precise. See `LatLong` input.\n- Throws `BAD_USER_INPUT` if `filter.location.radiusInMeters` is null.\n- Throws `BAD_USER_INPUT` if both or neither `filter.anyCinemaIds` and `filter.location` are provided. Exactly one must be provided.\n- Throws `BAD_USER_INPUT` if both `filter.anyCinemaIds` and `fallback` are provided.\n- Throws `BAD_USER_INPUT` if more than 400 unique cinemas are provided in `filter.anyCinemaIds`.\n  \nLimits:\n- `first` is limited to a maximum of 100. If the `first` argument exceeds the maximum, the results will be capped to the maximum.\n\n---------------------\nGraphlet Details:\n- Name: titleAppointments\n- CTI: IMDb/GraphQL/Title Appointments\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "cinemaShowtimesByScreeningType",
        "nullable": true,
        "type": "TitleCinemaShowtimesByScreeningTypeConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "CompanyCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "CompanyCreditsFilter"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "companyCreditCategories",
        "nullable": true,
        "type": "CompanyCreditCategoryWithCompanyCredits"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "CompanyCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "CompanyCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "companyCredits",
        "nullable": true,
        "type": "CompanyCreditConnection"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "connectionCategories",
        "nullable": true,
        "type": "ConnectionCategoryWithConnections"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ConnectionsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ConnectionsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The connections for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "connections",
        "nullable": true,
        "type": "TitleConnectionConnection"
      },
      {
        "args": [],
        "description": "A list of the countries of origin for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "countriesOfOrigin",
        "nullable": true,
        "type": "CountriesOfOrigin"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Crazy credits for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "crazyCredits",
        "nullable": true,
        "type": "CrazyCreditConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleCreditCategoryWithCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleCreditCategoryWithCreditsFilter"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "creditCategories",
        "nullable": true,
        "type": "TitleCreditCategoryWithCredits"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Cursor from which to begin providing CreditGroupings from.\nUse cursor values vended on CreditGroupingEdge values to continue pagination in subsequent calls.\n\nNote that if you include filtering parameters in an initial call, you must pass the same parameters along with\nyour cursor, to ensure the full listing of credits is consistent.",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "Defines how credits are aggregated together into a single CreditV2 result.\n\nBy default, credits are aggregated by NAME.",
            "kind": "CreditAggregation",
            "list": false,
            "name": "aggregateBy",
            "nullable": true,
            "type": "CreditAggregation"
          },
          {
            "defaultValue": "",
            "description": "Defines the ordering of credits returned.\nWhen many credited roles are aggregated into a single CreditV2 value (for example combining roles across many\ngroupings), we sort based on the lowest-sorting credited role within the CreditV2,\n\nBy default, credits are sorted by importance (see TitleCreditsV2Sort for definition).",
            "kind": "TitleCreditsV2Sort",
            "list": false,
            "name": "creditSort",
            "nullable": true,
            "type": "TitleCreditsV2Sort"
          },
          {
            "defaultValue": "",
            "description": "Allows for filtering in or out of credits based on several criteria.\nSee TitleCreditsV2Filter for details.\n\nBy default, no filtering is applied.",
            "kind": "TitleCreditsV2Filter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleCreditsV2Filter"
          },
          {
            "defaultValue": "",
            "description": "Number of CreditGrouping values to fetch.\nMaximum per request is 100.",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "true",
            "description": "In general: whether to utilise any entitlements passed to alter the behaviour of this API.\nSpecifically: For industry professionals (IMDbPro members) IMDb discloses attachment credits; which are essentially\nrumored credits to in-development title that have not been publicly announced.\n\nWhen false; attachments are not provided, as seen on the IMDb website.\nWhen true; attachments are provided if the requester is entitled to receive the credits.",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Vends name credits for this title, grouped into \"Groupings\" in a way that best represents a title's end credits.\nActor and Actress credits are grouped together in a 'Cast' grouping.\nArchive Footage and similar roles where the person was not directly involved, are kept within this 'Cast' grouping\n(which differs to how name.creditGroupings vends credits).\nAll other credit categories are presented 1-1 as groupings.\n\nGroupings are presented in a fixed order, presenting groupings in an order similar to that seen\non movie or TV end credits. This field is suitable for building experiences that highlight work on a title separately\nacross disciplines, such as displaying all credits for a title.\n\nWhen a name has credits on individual episodes in a series, these are rolled up and presented at the series level\nas a single CreditV2 value, giving a summary of their contribution. Details of individual episodes are available\nfrom \"episodeCredits\" on a CreditedRole within a CreditV2 value, or on the CreditV2 value.\n\nWhen a credit has performed many roles on a title, these are aggregated into a single CreditV2 value, with each\nindividual role represented as a separate CreditedRole within the CreditV2.\nThis makes this field useful for building experiences where you want to show each name for a title only once.\nFor example, credits for The Office (2005-2013) (tt0386676) would include Mindy Kaling (nm1411676) once per grouping.\nAll of their roles as producer (co-executive producer, producer, and so on) are vended as a single CreditV2 value,\nand separate values are given for their roles as actress, writer and director.\nNote that the aggregateBy parameter can be used to disable aggregation for specific groupings.\n\nCredits on in-development titles are only available to clients providing a Pro tier entitlement.\n\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "creditGroupings",
        "nullable": true,
        "type": "CreditGroupingConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleCreditSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "TitleCreditSort"
          }
        ],
        "description": "The entire list of cast & crew members\n\nDefault sort is done by billing order\nIf there is no billing order it is done alphabetically\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "credits",
        "nullable": true,
        "type": "CreditConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Cursor from which to begin providing credits from.\nUse cursor values vended on CreditV2Edge values to continue pagination in subsequent calls.\n\nNote that if you include filtering parameters in an initial call, you must pass the same parameters along with\nyour cursor, to ensure the full listing of credits is consistent.",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Defines how credits are aggregated together into a single CreditV2 result.\n\nBy default, credits are aggregated by NAME.",
            "kind": "CreditAggregation",
            "list": false,
            "name": "aggregateBy",
            "nullable": true,
            "type": "CreditAggregation"
          },
          {
            "defaultValue": "",
            "description": "Defines the ordering of credits returned.\nWhen many credited roles are aggregated into a single CreditV2 value (for example combining roles across many\ngroupings), we sort based on the lowest-sorting credited role within the CreditV2,\n\nBy default, credits are sorted by importance (see TitleCreditsV2Sort for definition).",
            "kind": "TitleCreditsV2Sort",
            "list": false,
            "name": "creditSort",
            "nullable": true,
            "type": "TitleCreditsV2Sort"
          },
          {
            "defaultValue": "",
            "description": "Allows for filtering in or out of credits based on several criteria.\n\nBy default, no filtering is applied.",
            "kind": "TitleCreditsV2Filter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleCreditsV2Filter"
          },
          {
            "defaultValue": "",
            "description": "Number of CreditV2 values to fetch.\nMaximum per request is 250.",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "true",
            "description": "In general: whether to utilise any entitlements passed to alter the behaviour of this API.\nSpecifically: For industry professionals (IMDbPro members) IMDb discloses attachment credits; which are essentially\nrumored credits to in-development title that have not been publicly announced.\n\nWhen false; attachments are not provided, as seen on the IMDb website.\nWhen true; attachments are provided if the requester is entitled to receive the credits.",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Vends name credits for this title.\n\nWhen a name has credits on individual episodes in a series, these are rolled up and presented at the series level\nas a single CreditV2 value, giving a summary of their contribution. Details of individual episodes are available\nfrom \"episodeCredits\" on a CreditedRole within a CreditV2 value.\n\nWhen a credit has performed many roles on a title, these are aggregated into a single CreditV2 value, with each\nindividual role represented as a separate CreditedRole within the CreditV2.\nFor example, credits for The Office (2005-2013) (tt0386676) would include Mindy Kaling (nm1411676) once,\nlisting all of their roles as producer (co-executive producer, producer, and so on), actress, writer and director\nas a single CreditV2.\nThis makes this field useful for building experiences where you want to show each name for a title only once.\nNote that the aggregateBy parameter can be used to disable aggregation for specific groupings.\n\nRelated field title.creditGroupings allows fetching credits for a title, grouped in a way that best represents\na title's end credits. When a single grouping contains large numbers of credits, additional pages of those credits\ncan be fetched using this field (and providing `filter.creditLevelFilter.groupings` to restrict to the grouping\nbeing paginated).\n\nCredits on in-development titles are only available to clients providing a Pro tier entitlement.\n\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "creditsV2",
        "nullable": true,
        "type": "CreditV2Connection"
      },
      {
        "args": [],
        "description": "Return Engagement Statistics for a title\n\n---------------------\nGraphlet Details:\n- Name: engagementData\n- CTI: IMDb/GraphQL/Engagement Data\n- Affected by headers: x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "engagementStatistics",
        "nullable": true,
        "type": "EngagementStatistics"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Cursor from which to begin providing credits from.\nClients wishing to retrieve episode credits can fetch an initial list of episodes for this name-title pair,\nvia the title.creditsV2 or title.creditGroupings field. These calls can provide a cursor to use to fetch episodes\nspecific to a CreditV2 or CreditedRole value.\n\nNote that if you include filtering parameters in an initial call, you must pass the same parameters along with\nyour cursor, to ensure the full listing of credits is consistent.\nFor example, if you first call title.creditsV2 with a filter of `titleType: PODCAST`, you must include this filter\nin your call to title.episodeCredits for the API to know to continue applying this filter.",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Defines how credits are aggregated together into a single CreditV2 result.\n\nBy default, credits are aggregated by NAME.",
            "kind": "CreditAggregation",
            "list": false,
            "name": "aggregateBy",
            "nullable": true,
            "type": "CreditAggregation"
          },
          {
            "defaultValue": "",
            "description": "Allows for filtering in or out of credits based on several criteria.\n\nBy default, no filtering is applied.",
            "kind": "TitleEpisodeCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleEpisodeCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "Number of episode CreditV2 values to fetch.\nMaximum per request is 250.",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "ID of the person/name to fetch episode credits for.\nRequired parameter as episode credits must be scoped to a specific person.",
            "kind": "SCALAR",
            "list": false,
            "name": "nameId",
            "nullable": false,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Defines the ordering of credits returned.\n\nBy default, credits are sorted by release date ascending (see EpisodeCreditsSortBy for definition).",
            "kind": "EpisodeCreditsSortBy",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "EpisodeCreditsSortBy"
          },
          {
            "defaultValue": "true",
            "description": "In general: whether to utilise any entitlements passed to alter the behaviour of this API.\nSpecifically: For industry professionals (IMDbPro members) IMDb discloses attachment credits; which are essentially\nrumored credits to in-development title that have not been publicly announced.\n\nWhen false; attachments are not provided, as seen on the IMDb website.\nWhen true; attachments are provided if the requester is entitled to receive the credits.",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Credits for episodes of this title by a single name. For access to more broad credit data, see\ntitle.creditsV2 and title.creditGroupings fields.\n\nEach episode title is represented by a single CreditV2 value. When a name has performed multiple roles on the title,\nthese are represented as separate CreditedRoles within one CreditV2 value.\n\nCredits on in-development titles are only available to clients providing a Pro tier entitlement.\n\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "episodeCredits",
        "nullable": true,
        "type": "EpisodeCreditConnection"
      },
      {
        "args": [],
        "description": "For titles which are a series, provides information about the episodes of that series\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "episodes",
        "nullable": true,
        "type": "Episodes"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ExperimentalTitleCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ExperimentalTitleCreditsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleCreditSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "TitleCreditSort"
          }
        ],
        "description": "Experimental Field: DO NOT USE. The entire list of credits for the title\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "experimental_credits",
        "nullable": true,
        "type": "ExperimentalCreditConnection"
      },
      {
        "args": [],
        "description": "The requesting user's notification preferences for this title.\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "experimental_trackNotificationPreferences",
        "nullable": true,
        "type": "Experimental_TrackNotificationPreferences"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ExternalLinksFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ExternalLinksFilter"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "externalLinkCategories",
        "nullable": true,
        "type": "ExternalLinkCategoryWithExternalLinks"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ExternalLinksFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ExternalLinksFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "External links for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "externalLinks",
        "nullable": true,
        "type": "ExternalLinkConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "FaqsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "FaqsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Frequently asked questions (FAQs) for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "faqs",
        "nullable": true,
        "type": "FaqConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Featured polls for the title.\nCapped at <LIMIT> polls. No pagination\n\n---------------------\nGraphlet Details:\n- Name: polls\n- CTI: IMDb/GraphQL/Polls\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "featuredPolls",
        "nullable": true,
        "type": "PollsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Featured reviews for the title.\nCapped at 5 reviews. No pagination\n\n---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "featuredReviews",
        "nullable": true,
        "type": "ReviewsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All FilmingDates for the title\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "filmingDates",
        "nullable": true,
        "type": "FilmingDatesConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Title filming locations\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "filmingLocations",
        "nullable": true,
        "type": "FilmingLocationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "GoofCategoryWithGoofsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "GoofCategoryWithGoofsFilter"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "goofCategories",
        "nullable": true,
        "type": "GoofCategoryWithGoofs"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "GoofsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "GoofsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Goofs for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "goofs",
        "nullable": true,
        "type": "GoofConnection"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ImagesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ImagesFilter"
          }
        ],
        "description": "Images related to the title, grouped by image types\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "imageTypes",
        "nullable": true,
        "type": "ImageTypeWithImages"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the 'upload url' Link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "imageUploadLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "Parameter to go around cache, expected to use cursor as a value",
            "kind": "String",
            "list": false,
            "name": "bust",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ImagesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ImagesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "images",
        "nullable": true,
        "type": "ImageConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Paginated list of interests directly tagged to this title. Sorted alphabetically. Supports page size of at most 250.\nRequesting a page size larger than the maximum supported will result in the maximum size being returned.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "interests",
        "nullable": true,
        "type": "InterestConnection"
      },
      {
        "args": [],
        "description": "A boolean flag that indicates whether IMDb considers this title to be primarily pornographic or adult genre.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "isAdult",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "if the writer credits have been verified for this title. WGA is the Writers\nGuild of America they ensure that writers are credited correctly for a given title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "isWGAVerified",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleKeywordItemCategoriesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleKeywordItemCategoriesFilter"
          }
        ],
        "description": "Title keywords grouped by item scope category\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "keywordItemCategories",
        "nullable": true,
        "type": "TitleKeywordItemCategoryWithKeywords"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleKeywordsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "TitleKeywordsSort"
          }
        ],
        "description": "Title keywords.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "keywords",
        "nullable": true,
        "type": "TitleKeywordConnection"
      },
      {
        "args": [],
        "description": "The latest trailer for a title\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "latestTrailer",
        "nullable": true,
        "type": "Video"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "LatestTrailerFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "LatestTrailerFilter"
          }
        ],
        "description": "The latest trailer (player not video) for a title.\nIt's different from 'latestTrailer'. This one is used for querying a title's \nlatest trailer's webviewUrl by filter.\n  \nOptionally, country, preferredAudioLanguage and maturityLevel can be provided in filter to be used to\nsearch for the videos of specific region and with specific language, and filter out \nvideos with mature content. If none are provided, we will set them according to the description \nin LatestTrailerFilter.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "latestTrailerWebviewPlayer",
        "nullable": true,
        "type": "WebviewVideoPlayer"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "boxOfficeArea",
            "nullable": false,
            "type": "BoxOfficeArea"
          }
        ],
        "description": "Liftime gross for this title\n\n---------------------\nGraphlet Details:\n- Name: mojo\n- CTI: IMDb/GraphQL/Mojo\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "lifetimeGross",
        "nullable": true,
        "type": "BoxOfficeGross"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "meta",
        "nullable": true,
        "type": "TitleMeta"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: metacritic\n- CTI: IMDb/GraphQL/Metacritic\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 10800 seconds\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "metacritic",
        "nullable": true,
        "type": "Metacritic"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleMeterRankingInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "TitleMeterRankingInput"
          },
          {
            "defaultValue": "true",
            "description": "",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Returns either the MovieMeter or TVMeter value depending on the title type.\nRanking information beyond 5000 requires entitlement proving Pro subscription.\nUse TITLE_METER in input to get a ranking across both TV Show and movies.\nUse useEntitlement = false to access non entitled version.\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: ranking\n- CTI: IMDb/GraphQL/ProRanking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "meterRank",
        "nullable": true,
        "type": "TitleMeterRanking"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleMeterRankingHistoryInput",
            "list": false,
            "name": "input",
            "nullable": true,
            "type": "TitleMeterRankingHistoryInput"
          }
        ],
        "description": "History of IMDbPro Title meter rankings of a title.\nRequires entitlement proving Pro subscription.\n@entitlement(PRO_PREMIUM)\n\n---------------------\nGraphlet Details:\n- Name: ranking\n- CTI: IMDb/GraphQL/ProRanking\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "meterRankingHistory",
        "nullable": true,
        "type": "TitleMeterRankingHistory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Similar titles to this title. Clients may request a max of 100 similar titles. Number of titles returned may be fewer.\n  \nPagination not supported:\nPagination may produce duplicate title results as the ML model is not deterministic and ranking is affected\nby customer behavioral data. Clients are advised to retrieve titles using a single request for now.\n  \nFor the 'after' parameter, please use 'PageInfo.endCursor' instead of 'MoreLikeThisEdge.cursor'.\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "moreLikeThisTitles",
        "nullable": true,
        "type": "MoreLikeThisConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "News articles about a title\n\n---------------------\nGraphlet Details:\n- Name: bugle\n- CTI: IMDb/GraphQL/Bugle\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "news",
        "nullable": true,
        "type": "NewsConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NominationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "NominationsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "NominationsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "NominationsSort"
          }
        ],
        "description": "The nominations that the title has won or been nominated for\nDefault sort is done by sorting nomination id in ascending order\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "nominations",
        "nullable": true,
        "type": "NominationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "boxOfficeArea",
            "nullable": false,
            "type": "BoxOfficeArea"
          }
        ],
        "description": "Opening weekend gross for this title.\n\n---------------------\nGraphlet Details:\n- Name: mojo\n- CTI: IMDb/GraphQL/Mojo\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "openingWeekendGross",
        "nullable": true,
        "type": "OpeningWeekendGross"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "OpeningWeekendBoxOfficeGrossFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "OpeningWeekendBoxOfficeGrossFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Opening weekend grosses for this title.\n\n---------------------\nGraphlet Details:\n- Name: mojo\n- CTI: IMDb/GraphQL/Mojo\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "openingWeekendGrosses",
        "nullable": true,
        "type": "OpeningWeekendBoxOfficeGrossConnection"
      },
      {
        "args": [],
        "description": "The original text for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "originalTitleText",
        "nullable": true,
        "type": "TitleText"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "parentsGuide",
        "nullable": true,
        "type": "ParentsGuide"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the parental guide contribution link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "parentsGuideContributionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "The plot for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "plot",
        "nullable": true,
        "type": "Plot"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the plot contribution link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "plotContributionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "FilterPlots",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "FilterPlots"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "Return plot outlines in all available locales",
            "kind": "Boolean",
            "list": false,
            "name": "includeAllLocales",
            "nullable": true,
            "type": "Boolean"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The plots for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "plots",
        "nullable": true,
        "type": "PlotConnection"
      },
      {
        "args": [],
        "description": "The most prestigious awards that the title has won or been nominated for\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "prestigiousAwardSummary",
        "nullable": true,
        "type": "PrestigiousAwardSummary"
      },
      {
        "args": [],
        "description": "The primary image for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "An ordered list of the primary videos related to a title.\nIf the first argument exceeds 100, the results will be capped to 100.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "primaryVideos",
        "nullable": true,
        "type": "VideoConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "WatchOptionsLocation",
            "list": false,
            "name": "location",
            "nullable": true,
            "type": "WatchOptionsLocation"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "promotedProvider",
            "nullable": true,
            "type": "String"
          }
        ],
        "description": "Primary watch option determined by ordering the providers based on an order defined by business.\n  \nIf the location is included, returns any location-specific watch options (will be required in the future)\nPromoted provider feature is no longer supported by the Ads team - https://sim.amazon.com/issues/W2W-170. Passing value onto the optional parameter will not have any effect.\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "primaryWatchOption",
        "nullable": true,
        "type": "PrimaryWatchOption"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "PrincipalCreditsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "PrincipalCreditsFilter"
          }
        ],
        "description": "Array of most important credit categories and credits in that category\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "principalCredits",
        "nullable": true,
        "type": "PrincipalCreditsForCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "PrincipalCreditsV2Filter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "PrincipalCreditsV2Filter"
          },
          {
            "defaultValue": "true",
            "description": "In general: whether to utilise any entitlements passed to alter the behaviour of this API.\nSpecifically: For industry professionals (IMDbPro members) IMDb discloses attachment credits; which are essentially\nrumored credits to in-development title that have not been publicly announced.\n\nWhen false; attachments are not provided, as seen on the IMDb website.\nWhen true; attachments are provided if the requester is entitled to receive the credits.",
            "kind": "Boolean",
            "list": false,
            "name": "useEntitlement",
            "nullable": true,
            "type": "Boolean"
          }
        ],
        "description": "Principal Credits gives the primary creative contributors to a title, organized by groupings.\n\nWe group credits in a way that highlights the primary creative roles on a title.\nShowrunner, Creator and Head Writer roles are moved out of their original categories\n(typically 'Producer' and 'Writer') and presented in a separate grouping per role type.\nFor all other credits, the grouping strategy on title.creditGroupings is followed.\nNote that we label the 'Cast' grouping as 'Stars'.\nAlso when the TOP_CAST mode is used (see filter parameter), we vend a \"Top X\" or \"Key X\" text per grouping,\nreplacing the standard text.\n\nThe number of credits per grouping we vend is limited to 30, to reflect that most use cases \nlooking for a summary of principal credits want a limited subset of data. \nFor fuller data see title.creditGroupings.\n\nClients can control the maximum number of groupings returned using the `filter` input. \nThe specific groupings returned will depend on the title type \n(for example giving Showrunner for TV series but not for movies, and Director for movies but not for TV series). \n\nNote that the returned groupings may change over time, as our set of supported credit categories evolves.\n\nPrincipal credits for in-development titles only available when a Pro entitlement is provided. \nWithout this, we only provide access to a count per grouping.\n\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "principalCreditsV2",
        "nullable": true,
        "type": "PrincipalCreditsForGrouping"
      },
      {
        "args": [],
        "description": "Estimated amount of money spent on the entire film project\n\n---------------------\nGraphlet Details:\n- Name: mojo\n- CTI: IMDb/GraphQL/Mojo\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "productionBudget",
        "nullable": true,
        "type": "ProductionBudget"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All productionDates for the title\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "productionDates",
        "nullable": true,
        "type": "ProductionDatesConnection"
      },
      {
        "args": [],
        "description": "Current production stage of the title, and the status history.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "productionStatus",
        "nullable": true,
        "type": "ProductionStatusDetails"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleQuotesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleQuotesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Quotes in this Title\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "quotes",
        "nullable": true,
        "type": "TitleQuoteConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "boxOfficeArea",
            "nullable": false,
            "type": "BoxOfficeArea"
          }
        ],
        "description": "The lifetime box office gross for this title within the specified area. Rank\nis compared to the lifetime grosses of other titles within the specified area.\n\n---------------------\nGraphlet Details:\n- Name: mojo\n- CTI: IMDb/GraphQL/Mojo\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "rankedLifetimeGross",
        "nullable": true,
        "type": "RankedLifetimeBoxOfficeGross"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "RankedLifetimeBoxOfficeGrossFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "RankedLifetimeBoxOfficeGrossFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "The lifetime box office grosses for this title within the specified areas. \nRank is compared to the lifetime grosses of other titles within the specified area.\n\n---------------------\nGraphlet Details:\n- Name: mojo\n- CTI: IMDb/GraphQL/Mojo\n- Affected by headers: x-imdb-client-name\n- Cache TTL: 3600 seconds\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "rankedLifetimeGrosses",
        "nullable": true,
        "type": "RankedLifetimeBoxOfficeGrossConnection"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "ratingsSummary",
        "nullable": true,
        "type": "RatingsSummary"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Paginated list of interests related to this title's interests. Sorted alphabetically. Supports page size of at most 250.\nRequesting a page size larger than the maximum supported will result in the maximum size being returned.\n\n---------------------\nGraphlet Details:\n- Name: interests\n- CTI: IMDb/GraphQL/Interests\n- Affected by headers: x-imdb-client-name, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 600 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "relatedInterests",
        "nullable": true,
        "type": "InterestConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Get lists related to a title\n\n---------------------\nGraphlet Details:\n- Name: list\n- CTI: IMDb/GraphQL/List\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-client-name, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-core-tech",
        "kind": "",
        "list": false,
        "name": "relatedLists",
        "nullable": true,
        "type": "ListCollectionConnection"
      },
      {
        "args": [],
        "description": "The earliest localized release date of the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "releaseDate",
        "nullable": true,
        "type": "ReleaseDate"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleReleaseDatesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleReleaseDatesFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All release dates of the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "releaseDates",
        "nullable": true,
        "type": "ReleaseDateConnection"
      },
      {
        "args": [],
        "description": "The year of the title. The existing IMDb concept of a year that is independent of the release\ndate.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "releaseYear",
        "nullable": true,
        "type": "YearRange"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the review contribution link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "reviewContributionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "A summary of user reviews for this title, including themes.\n\n---------------------\nGraphlet Details:\n- Name: ziggy\n- CTI: IMDb/GraphQL/Ziggy\n- Affected by headers: x-imdb-user-language\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-ziggy",
        "kind": "",
        "list": false,
        "name": "reviewSummary",
        "nullable": true,
        "type": "TitleReviewSummary"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ReviewsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "ReviewsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ReviewsSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "ReviewsSort"
          }
        ],
        "description": "All Reviews for the title.\n\n---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "reviews",
        "nullable": true,
        "type": "ReviewsConnection"
      },
      {
        "args": [],
        "description": "The runtime for the title, in seconds\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "runtime",
        "nullable": true,
        "type": "Runtime"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "All runtimes for the title, in seconds\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "runtimes",
        "nullable": true,
        "type": "RuntimeConnection"
      },
      {
        "args": [],
        "description": "For titles which are part of a series, provides information about its position within the series\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "series",
        "nullable": true,
        "type": "Series"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Sound track for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "soundtrack",
        "nullable": true,
        "type": "SoundtrackConnection"
      },
      {
        "args": [],
        "description": "A list of the languages spoken in the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "spokenLanguages",
        "nullable": true,
        "type": "SpokenLanguages"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Taglines for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "taglines",
        "nullable": true,
        "type": "TaglineConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "TechnicalSpecificationsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TechnicalSpecificationsFilter"
          }
        ],
        "description": "Technical specifications for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "technicalSpecifications",
        "nullable": true,
        "type": "TechnicalSpecifications"
      },
      {
        "args": [],
        "description": "The genres for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "titleGenres",
        "nullable": true,
        "type": "TitleGenres"
      },
      {
        "args": [],
        "description": "The localized text for the title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "titleText",
        "nullable": true,
        "type": "TitleText"
      },
      {
        "args": [],
        "description": "The type of a given title\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "titleType",
        "nullable": true,
        "type": "TitleType"
      },
      {
        "args": [],
        "description": "The requesting user's notification preferences for this title.\nThrows FORBIDDEN if customer does not hve a pro subscription\nThrows UNAUTHENTICATED if logged out\n@entitlement(PRO_ANY_TIER)\n\n---------------------\nGraphlet Details:\n- Name: track\n- CTI: IMDb/GraphQL/Track\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-pro-brand-networking",
        "kind": "",
        "list": false,
        "name": "trackNotificationPreferences",
        "nullable": true,
        "type": "TrackNotificationPreferences"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "before",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "TriviaFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TriviaFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "jumpTo",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "last",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Trivia for a title.\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "trivia",
        "nullable": true,
        "type": "TriviaConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "TriviaCategoryWithTriviaFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TriviaCategoryWithTriviaFilter"
          }
        ],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "triviaCategories",
        "nullable": true,
        "type": "TriviaCategoryWithTrivia"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the 'trivia' Link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "triviaContributionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Optional user id input, if it's not provided ratings retrieved for the authenticated user.",
            "kind": "ID",
            "list": false,
            "name": "userId",
            "nullable": true,
            "type": "ID"
          }
        ],
        "description": "Retrieve user's rating on a title. Returns null if rating does not exist.\nError returned identifying specific error cases.\n- Throws FORBIDDEN for non-authenticated requests or if requesting user is not authorized to retrieve the rating.\n- Throws BAD_USER_INPUT if userId parameter is invalid.\n\n---------------------\nGraphlet Details:\n- Name: ratings\n- CTI: IMDb/GraphQL/Ratings Reviews\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "userRating",
        "nullable": true,
        "type": "Rating"
      },
      {
        "args": [],
        "description": "Returns this customer's watched status of this title.\nCustomerId will be taken from x-imdb-customer-id header.\n- Throws AuthenticationError for non-authenticated requests.\n\n---------------------\nGraphlet Details:\n- Name: watched\n- CTI: IMDb/GraphQL/Watched\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "userWatchedStatus",
        "nullable": true,
        "type": "WatchedStatus"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideosQueryFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "VideosQueryFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideoSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "VideoSort"
          }
        ],
        "description": "An ordered list of prominent videos related to a title\nIf the first argument exceeds 100, the results will be capped to 100.\nWhen there is no sort passed in it, default to the current videoStrip sort logic and behavior.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "videoStrip",
        "nullable": true,
        "type": "VideoConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideosQueryFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "VideosQueryFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideoSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "VideoSort"
          }
        ],
        "description": "Videos related to the title, grouped by video type\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": true,
        "name": "videoTypes",
        "nullable": true,
        "type": "VideoTypeWithVideos"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "WatchOptionsLocation",
            "list": false,
            "name": "location",
            "nullable": true,
            "type": "WatchOptionsLocation"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "providerId",
            "nullable": false,
            "type": "ID"
          }
        ],
        "description": "Returns the watch option from the given provider/location for this title if it is available.\n  \nThe location is required for some providers.\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "watchOption",
        "nullable": true,
        "type": "WatchOption"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "WatchOptionsLocation",
            "list": false,
            "name": "location",
            "nullable": true,
            "type": "WatchOptionsLocation"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "promotedProvider",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "WatchOptionQueryFilter",
            "list": false,
            "name": "queryFilter",
            "nullable": true,
            "type": "WatchOptionQueryFilter"
          }
        ],
        "description": "Watch options for a given titleId.\nThe options are ordered in an order defined by business and grouped by the watch option category.\n  \nIf the location is included, returns any location-specific watch options (will be required in the future)\nPromoted provider feature is no longer supported by the Ads team - https://sim.amazon.com/issues/W2W-170. Passing value onto the optional parameter will not have any effect.\n  \nReturns a list with the maximum number of watch option categories based on the filters. NO PAGINATION\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "watchOptionsByCategory",
        "nullable": true,
        "type": "CategorizedWatchOptionsList"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Title",
    "possibleTypes": []
  },
  "TitleChartMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "chartDescription",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "chartName",
        "nullable": false,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleChartMetadata",
    "possibleTypes": []
  },
  "TitleChartRankingsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleChartRankingsEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "metadata",
        "nullable": false,
        "type": "TitleChartMetadata"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleChartRankingsConnection",
    "possibleTypes": []
  },
  "TitleChartRankingsEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleChartRankingsNode"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleChartRankingsEdge",
    "possibleTypes": []
  },
  "TitleChartRankingsInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "rankingsChartType",
        "nullable": false,
        "type": "TitleChartRankingsType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleChartRankingsInput",
    "possibleTypes": []
  },
  "TitleChartRankingsNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Rating for title that appears on the chart that may be different from ratings on other properties\nSee for details: https://w.amazon.com/bin/view/IMDb/Ratings/Build/Logic/",
        "kind": "",
        "list": false,
        "name": "chartRating",
        "nullable": false,
        "type": "Float"
      },
      {
        "args": [],
        "description": "Count of votes used in determining chart rating for title",
        "kind": "",
        "list": false,
        "name": "chartVoteCount",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "item",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleChartRankingsNode",
    "possibleTypes": []
  },
  "TitleChartRankingsType": {
    "args": [],
    "description": "Enum exposing all the available Title Chart Ranking Types",
    "enumValues": [
      {
        "description": "Overall IMDb Bottom 100 Feature List",
        "name": "BOTTOM_100"
      },
      {
        "description": "Top 50 Bengali Feature List",
        "name": "TOP_50_BENGALI"
      },
      {
        "description": "Top 50 Malayalam Feature List",
        "name": "TOP_50_MALAYALAM"
      },
      {
        "description": "Top 50 Tamil Feature List",
        "name": "TOP_50_TAMIL"
      },
      {
        "description": "Top 50 Telugu Feature List",
        "name": "TOP_50_TELUGU"
      },
      {
        "description": "Overall IMDb Top 250 Feature List",
        "name": "TOP_250"
      },
      {
        "description": "Top 250 English Feature List",
        "name": "TOP_250_ENGLISH"
      },
      {
        "description": "Top 250 Indian Feature List",
        "name": "TOP_250_INDIA"
      },
      {
        "description": "Overall IMDb Top 250 TV List",
        "name": "TOP_250_TV"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleChartRankingsType",
    "possibleTypes": []
  },
  "TitleCinemaShowtimesByScreeningType": {
    "args": [],
    "description": "Showtimes grouped by screening type for a specific title and cinema.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The cinema related to the set of showtimes given in this object. ",
        "kind": "",
        "list": false,
        "name": "cinema",
        "nullable": false,
        "type": "Cinema"
      },
      {
        "args": [],
        "description": "Distance from the requested location to this cinema.\nIf no location input is provided, this field will be null. ",
        "kind": "",
        "list": false,
        "name": "distanceToCinema",
        "nullable": true,
        "type": "DistanceToCinema"
      },
      {
        "args": [],
        "description": "Unique identifier for this TitleCinemaShowtimes.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "List of showtimes for this title at this cinema by screening type.",
        "kind": "",
        "list": true,
        "name": "showtimesByScreeningType",
        "nullable": false,
        "type": "ShowtimesByScreeningType"
      },
      {
        "args": [],
        "description": "The title related to the set of showtimes given in this object. ",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleCinemaShowtimesByScreeningType",
    "possibleTypes": []
  },
  "TitleCinemaShowtimesByScreeningTypeConnection": {
    "args": [],
    "description": "Connection type for paginated cinema showtimes by screening type results.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Edges of TitleCinemaShowtimesByScreeningType.",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleCinemaShowtimesByScreeningTypeEdge"
      },
      {
        "args": [],
        "description": "Contains information about the fallback results when no showtimes were found in the original response.\nOnly populated when fallback is provided as an input and fallback results were found.",
        "kind": "",
        "list": false,
        "name": "fallback",
        "nullable": true,
        "type": "TitleCinemaShowtimesFallbackResult"
      },
      {
        "args": [],
        "description": "Pagination information.",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleCinemaShowtimesByScreeningTypeConnection",
    "possibleTypes": []
  },
  "TitleCinemaShowtimesByScreeningTypeEdge": {
    "args": [],
    "description": "Edge type for cinema showtimes by screening type for a given title in a paginated result.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor for pagination.",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Cinema showtime information for the title.",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleCinemaShowtimesByScreeningType"
      },
      {
        "args": [],
        "description": "Position of this edge in the result set.",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleCinemaShowtimesByScreeningTypeEdge",
    "possibleTypes": []
  },
  "TitleCinemaShowtimesFallbackOption": {
    "args": [],
    "description": "If specified and the original query returns no showtimes, determines how results should be adjusted.\nSee calling field for more information.",
    "enumValues": [
      {
        "description": "Fallback to the next available date of showtimes from the provided `filter.dateRange.startTime` input value, if the original result contains no showtimes.",
        "name": "NEXT_AVAILABLE_DATE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleCinemaShowtimesFallbackOption",
    "possibleTypes": []
  },
  "TitleCinemaShowtimesFallbackResult": {
    "args": [],
    "description": "Contains information about fallback results when the original query returned no showtimes data.\nOnly populated when fallback option is specified and fallback results are found.\nSee calling field for more information.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The ISO 8601 date that the graphlet fell back to.",
        "kind": "",
        "list": false,
        "name": "fallbackDate",
        "nullable": false,
        "type": "Date"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleCinemaShowtimesFallbackResult",
    "possibleTypes": []
  },
  "TitleCinemaShowtimesFilter": {
    "args": [],
    "description": "Input type for filtering cinema showtimes for a title.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter to only include specific cinemas (e.g., `ci1234567`). \nWhen combined with dateRange, will only return cinemas that have showtimes within the specified dates. \nExactly one of `anyCinemaIds` OR `location` must be provided, but not both.\nThrows `BAD_USER_INPUT` if more than 400 unique cinemas are provided.",
        "list": true,
        "name": "anyCinemaIds",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter showtimes by date range.",
        "list": false,
        "name": "dateRange",
        "nullable": true,
        "type": "ShowtimesTitlesDateRangeFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter cinemas based on favorite status.\nIf not provided, defaults to return all cinemas.",
        "list": false,
        "name": "favorites",
        "nullable": true,
        "type": "FavoriteFilterOption"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for cinemas within a certain location.\nIf Provided, the returned array will be in ascending distance from this location.\nExactly one of `anyCinemaIds` OR `location` must be provided, but not both.",
        "list": false,
        "name": "location",
        "nullable": true,
        "type": "ShowtimesLocation"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleCinemaShowtimesFilter",
    "possibleTypes": []
  },
  "TitleConnection": {
    "args": [],
    "description": "Title connection details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The other title in this connection",
        "kind": "",
        "list": false,
        "name": "associatedTitle",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "The category of this connection",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "TitleConnectionCategory"
      },
      {
        "args": [],
        "description": "A description of how these two titles are connected, can contain markdown links to other names and titles",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleConnection",
    "possibleTypes": []
  },
  "TitleConnectionCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleConnectionCategory",
    "possibleTypes": []
  },
  "TitleConnectionConnection": {
    "args": [],
    "description": "Pagination for title connection which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of title connections",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleConnectionEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleConnectionConnection",
    "possibleTypes": []
  },
  "TitleConnectionEdge": {
    "args": [],
    "description": "Page of title connection",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A TitleConnection node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleConnection"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: TitleConnection 3 out of 340",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleConnectionEdge",
    "possibleTypes": []
  },
  "TitleCreditCategoryWithCredits": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "SINGLE",
            "description": "",
            "kind": "CreditCategoryDisplayVariant",
            "list": false,
            "name": "variant",
            "nullable": true,
            "type": "CreditCategoryDisplayVariant"
          }
        ],
        "description": "Returns the credit category for the grouping, default is singular version.",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "CreditCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "credits",
        "nullable": true,
        "type": "CreditConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleCreditCategoryWithCredits",
    "possibleTypes": []
  },
  "TitleCreditCategoryWithCreditsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "credited",
        "nullable": true,
        "type": "CreditedOrUncreditedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "excludePrincipal",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "names",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleCreditCategoryWithCreditsFilter",
    "possibleTypes": []
  },
  "TitleCreditSearchInput": {
    "args": [],
    "description": "If none of the fields is provided the input will be ignored.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The Character name associated with the credit",
        "list": false,
        "name": "character",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The credit category associated with the credit.\n\nValid credit categories can be fetched from the `NAME_CREDIT_CATEGORIES` facet, or from\nthe `nameMetadata.nameCreditCategories` query",
        "list": false,
        "name": "creditCategory",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The job category associated with the credit.\n\nValid job categories can be fetched from the `NAME_JOB_CATEGORIES` facet, or from\nthe `nameMetadata.nameCreditCategories` query",
        "list": false,
        "name": "jobCategory",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The NameId associated with the title credit.",
        "list": false,
        "name": "nameId",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleCreditSearchInput",
    "possibleTypes": []
  },
  "TitleCreditSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "TitleCreditSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleCreditSort",
    "possibleTypes": []
  },
  "TitleCreditSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort by popular cast members",
        "name": "TOP_CAST"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleCreditSortBy",
    "possibleTypes": []
  },
  "TitleCreditsConstraint": {
    "args": [],
    "description": "Example:\n1. if you want to match titles with name const `nm0000138` AND `nm0000206` then specify:\n`\nallCredits: [{nameId: 'nm0000138'}, {nameId: 'nm0000206'}]\n`\n\n2. if you want to match titles where name const `nm0000138` was a `Director` AND `nm0000206` was a `Producer` then\nspecify:\n`\nallCredits: [{nameId: 'nm0000138', jobCategory: 'Director'}, {nameId: 'nm0000206', jobCategory: 'Producer'}]\n`\n\n3. if you want to match titles WITHOUT a `Writer` credit then specify:\n`\nexcludeCredits: [{jobCategory: 'Writer'}]\n`\n\n4. if you want to match Titles where `nm0185819` played `James Bond` AND `nm1560977` was a `Director` then specify:\n`\nallCredits: [{nameId: 'nm0185819', character: 'James Bond'}, {nameId: 'nm1560977', jobCategory: 'Director'}]\n`\n\n5. if you want to match Titles where a character was called `Mario` then specifiy:\n`\nallCredits: [{character: 'Mario'}]\n`",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these credits",
        "list": true,
        "name": "allCredits",
        "nullable": true,
        "type": "TitleCreditSearchInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these credits",
        "list": true,
        "name": "anyCredits",
        "nullable": true,
        "type": "TitleCreditSearchInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain NONE of these credits\n\nIf the same input is specified in the any/all and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeCredits",
        "nullable": true,
        "type": "TitleCreditSearchInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleCreditsConstraint",
    "possibleTypes": []
  },
  "TitleCreditsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific credit categories",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credited or uncredited credits only",
        "list": false,
        "name": "credited",
        "nullable": true,
        "type": "CreditedOrUncreditedFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific credit categories",
        "list": true,
        "name": "excludeCategories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "excludePrincipal",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits on these specific names",
        "list": true,
        "name": "names",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleCreditsFilter",
    "possibleTypes": []
  },
  "TitleCreditsV2Filter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply at the individual contributed credit level.",
        "list": false,
        "name": "creditLevelFilter",
        "nullable": true,
        "type": "CreditLevelCreditsFilterSet"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply to credits at the name level.",
        "list": false,
        "name": "nameLevelFilter",
        "nullable": true,
        "type": "NameLevelCreditsFilterSet"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleCreditsV2Filter",
    "possibleTypes": []
  },
  "TitleCreditsV2Sort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "This is modelled as a string to allow for altering the list of allowed values over time. Supported values are:\n\nCREDIT_IMPORTANCE: Credit ordering follows this priority sequence:\n1. Grouping - Based on a fixed order of groupings, chosen to be similar to that seen on movie or TV end credits.\n2. Top Stars Ranking - Priority based on special top performers list, for cast only\n3. Credited Status - Credited roles take precedence over uncredited\n4. Episode Count - For a series, higher episode counts appear first\n5. Order - For a series, sum the order values across all episodes. For non-series, use the order value for the credit.\n   (Order numbers are ignored from when a large order value gap is found between 2 credits.)\n6. Grouped Order - Order based on multi-level groupings, as seen in Writer category.\n7. Chronological Order - For a series, sort earlier start years ahead of later start years. And similar for end years.\n8. Name Text - Alphabetical ordering by name, which typically treats \"Firstname Lastname\" as \"Lastname, Firstname\".\n9. Name ID - A final tie-break by name ID to ensure consistent ordering (smallest first)\n\nCREDIT_IMPORTANCE is the default.",
        "list": false,
        "name": "by",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": true,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleCreditsV2Sort",
    "possibleTypes": []
  },
  "TitleDataType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ALTERNATE_VERSION"
      },
      {
        "description": null,
        "name": "AWARD"
      },
      {
        "description": null,
        "name": "BUSINESS_INFO"
      },
      {
        "description": null,
        "name": "CRAZY_CREDIT"
      },
      {
        "description": null,
        "name": "GOOF"
      },
      {
        "description": null,
        "name": "LOCATION"
      },
      {
        "description": null,
        "name": "PLOT"
      },
      {
        "description": null,
        "name": "QUOTE"
      },
      {
        "description": null,
        "name": "SOUNDTRACK"
      },
      {
        "description": null,
        "name": "TECHNICAL"
      },
      {
        "description": null,
        "name": "TRIVIA"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleDataType",
    "possibleTypes": []
  },
  "TitleDisplayOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Current user's country or region selection for title display. ID in ISO 3166 format.",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Current user's language selection for title display. ISO 639 format.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Current user's reference view selection for contributors.",
        "kind": "",
        "list": false,
        "name": "prefersReferenceView",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleDisplayOutput",
    "possibleTypes": []
  },
  "TitleEpisodeCreditsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply at the individual contributed credit level.",
        "list": false,
        "name": "creditLevelFilter",
        "nullable": true,
        "type": "CreditLevelCreditsFilterSet"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply at the episode level.",
        "list": false,
        "name": "episodes",
        "nullable": true,
        "type": "EpisodesFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filters that apply to credits at the name level.",
        "list": false,
        "name": "nameLevelFilter",
        "nullable": true,
        "type": "NameLevelCreditsFilterSet"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleEpisodeCreditsFilter",
    "possibleTypes": []
  },
  "TitleFacetConnection": {
    "args": [],
    "description": "Pagination for title facets",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleFacetEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Provides information on the total number of titles you could filter on",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleFacetConnection",
    "possibleTypes": []
  },
  "TitleFacetEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "How many items are associated with this title node",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleFacetEdge",
    "possibleTypes": []
  },
  "TitleFacetField": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "GENRES"
      },
      {
        "description": null,
        "name": "KEYWORDS"
      },
      {
        "description": null,
        "name": "NAME_CREDIT_CATEGORIES"
      },
      {
        "description": null,
        "name": "NAME_JOB_CATEGORIES"
      },
      {
        "description": null,
        "name": "TITLE_TYPE"
      },
      {
        "description": null,
        "name": "WATCH_PROVIDERS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleFacetField",
    "possibleTypes": []
  },
  "TitleGenre": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "genre",
        "nullable": false,
        "type": "GenreItem"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "relevanceRanking",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "subGenres",
        "nullable": false,
        "type": "TitleKeyword"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleGenre",
    "possibleTypes": []
  },
  "TitleGenreRecommendation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Text to be displayed as a subheading for the carousel, explaining why we recommend those titles",
        "kind": "",
        "list": false,
        "name": "explanation",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Text to be displayed as the title for the carousel",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "refTag",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "String",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "String"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "titles",
        "nullable": true,
        "type": "TitleGenreRecommendationConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleGenreRecommendation",
    "possibleTypes": []
  },
  "TitleGenreRecommendationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleGenreRecommendationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleGenreRecommendationConnection",
    "possibleTypes": []
  },
  "TitleGenreRecommendationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleGenreRecommendationEdge",
    "possibleTypes": []
  },
  "TitleGenres": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "GenreSort",
            "list": false,
            "name": "sort",
            "nullable": true,
            "type": "GenreSort"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "genres",
        "nullable": false,
        "type": "TitleGenre"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleGenres",
    "possibleTypes": []
  },
  "TitleKeyword": {
    "args": [],
    "description": "TitleKeyword details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Votes from users about whether this keyword item is interesting",
        "kind": "",
        "list": false,
        "name": "interestScore",
        "nullable": false,
        "type": "InterestScore"
      },
      {
        "args": [],
        "description": "Item scope keyword category, i.e. category assigned for keyword inside title",
        "kind": "",
        "list": false,
        "name": "itemCategory",
        "nullable": true,
        "type": "TitleKeywordItemCategory"
      },
      {
        "args": [],
        "description": "The keyword",
        "kind": "",
        "list": false,
        "name": "keyword",
        "nullable": false,
        "type": "Keyword"
      },
      {
        "args": [],
        "description": "Legacy identifier intended for search",
        "kind": "",
        "list": false,
        "name": "legacyId",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleKeyword",
    "possibleTypes": []
  },
  "TitleKeywordConnection": {
    "args": [],
    "description": "Pagination for keywords which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of keywords",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleKeywordEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleKeywordConnection",
    "possibleTypes": []
  },
  "TitleKeywordEdge": {
    "args": [],
    "description": "Page of keywords",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A TitleKeyword node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleKeyword"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: TitleKeyword 3 out of 340",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleKeywordEdge",
    "possibleTypes": []
  },
  "TitleKeywordItemCategoriesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific title keywords categories",
        "list": true,
        "name": "excludeItemCategories",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific title keywords categories",
        "list": true,
        "name": "itemCategories",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleKeywordItemCategoriesFilter",
    "possibleTypes": []
  },
  "TitleKeywordItemCategory": {
    "args": [],
    "description": "TitleKeyword item scope category details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An opaque ID, suitable for caching the concept",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Not localized category value, e.g. plot-detail, can be used for search and filters",
        "kind": "",
        "list": false,
        "name": "itemCategoryId",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The language of the display text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Category display text",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleKeywordItemCategory",
    "possibleTypes": []
  },
  "TitleKeywordItemCategoryWithKeywords": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Keyword item scope category",
        "kind": "",
        "list": false,
        "name": "itemCategory",
        "nullable": false,
        "type": "TitleKeywordItemCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "List of categorized keywords with the same category",
        "kind": "",
        "list": false,
        "name": "keywords",
        "nullable": false,
        "type": "TitleKeywordConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleKeywordItemCategoryWithKeywords",
    "possibleTypes": []
  },
  "TitleKeywordsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "TitleKeywordsSortBy"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleKeywordsSort",
    "possibleTypes": []
  },
  "TitleKeywordsSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ALPHABETICAL"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleKeywordsSortBy",
    "possibleTypes": []
  },
  "TitleLevelCreditsFilterSet": {
    "args": [],
    "description": "Filters that apply to credits at the title level.\nEach specified filter is AND-ed together.\nFor filters that accept a list of values, the filter is an OR across that list, so any\ncredit matching one value meets the filter's criteria.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out credits on titles with specific genres.\nThe list of genres can be accessed from titleMetadata.titleGenres.\nBy default, credits for all genres are included.",
        "list": true,
        "name": "excludeGenres",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out specific production stages.\nCannot be used in conjunction with \"productionStage\": a title can only have one of these values;\nif you specify values to include and exclude, the behaviour for unspecified values is ambiguous.\nBy default, credits for all production stages are included.",
        "list": true,
        "name": "excludeProductionStage",
        "nullable": true,
        "type": "ProductionStageFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter out credits for titles with specific titleTypes.\nThe list of titleTypes can be accessed from titleMetadata.titleTypes.\nCannot be used in conjunction with \"titleType\": a title can only have one of these values;\nif you specify values to include and exclude, the behaviour for unspecified values is ambiguous.\nBy default, credits for all title types are included.",
        "list": true,
        "name": "excludeTitleType",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for credits on titles with specific genres.\nThe list of genres can be accessed from titleMetadata.titleGenres.\nBy default, credits for all genres are included.",
        "list": true,
        "name": "genres",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for specific production stages.\nCannot be used in conjunction with \"excludeProductionStage\": a title can only have one of these values;\nif you specify values to include and exclude, the behaviour for unspecified values is ambiguous.\nBy default, credits for all production stages are included.",
        "list": true,
        "name": "productionStage",
        "nullable": true,
        "type": "ProductionStageFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter for a project status of UPCOMING, PREVIOUS or PROJECT_IN_DEVELOPMENT.\nBy default, credits for all project statuses are included. Note that PROJECT_IN_DEVELOPMENT titles are not included\nwhen the request has no Pro tier entitlement.",
        "list": true,
        "name": "projectStatus",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits to only those for these specific titles.\nBy default, credits for all titles are included.",
        "list": true,
        "name": "titleId",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits for titles with specific titleTypes.\nThe list of titleTypes can be accessed from titleMetadata.titleTypes.\nCannot be used in conjunction with \"excludeTitleType\": a title can only have one of these values;\nif you specify values to include and exclude, the behaviour for unspecified values is ambiguous.\nBy default, credits for all title types are included.",
        "list": true,
        "name": "titleType",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter credits for titles with specific titleTypeCategory.\nBy default, credits for all title type categories are included.",
        "list": true,
        "name": "titleTypeCategory",
        "nullable": true,
        "type": "TitleTypeCategoryValue"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleLevelCreditsFilterSet",
    "possibleTypes": []
  },
  "TitleListItemSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleListItemSearchEdge"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "facetField",
            "nullable": false,
            "type": "TitleFacetField"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": true,
        "name": "facet",
        "nullable": true,
        "type": "SearchFacet"
      },
      {
        "args": [],
        "description": "The number of titles in the filtered list that a customer has rated.\nCutomer Id is required for this field or an authentication error will be thrown.",
        "kind": "",
        "list": false,
        "name": "myRatedCount",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The percentage of titles in the filtered list that a customer has rated.  We round the percentage\nto the nearest integer but we may change the precision depending on Product's requirement update.\nCustomer Id is required for this field or an authentication error will be thrown.",
        "kind": "",
        "list": false,
        "name": "myRatedPercentage",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleListItemSearchConnection",
    "possibleTypes": []
  },
  "TitleListItemSearchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "ListItemSearchNode"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleListItemSearchEdge",
    "possibleTypes": []
  },
  "TitleListSearchSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "TitleListSearchSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleListSearchSort",
    "possibleTypes": []
  },
  "TitleListSearchSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Gross revenue pulled in via box-office in Domestic market for entire lifetime of title.\nDomestic refers to North America (U.S., Canada, and Puerto Rico)\nASC: Lower numbers means the title has pulled in less box-office revenue, so poorer performing titles will be first.",
        "name": "BOX_OFFICE_GROSS_DOMESTIC"
      },
      {
        "description": "Date when the list item was added to the list\nASC: Earlier date will be first.",
        "name": "DATE_ADDED"
      },
      {
        "description": "List order determined by the customer",
        "name": "LIST_ORDER"
      },
      {
        "description": "Overall Metascore based on critic reviews. Titles without a metascore are\nplaced at the end when using ASC sort order.\nASC: Lower Metacritic score means the title is rated more poorly, so titles with worse scores will be first.",
        "name": "METACRITIC_SCORE"
      },
      {
        "description": "Star Rating given by the requesting user.\nASC: Lower star rating means the title the user rated the title more poorly, so most disliked titles will be first.",
        "name": "MY_RATING"
      },
      {
        "description": "Date when customer rated a title.\nASC: Earlier (older) ratings will be first.",
        "name": "MY_RATING_DATE"
      },
      {
        "description": "TitleMeterType.TITLE_METER (aka Pro MOVIEMeter). Score given to non-episodic title types.\nASC: Lower popularity score means that the title is more popular, so the most popular titles will be first.",
        "name": "POPULARITY"
      },
      {
        "description": "Sort results based on specified ranking algorithm.  For the advancedTitleSearch query, exactly one ranked title list\nconstraint must be specified for using this sort option.\nASC: Higher ranks will be first.",
        "name": "RANKING"
      },
      {
        "description": "Earliest wide release date of a title. Titles without a release date are\nplaced at the end when using ASC sort order.\nASC: Earlier (older) released title will be first.",
        "name": "RELEASE_DATE"
      },
      {
        "description": "The length of the title in terms of runtime.\nASC: Lower runtime means the title is shorter, so shortest titles will be first.",
        "name": "RUNTIME"
      },
      {
        "description": "Star Rating given by the specified user in the SpecifiedUserRatingSearchConstraint.\nThrows BAD_USER_INPUT if the SpecifiedUserRatingSearchConstraint is not specified.\nASC: Lower star rating means the title the user rated the title more poorly, so most disliked titles will be first.",
        "name": "SINGLE_USER_RATING"
      },
      {
        "description": "Date when the specified user rated a title.\nThrows BAD_USER_INPUT if the SpecifiedUserRatingSearchConstraint is not specified.\nASC: Earlier (older) ratings will be first.",
        "name": "SINGLE_USER_RATING_DATE"
      },
      {
        "description": "Alphabetical sorting based on regional title text as determined by user language preferences.\nLanguage preference is determined by x-imdb-user-country and x-imdb-user-language headers.\nOnly supports the languages/regions we support for localized search. Defaults to original title otherwise.\nASC: Lower numbers and letters near the top of the alphabet will be returned first.",
        "name": "TITLE_REGIONAL"
      },
      {
        "description": "Weighted IMDb Star Rating as determined by users\nNote: IMDb maintains a threshold to a minimum number of ratings before it is considered.\nASC: Lower star rating means the title is rated more poorly, so titles with worse ratings will be first.",
        "name": "USER_RATING"
      },
      {
        "description": "Count of ratings given by users\nNote: IMDb maintains a threshold to a minimum number of ratings before it is considered.\nASC: Lower count of ratings means the title has been rated a fewer number of\ntimes, so titles with least ratings will be first.",
        "name": "USER_RATING_COUNT"
      },
      {
        "description": "The recognized year of the title. Typically, the release year, but guidelines are here:\nhttps://help.imdb.com/article/contribution/titles/title-formatting/G56U5ERK7YY47CQB\nASC: Earlier (older) titles will be first.",
        "name": "YEAR"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleListSearchSortBy",
    "possibleTypes": []
  },
  "TitleMeta": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "canonicalId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "publicationStatus",
        "nullable": false,
        "type": "PublicationStatus"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restrictions",
        "nullable": true,
        "type": "TitleMetaRestrictions"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleMeta",
    "possibleTypes": []
  },
  "TitleMetaRestrictions": {
    "args": [],
    "description": "Information about restrictions applied to meta",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleMetaRestrictions",
    "possibleTypes": []
  },
  "TitleMetadata": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "All the valid external link categories",
        "kind": "",
        "list": true,
        "name": "externalLinkCategories",
        "nullable": false,
        "type": "ExternalLinkCategory"
      },
      {
        "args": [],
        "description": "All the valid goof types",
        "kind": "",
        "list": true,
        "name": "goofCategories",
        "nullable": false,
        "type": "GoofCategory"
      },
      {
        "args": [],
        "description": "All the connection categories",
        "kind": "",
        "list": true,
        "name": "titleConnectionCategories",
        "nullable": false,
        "type": "TitleConnectionCategory"
      },
      {
        "args": [],
        "description": "All title Genres.",
        "kind": "",
        "list": true,
        "name": "titleGenres",
        "nullable": false,
        "type": "GenreItem"
      },
      {
        "args": [],
        "description": "All title type categories with title types.",
        "kind": "",
        "list": true,
        "name": "titleTypeCategories",
        "nullable": false,
        "type": "TitleTypeCategoryWithTitleTypes"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "TitleTypeCategoryValue",
            "list": false,
            "name": "category",
            "nullable": true,
            "type": "TitleTypeCategoryValue"
          }
        ],
        "description": "All title types, or all title types filtered by category.",
        "kind": "",
        "list": true,
        "name": "titleTypes",
        "nullable": false,
        "type": "TitleType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleMetadata",
    "possibleTypes": []
  },
  "TitleMeterRanking": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The current IMDbPro meter ranking of the title. A lower value is better.\nRanking information beyond 5000 requires entitlement proving Pro subscription.",
        "kind": "",
        "list": false,
        "name": "currentRank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The Pro Meter type that this rank represents",
        "kind": "",
        "list": false,
        "name": "meterType",
        "nullable": true,
        "type": "TitleMeterType"
      },
      {
        "args": [],
        "description": "If a previous rank exists, this is a set of fields comparing the current rank\nto the previous rank",
        "kind": "",
        "list": false,
        "name": "rankChange",
        "nullable": true,
        "type": "MeterRankChange"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleMeterRanking",
    "possibleTypes": []
  },
  "TitleMeterRankingHistory": {
    "args": [],
    "description": "Requires entitlement proving Pro subscription.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The best historical IMDbPro Title Meter ranking of a title.\nA lower value is better. By default, returns the values over all time.\nRequires entitlement proving Pro subscription.",
        "kind": "",
        "list": false,
        "name": "bestRank",
        "nullable": true,
        "type": "MeterRankingHistoryEntry"
      },
      {
        "args": [],
        "description": "History of IMDbPro Title meter rankings of a name.",
        "kind": "",
        "list": true,
        "name": "ranks",
        "nullable": true,
        "type": "MeterRankingHistoryEntry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "MeterRestriction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleMeterRankingHistory",
    "possibleTypes": []
  },
  "TitleMeterRankingHistoryInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Last date to obtain Title meter history for. If not provided, default is most recent ranking date.\nIf there is no ranking on end date, the date is the most recent date before this one.",
        "list": false,
        "name": "endDate",
        "nullable": true,
        "type": "Date"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Type of ranking history being requested.\nIf omitted, the meter type used will either be the pure MovieMeter, TVMeter, or TitleMeter value depending\non the meter type.",
        "list": false,
        "name": "meterType",
        "nullable": true,
        "type": "TitleMeterType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "First date to obtain Title meter history for. If not provided, default is first ranking date.\nIf there is no ranking on start date, the date is the earliest date after this one.",
        "list": false,
        "name": "startDate",
        "nullable": true,
        "type": "Date"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleMeterRankingHistoryInput",
    "possibleTypes": []
  },
  "TitleMeterRankingInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "If omitted, the meter type used will either be the pure MovieMeter or TVMeter value depending on the title type.",
        "list": false,
        "name": "meterType",
        "nullable": true,
        "type": "TitleMeterType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleMeterRankingInput",
    "possibleTypes": []
  },
  "TitleMeterSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that have a current Title Meter value that falls in the specified range\nAt this time, we only support max up to 100 for TV_METER and MOVIE_METER.",
        "list": false,
        "name": "rankRange",
        "nullable": true,
        "type": "IntRangeInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The default is TITLE_METER",
        "list": false,
        "name": "titleMeterType",
        "nullable": true,
        "type": "TitleMeterType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleMeterSearchConstraint",
    "possibleTypes": []
  },
  "TitleMeterType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Ranking that aggregates titles of type movie, short, and video",
        "name": "MOVIE_METER"
      },
      {
        "description": "Ranking that aggregates all title types aside from episodes. Best used for sorting.",
        "name": "TITLE_METER"
      },
      {
        "description": "Ranking that aggregates titles of type tv_series, tv_miniseries, tv_movie, tv_short, and tv_special",
        "name": "TV_METER"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleMeterType",
    "possibleTypes": []
  },
  "TitleQuote": {
    "args": [],
    "description": "Quote details",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The quote as a displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": false,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "Title Quote ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Votes from users about whether this Quote is interesting",
        "kind": "",
        "list": false,
        "name": "interestScore",
        "nullable": false,
        "type": "InterestScore"
      },
      {
        "args": [],
        "description": "Is this Title Quote a spoiler",
        "kind": "",
        "list": false,
        "name": "isSpoiler",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The language of this Title Quote",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The verbal and/or non-verbal lines that make up this Title Quote",
        "kind": "",
        "list": true,
        "name": "lines",
        "nullable": false,
        "type": "TitleQuoteLine"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleQuote",
    "possibleTypes": []
  },
  "TitleQuoteCharacter": {
    "args": [],
    "description": "A character speaking a line in a Title Quote",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The name of the character in the Title",
        "kind": "",
        "list": false,
        "name": "character",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The Name behind that character",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": true,
        "type": "Name"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleQuoteCharacter",
    "possibleTypes": []
  },
  "TitleQuoteConnection": {
    "args": [],
    "description": "Pagination for Quote types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Quotes",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleQuoteEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleQuoteConnection",
    "possibleTypes": []
  },
  "TitleQuoteEdge": {
    "args": [],
    "description": "Page of Quotes",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Quote node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleQuote"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Quote 3 out of 27",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleQuoteEdge",
    "possibleTypes": []
  },
  "TitleQuoteLine": {
    "args": [],
    "description": "A specific line in the Title Quote. Can be a verbal line with characters speaking or stage directions",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The characters who speak this line, e.g.  'Rick'. Not required: a line may be non-verbal",
        "kind": "",
        "list": true,
        "name": "characters",
        "nullable": true,
        "type": "TitleQuoteCharacter"
      },
      {
        "args": [],
        "description": "Stage direction, e.g. 'Rick gently places his hand under her chin and raises it so their eyes meet'. Not required.",
        "kind": "",
        "list": false,
        "name": "stageDirection",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "The body of the quotation line, e.g 'Here's looking at you kid. '.  Not\nrequired: you may have stage directions with no dialogue.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleQuoteLine",
    "possibleTypes": []
  },
  "TitleQuoteMatchingSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of quote 'actually mammals' OR 'planet', PLUS\nthe title must contain 'cancer', specify anyQuoteTextTerms: ['actually mammals', 'planet'] plus\nallQuoteTextTerms: ['cancer'].",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these search terms in at least one of its quotes.",
        "list": true,
        "name": "allQuoteTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these search terms in at least one of its quotes.",
        "list": true,
        "name": "anyQuoteTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleQuoteMatchingSearchConstraint",
    "possibleTypes": []
  },
  "TitleQuotesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Only return Quotes in which one of these Names are present",
        "list": true,
        "name": "names",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter or only return spoilers",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleQuotesFilter",
    "possibleTypes": []
  },
  "TitleRecommendation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RecommendationExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "refTag",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleRecommendation",
    "possibleTypes": []
  },
  "TitleRecommendationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleRecommendationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleRecommendationConnection",
    "possibleTypes": []
  },
  "TitleRecommendationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleRecommendation"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleRecommendationEdge",
    "possibleTypes": []
  },
  "TitleRecommendationsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Includes title recommendation titles for below title type category values. At time of writing, titleRecommendations() only\nsupports movie and tv title type categories, and can only support filtering for a single title type.",
        "list": true,
        "name": "includeTitleTypes",
        "nullable": true,
        "type": "TitleTypeCategoryValue"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleRecommendationsFilter",
    "possibleTypes": []
  },
  "TitleReleaseDatesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter release dates for specific countries\"\nThe country code - either an ISO 3166 code or an internally defined code if no ISO code exists for that country.",
        "list": true,
        "name": "countries",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter release dates",
        "list": false,
        "name": "wideRelease",
        "nullable": true,
        "type": "WideReleaseFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleReleaseDatesFilter",
    "possibleTypes": []
  },
  "TitleReviewExcerpt": {
    "args": [],
    "description": "A review that mentions a theme, and an excerpt from it.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The excerpt from the review (optional)",
        "kind": "",
        "list": false,
        "name": "excerpt",
        "nullable": true,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "The review",
        "kind": "",
        "list": false,
        "name": "review",
        "nullable": false,
        "type": "Review"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleReviewExcerpt",
    "possibleTypes": []
  },
  "TitleReviewSentimentSection": {
    "args": [],
    "description": "Review summaries at different length levels for a particular sentiment",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Long summary",
        "kind": "",
        "list": false,
        "name": "long",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Medium length summary",
        "kind": "",
        "list": false,
        "name": "medium",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Short summary",
        "kind": "",
        "list": false,
        "name": "short",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleReviewSentimentSection",
    "possibleTypes": []
  },
  "TitleReviewSummary": {
    "args": [],
    "description": "Summary and themes of reviews for a title",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Summary focused on negative reviews (optional)",
        "kind": "",
        "list": false,
        "name": "negative",
        "nullable": true,
        "type": "TitleReviewSentimentSection"
      },
      {
        "args": [],
        "description": "Overall summary of reviews across all sentiments",
        "kind": "",
        "list": false,
        "name": "overall",
        "nullable": false,
        "type": "TitleReviewSentimentSection"
      },
      {
        "args": [],
        "description": "Summary focused on positive reviews (optional)",
        "kind": "",
        "list": false,
        "name": "positive",
        "nullable": true,
        "type": "TitleReviewSentimentSection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Filter criteria for themes (if missing, all themes are returned)",
            "kind": "TitleReviewSummaryThemesFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TitleReviewSummaryThemesFilter"
          },
          {
            "defaultValue": "",
            "description": "Maximum number of themes to return (if missing, all (up to 10) themes are returned)",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Common themes discussed across reviews",
        "kind": "",
        "list": true,
        "name": "themes",
        "nullable": true,
        "type": "TitleReviewTheme"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleReviewSummary",
    "possibleTypes": []
  },
  "TitleReviewSummaryThemesFilter": {
    "args": [],
    "description": "Input type for filtering themes in a title's review summary",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude themes with these sentiments",
        "list": true,
        "name": "excludeSentiments",
        "nullable": true,
        "type": "TitleReviewThemeSentiment"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Only include themes with these sentiments",
        "list": true,
        "name": "includeSentiments",
        "nullable": true,
        "type": "TitleReviewThemeSentiment"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter to specific theme IDs",
        "list": true,
        "name": "themeIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleReviewSummaryThemesFilter",
    "possibleTypes": []
  },
  "TitleReviewTheme": {
    "args": [],
    "description": "A theme identified across multiple reviews",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Displayable label for the theme, e.g. ('Intense')",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "Maximum number of reviews/excerpts to return (if missing, all (up to 5) reviews/excerpts are returned)",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Reviews/excerpts related to this theme",
        "kind": "",
        "list": true,
        "name": "reviews",
        "nullable": false,
        "type": "TitleReviewExcerpt"
      },
      {
        "args": [],
        "description": "The sentiment classification for this theme e.g. POSITIVE",
        "kind": "",
        "list": false,
        "name": "sentiment",
        "nullable": false,
        "type": "TitleReviewThemeSentiment"
      },
      {
        "args": [],
        "description": "Summary text describing this theme's presence in reviews.",
        "kind": "",
        "list": false,
        "name": "summary",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Identifier for the theme, e.g. ('intense')",
        "kind": "",
        "list": false,
        "name": "themeId",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleReviewTheme",
    "possibleTypes": []
  },
  "TitleReviewThemeSentiment": {
    "args": [],
    "description": "Sentiment classification for review themes",
    "enumValues": [
      {
        "description": "Theme is discussed negatively in reviews",
        "name": "NEGATIVE"
      },
      {
        "description": "Theme is discussed neutrally in reviews",
        "name": "NEUTRAL"
      },
      {
        "description": "Theme is discussed positively in reviews",
        "name": "POSITIVE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleReviewThemeSentiment",
    "possibleTypes": []
  },
  "TitleSearchConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleSearchEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleSearchConnection",
    "possibleTypes": []
  },
  "TitleSearchEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleSearchEdge",
    "possibleTypes": []
  },
  "TitleSearchOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The earliest release date for a title must fall within the specified range\nBy default, we filter titles by release year provided in the search term, if applicable.\nIf a releaseDate is provided we do not apply default search term based release year filter.",
        "list": false,
        "name": "releaseDateRange",
        "nullable": true,
        "type": "DateRange"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The types of titles to include in results.\nBy default, all title types are included in the search.",
        "list": true,
        "name": "type",
        "nullable": true,
        "type": "MainSearchTitleType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleSearchOptions",
    "possibleTypes": []
  },
  "TitleText": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": true,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "isOriginalTitle",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": true,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleText",
    "possibleTypes": []
  },
  "TitleTextSearchConstraint": {
    "args": [],
    "description": "Title name constraints are affected by user language preferences.\nLanguage preference is determined by x-imdb-user-language header.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Matches titles based on their original name as well as regional name corresponding with user\nlanguage preferences. If no language preferences are provided, en-US is used by default.\nThere is no fuzzy matching.\nFor example: 'Toy Story' will be matched by 'Toy' and 'Story' but not 'Toy Stor'",
        "list": false,
        "name": "searchTerm",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleTextSearchConstraint",
    "possibleTypes": []
  },
  "TitleTrackRecommendationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID of the title track recommendation",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A title track recommendation node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Position of the node in this context, e.g. TitleTrackRecommendationEdge 2 out of 10",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleTrackRecommendationEdge",
    "possibleTypes": []
  },
  "TitleTrackRecommendationsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Page of title track recommendations",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleTrackRecommendationEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of title track recommendations",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleTrackRecommendationsConnection",
    "possibleTypes": []
  },
  "TitleTrivia": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "TriviaCategory"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the trivia correction Link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "correctionLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "The trivia as a displayable article\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": false,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "trivia Voting summary\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "interestScore",
        "nullable": false,
        "type": "InterestScore"
      },
      {
        "args": [],
        "description": "Is this trivia item a spoiler\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "isSpoiler",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "trivia Related Name IDs\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": true,
        "name": "relatedNames",
        "nullable": true,
        "type": "Name"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "The required metadata for returning from the contribution experience.",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "contributionContext",
            "nullable": false,
            "type": "ContributionContext"
          }
        ],
        "description": "Returns the trivia reporting Link.\n\n---------------------\nGraphlet Details:\n- Name: kahlo\n- CTI: IMDb/GraphQL/Kahlo\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "reportingLink",
        "nullable": true,
        "type": "ContributionLink"
      },
      {
        "args": [],
        "description": "The trivia text\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "Title related to the trivia\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "trivia Trademark text\n\n---------------------\nGraphlet Details:\n- Name: janet\n- CTI: IMDb/GraphQL/Janet\n- Affected by headers: x-imdb-client-name, x-imdb-normalized-languages, x-imdb-user-country, x-imdb-user-language, x-imdb-customer-id\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-content-api",
        "kind": "",
        "list": false,
        "name": "trademark",
        "nullable": true,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleTrivia",
    "possibleTypes": []
  },
  "TitleTriviaMatchingSearchConstraint": {
    "args": [],
    "description": "Example: if you want to match titles of trivia 'twisted ankle' OR 'shooting scenes', PLUS\nthe title must contain 're-cast', specify anyTriviaTextTerms: ['twisted ankle', 'shooting scenes']\n plus allTriviaTextTerms: ['re-cast'].",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain ALL of these search terms in at least one of its trivia.",
        "list": true,
        "name": "allTriviaTextTerms",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A title match must contain AT LEAST ONE of these search terms in at least one of its trivia.",
        "list": true,
        "name": "anyTriviaTextTerms",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleTriviaMatchingSearchConstraint",
    "possibleTypes": []
  },
  "TitleType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Whether this title type can have episodes.\nIt does not guarantee that a title of this type actually has episodes, only that it can have episodes.",
        "kind": "",
        "list": false,
        "name": "canHaveEpisodes",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The categories the title type is in.",
        "kind": "",
        "list": true,
        "name": "categories",
        "nullable": false,
        "type": "TitleTypeCategory"
      },
      {
        "args": [],
        "description": "Title type as displayable property",
        "kind": "",
        "list": false,
        "name": "displayableProperty",
        "nullable": false,
        "type": "DisplayableTitleTypeProperty"
      },
      {
        "args": [],
        "description": "Title type ID",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A boolean flag asserting whether this title type is an episode.",
        "kind": "",
        "list": false,
        "name": "isEpisode",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "A boolean flag asserting whether this title type is a series.",
        "kind": "",
        "list": false,
        "name": "isSeries",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The language the text is written in",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The displayable title type, e.g. 'TV Series'",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleType",
    "possibleTypes": []
  },
  "TitleTypeCategory": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A token representing the title type category.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The language of the display text.",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "The display text for the title type category (e.g. 'TV').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The enum value representing the title type category.",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "TitleTypeCategoryValue"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleTypeCategory",
    "possibleTypes": []
  },
  "TitleTypeCategorySummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The title type category",
        "kind": "",
        "list": false,
        "name": "titleTypeCategory",
        "nullable": false,
        "type": "TitleTypeCategory"
      },
      {
        "args": [],
        "description": "The total number of credits for the title type category",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleTypeCategorySummary",
    "possibleTypes": []
  },
  "TitleTypeCategoryValue": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Category containing audio related title types (e.g. 'Podcast Series').",
        "name": "audio"
      },
      {
        "description": "Category containing gaming related title types (e.g. 'Video Game').",
        "name": "gaming"
      },
      {
        "description": "Category containing movie related title types (e.g. 'Movie').",
        "name": "movie"
      },
      {
        "description": "Category containing music related title types (e.g. 'Music Video').",
        "name": "music"
      },
      {
        "description": "Category containing anything else",
        "name": "other"
      },
      {
        "description": "Category containing TV related title types (e.g. 'TV Series').",
        "name": "tv"
      },
      {
        "description": "Category containing video related title types (e.g. 'Video').",
        "name": "video"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleTypeCategoryValue",
    "possibleTypes": []
  },
  "TitleTypeCategoryWithTitleTypes": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A category of title types.",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": false,
        "type": "TitleTypeCategory"
      },
      {
        "args": [],
        "description": "All title types in the category.",
        "kind": "",
        "list": true,
        "name": "titleTypes",
        "nullable": false,
        "type": "TitleType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleTypeCategoryWithTitleTypes",
    "possibleTypes": []
  },
  "TitleTypeSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on any of the title types specified.\nTitle type ids can be obtained by querying `titleMetadata.titleType.id`\nFor example: movie, tvSeries, videoGame, etc.",
        "list": true,
        "name": "anyTitleTypeIds",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Exclude titles based on any of the title types specified.\nTitle type ids can be obtained by querying `titleMetadata.titleType.id`\nFor example: movie, tvSeries, videoGame, etc.\n\nIf the same input is specified in the any and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeTitleTypeIds",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TitleTypeSearchConstraint",
    "possibleTypes": []
  },
  "TitleTypeSummary": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The title type",
        "kind": "",
        "list": false,
        "name": "titleType",
        "nullable": false,
        "type": "TitleType"
      },
      {
        "args": [],
        "description": "The total number of credits for the title type",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleTypeSummary",
    "possibleTypes": []
  },
  "TitleWatchedSourceType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "The customer checked-in this title before.",
        "name": "CHECKIN"
      },
      {
        "description": "The customer explicitly mark this title as watched",
        "name": "EXPLICIT"
      },
      {
        "description": "The customer rated this title before.",
        "name": "RATING"
      },
      {
        "description": "The customer reviewed this title before.",
        "name": "REVIEW"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TitleWatchedSourceType",
    "possibleTypes": []
  },
  "TitleWatchedStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Watched status of this title.",
        "kind": "",
        "list": false,
        "name": "watchedStatus",
        "nullable": false,
        "type": "WatchedStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleWatchedStatus",
    "possibleTypes": []
  },
  "TitleWatchlistRecommendation": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Title text to be displayed per recommended title, explaining why a title was recommended",
        "kind": "",
        "list": false,
        "name": "explanation",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleWatchlistRecommendation",
    "possibleTypes": []
  },
  "TitleWatchlistRecommendationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TitleWatchlistRecommendationEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "refTag",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleWatchlistRecommendationConnection",
    "possibleTypes": []
  },
  "TitleWatchlistRecommendationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleWatchlistRecommendation"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TitleWatchlistRecommendationEdge",
    "possibleTypes": []
  },
  "TopGrossingReleasesConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Displayable Box Office area",
        "kind": "",
        "list": false,
        "name": "displayableBoxOfficeArea",
        "nullable": true,
        "type": "BoxOfficeAreaType"
      },
      {
        "args": [],
        "description": "Pages of top grossing releases",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TopGrossingReleasesEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "End date of the specified timeWindow",
        "kind": "",
        "list": false,
        "name": "timeWindowEndDate",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "Start date of the specified timeWindow",
        "kind": "",
        "list": false,
        "name": "timeWindowStartDate",
        "nullable": false,
        "type": "Date"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TopGrossingReleasesConnection",
    "possibleTypes": []
  },
  "TopGrossingReleasesEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A top grossing release",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TopGrossingReleasesNode"
      },
      {
        "args": [],
        "description": "Position of the release in this context, eg: top grossing release 2 out of 10",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TopGrossingReleasesEdge",
    "possibleTypes": []
  },
  "TopGrossingReleasesFilter": {
    "args": [],
    "description": "Filter to specify the constraints to use to calculate the grosses.\nRequesting constraints for which no data is available will return null.\nRequesting invalid constraints (i.e. a non-existing area) will return an error.\nCurrently only the following are available:\n- XDOM + LATEST_DAY\n- XDOM + LATEST_WEEKEND\n- GB + LATEST_WEEKEND",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Time window over which the grosses are calculated",
        "list": false,
        "name": "timeWindow",
        "nullable": false,
        "type": "TopGrossingReleasesTimeWindow"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Area for which the grosses are calculated",
        "list": false,
        "name": "topGrossingReleasesArea",
        "nullable": false,
        "type": "BoxOfficeReleasesAreaFilter"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TopGrossingReleasesFilter",
    "possibleTypes": []
  },
  "TopGrossingReleasesNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Gross of the release according to the specified filter",
        "kind": "",
        "list": false,
        "name": "gross",
        "nullable": false,
        "type": "BoxOfficeGross"
      },
      {
        "args": [],
        "description": "Top Grossing Release",
        "kind": "",
        "list": false,
        "name": "release",
        "nullable": false,
        "type": "BoxOfficeRelease"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TopGrossingReleasesNode",
    "possibleTypes": []
  },
  "TopGrossingReleasesTimeWindow": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "timeWindowPeriod",
        "nullable": false,
        "type": "TopGrossingReleasesTimeWindowPeriod"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TopGrossingReleasesTimeWindow",
    "possibleTypes": []
  },
  "TopGrossingReleasesTimeWindowPeriod": {
    "args": [],
    "description": "Grosses will be calculated over the specified time window period.\nLATEST_ means that the period used will be the latest corresponding period for which data is available.",
    "enumValues": [
      {
        "description": null,
        "name": "LATEST_DAY"
      },
      {
        "description": null,
        "name": "LATEST_WEEKEND"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TopGrossingReleasesTimeWindowPeriod",
    "possibleTypes": []
  },
  "TopListType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "ALL"
      },
      {
        "description": null,
        "name": "EDITORIAL"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TopListType",
    "possibleTypes": []
  },
  "TopMeterTitlesFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Filter titles based on their genre",
        "list": false,
        "name": "genreId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Movies, TV, or All",
        "list": false,
        "name": "topMeterTitlesType",
        "nullable": true,
        "type": "TopMeterTitlesType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TopMeterTitlesFilter",
    "possibleTypes": []
  },
  "TopMeterTitlesType": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Movies and TV Series",
        "name": "ALL"
      },
      {
        "description": "Only Movies",
        "name": "MOVIE"
      },
      {
        "description": "Only TV Series",
        "name": "TV"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TopMeterTitlesType",
    "possibleTypes": []
  },
  "TopPicksConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TopPicksEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "refTag",
        "nullable": true,
        "type": "RefTag"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TopPicksConnection",
    "possibleTypes": []
  },
  "TopPicksEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TopPicksEdge",
    "possibleTypes": []
  },
  "TopRanking": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A combination of all dimensions of ranking is used to generate an unique id value for each title.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "TODO: There might be changes based on ongoing discussion pertaining to Naming and using DisplaybleConcept",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TopRanking",
    "possibleTypes": []
  },
  "TopTrendingInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "dataWindow",
        "nullable": false,
        "type": "TrendingDataWindow"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "trafficSource",
        "nullable": false,
        "type": "TrendingTrafficSource"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TopTrendingInput",
    "possibleTypes": []
  },
  "TopTrendingPredefinedEnum": {
    "args": [],
    "description": "Enum exposing all the supported Region Specific Title Trending Sets",
    "enumValues": [
      {
        "description": "Trending Set for released Indian Titles based on Global Traffic",
        "name": "INDIA_TITLE_TRENDS_RELEASED"
      },
      {
        "description": "Trending Set for released Indian Titles with primary language Tamil\nbased on Global Traffic",
        "name": "INDIA_TITLE_TRENDS_RELEASED_TAMIL"
      },
      {
        "description": "Trending Set for released Indian Titles with primary language Telugu\nbased on Global Traffic",
        "name": "INDIA_TITLE_TRENDS_RELEASED_TELUGU"
      },
      {
        "description": "Trending Set for upcoming Indian Titles based on Global Traffic",
        "name": "INDIA_TITLE_TRENDS_UPCOMING"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TopTrendingPredefinedEnum",
    "possibleTypes": []
  },
  "TopTrendingSetsPredefinedInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "topTrendingSetPredefined",
        "nullable": false,
        "type": "TopTrendingPredefinedEnum"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TopTrendingSetsPredefinedInput",
    "possibleTypes": []
  },
  "TotalCredits": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Restriction related information if exists for credits",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "CreditRestriction"
      },
      {
        "args": [],
        "description": "The total number of credits after the restriction is applied",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TotalCredits",
    "possibleTypes": []
  },
  "Track": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Products of Amazon Music for this soundtrack",
        "kind": "",
        "list": true,
        "name": "amazonMusicProducts",
        "nullable": true,
        "type": "AmazonMusicProduct"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "limit",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "Comments for this track",
        "kind": "",
        "list": true,
        "name": "comments",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "The track as a displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": false,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "A token representing the track.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Optional display text for the track (e.g. 'Danger Zone').",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Track",
    "possibleTypes": []
  },
  "TrackNotificationPreference": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "True if requesting customer receives notifications for this preference type",
        "kind": "",
        "list": false,
        "name": "interested",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Preference type",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "TrackNotificationPreferenceType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrackNotificationPreference",
    "possibleTypes": []
  },
  "TrackNotificationPreferenceType": {
    "args": [],
    "description": "Preference type for a tracked page",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for the notification preference type",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Language of the text",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "DisplayableLanguage"
      },
      {
        "args": [],
        "description": "Text describing the notification preference type",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The notification preference type identifier, this value should be used when submitting mutations to trackConst",
        "kind": "",
        "list": false,
        "name": "typeId",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrackNotificationPreferenceType",
    "possibleTypes": []
  },
  "TrackNotificationPreferences": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Indicates if current user is tracking given const",
        "kind": "",
        "list": false,
        "name": "isTracking",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "The requesting user's notification preferences for this const.",
        "kind": "",
        "list": true,
        "name": "notificationPreferences",
        "nullable": true,
        "type": "TrackNotificationPreference"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrackNotificationPreferences",
    "possibleTypes": []
  },
  "TrackRecommendationsInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Profession used in query for certain recommendation strategies",
        "list": false,
        "name": "profession",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TrackRecommendationsInput",
    "possibleTypes": []
  },
  "TrackedNameEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID of the tracked name",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A tracked name node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "Position of the node in this context, e.g. TrackedNameEdge 2 out of 10",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrackedNameEdge",
    "possibleTypes": []
  },
  "TrackedNamesConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Page of tracked names",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TrackedNameEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of tracked names",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrackedNamesConnection",
    "possibleTypes": []
  },
  "TrackedTitleEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID of the tracked title",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A tracked title node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "Position of the node in this context, e.g. TrackedTitleEdge 2 out of 10",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrackedTitleEdge",
    "possibleTypes": []
  },
  "TrackedTitlesConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Page of tracked titles",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TrackedTitleEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of tracked titles",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrackedTitlesConnection",
    "possibleTypes": []
  },
  "TrackerConsent": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Encoded consent token using amazon vendor list.",
        "kind": "",
        "list": false,
        "name": "avlTcfString",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "base64 encoded json representation of the consent information\ne.g. eyJkZWNpc2lvbiI6ICJBQ0NFUFRfQUxMIiwicHVycG9zZXMiOiBbMSwgMiwgM10sInZlbmRvcnMiOiBbMywgNSwgN119\n     Decoded: {\"decision\":\"ACCEPT_ALL\",\"is_required\":true}",
        "kind": "",
        "list": false,
        "name": "consentInfo",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "consentOperation",
        "nullable": false,
        "type": "ConsentOperation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "consentType",
        "nullable": false,
        "type": "ConsentType"
      },
      {
        "args": [],
        "description": "Encoded token for data sharing and cross-use.",
        "kind": "",
        "list": false,
        "name": "crossUseString",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "expirationDate",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Encoded IAB TCFv2 (Transparency and Consent Framework) token. Uses IAB global vendor list.",
        "kind": "",
        "list": false,
        "name": "gvlTcfString",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Granular purpose-level consent decisions for custom consent",
        "kind": "",
        "list": true,
        "name": "purposes",
        "nullable": true,
        "type": "GranularConsentRecord"
      },
      {
        "args": [],
        "description": "Granular vendor-level consent decisions for custom consent",
        "kind": "",
        "list": true,
        "name": "vendors",
        "nullable": true,
        "type": "GranularConsentRecord"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrackerConsent",
    "possibleTypes": []
  },
  "Trademark": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The trademark as a displayable article",
        "kind": "",
        "list": false,
        "name": "displayableArticle",
        "nullable": true,
        "type": "DisplayableArticle"
      },
      {
        "args": [],
        "description": "Details of the person's trademarks",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Trademark",
    "possibleTypes": []
  },
  "TrademarkConnection": {
    "args": [],
    "description": "Pagination for Trademarks which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Trademarks",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TrademarkEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrademarkConnection",
    "possibleTypes": []
  },
  "TrademarkEdge": {
    "args": [],
    "description": "Page of Trademarks",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Details of the person's trademark",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Trademark"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Trademark 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrademarkEdge",
    "possibleTypes": []
  },
  "TrendingCollectionOption": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": false,
        "type": "DisplayableCountry"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "dataWindow",
        "nullable": false,
        "type": "TrendingDataWindow"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "trafficSource",
        "nullable": false,
        "type": "TrendingTrafficSource"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingCollectionOption",
    "possibleTypes": []
  },
  "TrendingDataWindow": {
    "args": [],
    "description": "We will throw exception if trending set does not exist, which means that\nthe response will contain an error field with the exception code and the\ndata field set to null\nhttps://w.amazon.com/bin/view/IMDb/Trending/#Ranking_Sets",
    "enumValues": [
      {
        "description": null,
        "name": "HOURS"
      },
      {
        "description": null,
        "name": "MINUTES"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TrendingDataWindow",
    "possibleTypes": []
  },
  "TrendingNameCollection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "items",
        "nullable": false,
        "type": "TrendingNameConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "option",
        "nullable": false,
        "type": "TrendingCollectionOption"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingNameCollection",
    "possibleTypes": []
  },
  "TrendingNameCollectionOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "options",
        "nullable": false,
        "type": "TrendingCollectionOption"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "selectedItem",
        "nullable": false,
        "type": "TrendingNameCollection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingNameCollectionOptions",
    "possibleTypes": []
  },
  "TrendingNameConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TrendingNameEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingNameConnection",
    "possibleTypes": []
  },
  "TrendingNameEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TrendingNameNode"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingNameEdge",
    "possibleTypes": []
  },
  "TrendingNameNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "item",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "weightRank",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingNameNode",
    "possibleTypes": []
  },
  "TrendingTitleCollection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "items",
        "nullable": false,
        "type": "TrendingTitleConnection"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "option",
        "nullable": false,
        "type": "TrendingCollectionOption"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingTitleCollection",
    "possibleTypes": []
  },
  "TrendingTitleCollectionOptions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "options",
        "nullable": false,
        "type": "TrendingCollectionOption"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "selectedItem",
        "nullable": false,
        "type": "TrendingTitleCollection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingTitleCollectionOptions",
    "possibleTypes": []
  },
  "TrendingTitleConnection": {
    "args": [],
    "description": "Trending schema",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TrendingTitleEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingTitleConnection",
    "possibleTypes": []
  },
  "TrendingTitleEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TrendingTitleNode"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingTitleEdge",
    "possibleTypes": []
  },
  "TrendingTitleNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "item",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "weightRank",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingTitleNode",
    "possibleTypes": []
  },
  "TrendingTrafficSource": {
    "args": [],
    "description": "We will throw exception if trending set does not exist, which means that\nthe response will contain an error field with the exception code and the\ndata field set to null\nhttps://w.amazon.com/bin/view/IMDb/Trending/#Ranking_Sets\nAll TrendingTrafficSource values except XWW are deprecated",
    "enumValues": [
      {
        "description": null,
        "name": "XWW"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "TrendingTrafficSource",
    "possibleTypes": []
  },
  "TrendingVideoConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TrendingVideoEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingVideoConnection",
    "possibleTypes": []
  },
  "TrendingVideoEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TrendingVideoNode"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingVideoEdge",
    "possibleTypes": []
  },
  "TrendingVideoNode": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "item",
        "nullable": false,
        "type": "Video"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "rank",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "weightRank",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TrendingVideoNode",
    "possibleTypes": []
  },
  "TriviaCategory": {
    "args": [],
    "description": "A category of trivia describing the nature of a subset of trivia, e.g. 'Director Trademark'. Not all trivia has a category.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TriviaCategory",
    "possibleTypes": []
  },
  "TriviaCategoryWithTrivia": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "category",
        "nullable": true,
        "type": "TriviaCategory"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TriviaRestriction"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "TriviaCategoryWithTriviaFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "TriviaCategoryWithTriviaFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "Int",
            "list": false,
            "name": "first",
            "nullable": true,
            "type": "Int"
          }
        ],
        "description": "",
        "kind": "",
        "list": false,
        "name": "trivia",
        "nullable": true,
        "type": "TriviaConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TriviaCategoryWithTrivia",
    "possibleTypes": []
  },
  "TriviaCategoryWithTriviaFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TriviaCategoryWithTriviaFilter",
    "possibleTypes": []
  },
  "TriviaConnection": {
    "args": [],
    "description": "Pagination for Trivia types which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Pages of Trivia",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "TriviaEdge"
      },
      {
        "args": [],
        "description": "Details of the page",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Details of any applied restriction",
        "kind": "",
        "list": false,
        "name": "restriction",
        "nullable": true,
        "type": "TriviaRestriction"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TriviaConnection",
    "possibleTypes": []
  },
  "TriviaEdge": {
    "args": [],
    "description": "Page of Trivia",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A Trivia node",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleTrivia"
      },
      {
        "args": [],
        "description": "Position of the node in this context, eg: Trivia 4 out of 31",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TriviaEdge",
    "possibleTypes": []
  },
  "TriviaFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "categories",
        "nullable": true,
        "type": "ID"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "spoilers",
        "nullable": true,
        "type": "FilterSpoilers"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "TriviaFilter",
    "possibleTypes": []
  },
  "TriviaRestriction": {
    "args": [],
    "description": "Information about restrictions applied to trivia",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Explanation(s) for the restriction",
        "kind": "",
        "list": true,
        "name": "explanations",
        "nullable": false,
        "type": "RestrictionExplanation"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "reasons",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "DEPRECATED: Renamed, use `reasons` instead.",
        "kind": "",
        "list": true,
        "name": "restrictionReason",
        "nullable": false,
        "type": "ContentRestrictionReason"
      },
      {
        "args": [],
        "description": "The total number of items if there was no restriction",
        "kind": "",
        "list": false,
        "name": "unrestrictedTotal",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TriviaRestriction",
    "possibleTypes": []
  },
  "TwitterLink": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Twitter username",
        "kind": "",
        "list": false,
        "name": "username",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "TwitterLink",
    "possibleTypes": []
  },
  "UIWorkflow": {
    "args": [],
    "description": "The top-level model for a server-driven UI-based workflow editing experience.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Contains the actions available to display in the action tray",
        "kind": "",
        "list": false,
        "name": "actionTray",
        "nullable": false,
        "type": "UIWorkflowActionTray"
      },
      {
        "args": [],
        "description": "Contains the main form elements or menu of options available within this workflow",
        "kind": "",
        "list": false,
        "name": "body",
        "nullable": false,
        "type": "UIWorkflowBody"
      },
      {
        "args": [],
        "description": "Contains information about the specific content the customer is affecting in this specific workflow, e.g. 'Add an FAQ'",
        "kind": "",
        "list": false,
        "name": "contentHeader",
        "nullable": false,
        "type": "UIWorkflowContentHeader"
      },
      {
        "args": [],
        "description": "Contains information about the subject of the workflow, the context within\nwhich the user is taking some action, e.g. a title being edited",
        "kind": "",
        "list": false,
        "name": "contextHeader",
        "nullable": false,
        "type": "UIWorkflowContextHeader"
      },
      {
        "args": [],
        "description": "Contains any Global Menu controls, if required, such as links to alternative experiences",
        "kind": "",
        "list": false,
        "name": "globalMenu",
        "nullable": true,
        "type": "UIWorkflowGlobalMenu"
      },
      {
        "args": [],
        "description": "Contains information about the current workflow execution state",
        "kind": "",
        "list": false,
        "name": "workflowState",
        "nullable": false,
        "type": "UIWorkflowExecutionState"
      },
      {
        "args": [],
        "description": "Indicates the type of operation this workflow is intended for, so that clients can choose appropriate icons etc",
        "kind": "",
        "list": false,
        "name": "workflowType",
        "nullable": false,
        "type": "UIWorkflowType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflow",
    "possibleTypes": []
  },
  "UIWorkflowAction": {
    "args": [],
    "description": "Represents an actionable button within a UI workflow.\nContains all the necessary information to render and handle a workflow action.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for the action",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Display text for the action",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "Specifies the direction of navigation through a workflow when a customer triggers this action. A client\ncan use this field to animate the transition with a horizontal/vertical slide in the direction suggestion,\nif they wish.\nIf not provided, the action is assumed to have no inherent direction, ie the action leaves the workflow\nin the same overall state, so clients should not animate the transition beyond showing a loading indicator.",
        "kind": "",
        "list": false,
        "name": "navigationDirection",
        "nullable": true,
        "type": "UIWorkflowActionNavigationDirection"
      },
      {
        "args": [],
        "description": "Indicates whether the action needs form data to be submitted in calls to updateUIWorkflow",
        "kind": "",
        "list": false,
        "name": "requiresFormData",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Visual style and importance level of the action",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "UIWorkflowActionType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowAction",
    "possibleTypes": []
  },
  "UIWorkflowActionNavigationDirection": {
    "args": [],
    "description": "Defines conceptual directions forward or backward through a workflow, to enable clients to\nanimate or provide customers navigational hints as they flow through a workflow by triggering actions.",
    "enumValues": [
      {
        "description": "Moves the workflow backwards towards an earlier state",
        "name": "Backward"
      },
      {
        "description": "Moves the workflow forwards towards a completion state",
        "name": "Forward"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UIWorkflowActionNavigationDirection",
    "possibleTypes": []
  },
  "UIWorkflowActionTray": {
    "args": [],
    "description": "Represents the action tray component of a UI workflow.\nContains the available actions that can be performed in the current workflow state.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The bounded and ordered list of available actions that can be performed in the current workflow state.\nThe number of actions available is not expected to be more than three.",
        "kind": "",
        "list": true,
        "name": "actions",
        "nullable": false,
        "type": "UIWorkflowAction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowActionTray",
    "possibleTypes": []
  },
  "UIWorkflowActionType": {
    "args": [],
    "description": "Defines the visual hierarchy and importance of workflow actions.\nUsed to determine how actions should be displayed in the UI.",
    "enumValues": [
      {
        "description": "Action to exit or abandon the current workflow",
        "name": "Cancel"
      },
      {
        "description": "Main action that represents the primary operation",
        "name": "Primary"
      },
      {
        "description": "Supporting actions that represent alternative operations",
        "name": "Secondary"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UIWorkflowActionType",
    "possibleTypes": []
  },
  "UIWorkflowBody": {
    "args": [],
    "description": "Represents the main body content of a UI workflow.\nContains an ordered collection of UI elements that form the workflow's content.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The bounded and ordered list of UI elements that make up the workflow's body content.\nClients should always show all workflow body elements, and in the order determined by the server, to ensure the\nworkflow is able to be completed correctly. The number of elements is usually less than 5, but a very complex\nworkflow may have more.",
        "kind": "",
        "list": true,
        "name": "elements",
        "nullable": false,
        "type": "UIWorkflowElementOrGroup"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowBody",
    "possibleTypes": []
  },
  "UIWorkflowCheckboxFormElement": {
    "args": [],
    "description": "Represents a checkbox form element in the UI workflow.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Optional checkbox constraints",
        "kind": "",
        "list": false,
        "name": "checkboxConstraints",
        "nullable": true,
        "type": "CheckboxFieldConstraints"
      },
      {
        "args": [],
        "description": "The current checkbox 'checked' boolean value",
        "kind": "",
        "list": false,
        "name": "checkboxValue",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Optional ordered and bound list of feedback messages associated with this form element (typically 0 or 1 entries).\nNull or 0 entries means there is no feedback to display.\nClients must respect the order the feedback is returned in.",
        "kind": "",
        "list": true,
        "name": "feedback",
        "nullable": true,
        "type": "UIWorkflowFeedbackElement"
      },
      {
        "args": [],
        "description": "Optional help link providing additional guidance",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Unique identifier for the checkbox",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The label text to display next to the checkbox",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowCheckboxFormElement",
    "possibleTypes": []
  },
  "UIWorkflowContentHeader": {
    "args": [],
    "description": "Represents the content header section of a UI workflow.\nContains the main heading and optional help resources for the workflow.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The heading to display as part of the main content panel and its controls",
        "kind": "",
        "list": false,
        "name": "heading",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "An optional help link to display in the Content Header for the customer to get help",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowContentHeader",
    "possibleTypes": []
  },
  "UIWorkflowContextHeader": {
    "args": [],
    "description": "Represents the context header section of a UI workflow.\nProvides contextual information about the current workflow being performed.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The heading to display to the customer to contextualize the workflow, such as 'FAQs' or 'New Title'.",
        "kind": "",
        "list": false,
        "name": "heading",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "The subject const of the workflow (optional).\nIn the future we will need to support workflows that create new primaries, so a subject entity will not yet exist.",
        "kind": "",
        "list": false,
        "name": "subject",
        "nullable": true,
        "type": "UIWorkflowSubject"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowContextHeader",
    "possibleTypes": []
  },
  "UIWorkflowElement": {
    "args": [],
    "description": "Union type for all possible UI workflow body elements excluding nested groups.\nCombines all interactive and display elements that can appear in a workflow body or within a nested group.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "UIWorkflowElement",
    "possibleTypes": [
      "UIWorkflowCheckboxFormElement",
      "UIWorkflowFeedbackCheckboxFormElement",
      "UIWorkflowFeedbackDisplayElement",
      "UIWorkflowMarkdownDisplayElement",
      "UIWorkflowMarkdownTextAreaFormElement",
      "UIWorkflowRadioGroupFormElement",
      "UIWorkflowSelectFormElement",
      "UIWorkflowTextAreaFormElement",
      "UIWorkflowTextFormElement",
      "UIWorkflowTitleRatingElement"
    ]
  },
  "UIWorkflowElementGroup": {
    "args": [],
    "description": "Represents a group of related UI workflow elements.\nAllows for logical grouping and organization of form elements.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The ordered and bound list of UI elements contained in this group",
        "kind": "",
        "list": true,
        "name": "elements",
        "nullable": false,
        "type": "UIWorkflowElement"
      },
      {
        "args": [],
        "description": "Optional heading for the group",
        "kind": "",
        "list": false,
        "name": "heading",
        "nullable": true,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Optional help link providing additional guidance for this group",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Unique identifier for the element group",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowElementGroup",
    "possibleTypes": []
  },
  "UIWorkflowElementOrGroup": {
    "args": [],
    "description": "Union type for all possible UI workflow body elements including nested groups.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "UIWorkflowElementOrGroup",
    "possibleTypes": [
      "UIWorkflowCheckboxFormElement",
      "UIWorkflowElementGroup",
      "UIWorkflowFeedbackCheckboxFormElement",
      "UIWorkflowFeedbackDisplayElement",
      "UIWorkflowMarkdownDisplayElement",
      "UIWorkflowMarkdownTextAreaFormElement",
      "UIWorkflowRadioGroupFormElement",
      "UIWorkflowSelectFormElement",
      "UIWorkflowTextAreaFormElement",
      "UIWorkflowTextFormElement",
      "UIWorkflowTitleRatingElement"
    ]
  },
  "UIWorkflowExecutionState": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A globally unique ID for a customer's specific run through the chosen server-driven workflow",
        "kind": "",
        "list": false,
        "name": "executionId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A globally unique ID for the most recent interaction/request regarding this workflow execution",
        "kind": "",
        "list": false,
        "name": "interactionId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A debug-friendly string describing the current status of the server-driven workflow being run",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "A canonical ID assigned to the server-driven UI workflow the customer is interacting with",
        "kind": "",
        "list": false,
        "name": "workflowId",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowExecutionState",
    "possibleTypes": []
  },
  "UIWorkflowFeedbackCheckboxFormElement": {
    "args": [],
    "description": "Represents an element to display in the UI workflow body containing feedback that requires checking of a box by the\ncustomer to acknowledge the feedback. The current checked or unchecked state is provided within the booleanValue field.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Current checked or unchecked state of the acknowledgement checkbox",
        "kind": "",
        "list": false,
        "name": "checkboxValue",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Feedback to show the customer",
        "kind": "",
        "list": false,
        "name": "feedback",
        "nullable": false,
        "type": "ValidationFeedbackGroup"
      },
      {
        "args": [],
        "description": "Optional help link providing additional guidance",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Unique identifier for the feedback element",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Label to show the customer alongside the acknowledgement checkbox",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowFeedbackCheckboxFormElement",
    "possibleTypes": []
  },
  "UIWorkflowFeedbackDisplayElement": {
    "args": [],
    "description": "Represents an element to display in the UI workflow body containing feedback about the customer's workflow.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Feedback about the customer's content",
        "kind": "",
        "list": false,
        "name": "feedback",
        "nullable": false,
        "type": "ValidationFeedbackGroup"
      },
      {
        "args": [],
        "description": "Unique identifier for the feedback element",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowFeedbackDisplayElement",
    "possibleTypes": []
  },
  "UIWorkflowFeedbackElement": {
    "args": [],
    "description": "Union type for all possible feedback elements in the UI workflow.\nCombines both interactive and display-only feedback elements.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "UIWorkflowFeedbackElement",
    "possibleTypes": [
      "UIWorkflowFeedbackCheckboxFormElement",
      "UIWorkflowFeedbackDisplayElement"
    ]
  },
  "UIWorkflowGlobalMenu": {
    "args": [],
    "description": "Represents the global menu structure for the UI workflow system.\nContains navigation items that appear in the global header.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Bounded list of menu items to show in the global header.\nNumber of items is not expected to grow beyond just a few entries.",
        "kind": "",
        "list": true,
        "name": "menuItems",
        "nullable": false,
        "type": "UIWorkflowGlobalMenuItem"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowGlobalMenu",
    "possibleTypes": []
  },
  "UIWorkflowGlobalMenuItem": {
    "args": [],
    "description": "The set of possible menu item entry types",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "UIWorkflowGlobalMenuItem",
    "possibleTypes": [
      "UIWorkflowGlobalMenuItemLink"
    ]
  },
  "UIWorkflowGlobalMenuItemLink": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The localized label for the link",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The type of link, such as navigation",
        "kind": "",
        "list": false,
        "name": "linkType",
        "nullable": false,
        "type": "UIWorkflowGlobalMenuItemLinkType"
      },
      {
        "args": [],
        "description": "The target URL for the link",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowGlobalMenuItemLink",
    "possibleTypes": []
  },
  "UIWorkflowGlobalMenuItemLinkType": {
    "args": [],
    "description": "The set of possible menu item link types, used to enable clients to show different icons or choose different targets.\nWe only need Navigation right now, but in the future we anticipate both external links and download link types.",
    "enumValues": [
      {
        "description": null,
        "name": "Navigation"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UIWorkflowGlobalMenuItemLinkType",
    "possibleTypes": []
  },
  "UIWorkflowLocalizedStringInputOption": {
    "args": [],
    "description": "Represents a localized string for an input option in a multi-option form component such as a dropdown menu\nor a radio button group.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The text to display for this option in the form element",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The value to set for the form element if this option is chosen by the customer",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowLocalizedStringInputOption",
    "possibleTypes": []
  },
  "UIWorkflowMarkdownDisplayElement": {
    "args": [],
    "description": "Represents a block of markdown text to display within the body of UI workflow form.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for the element",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The markdown content to display",
        "kind": "",
        "list": false,
        "name": "markdown",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowMarkdownDisplayElement",
    "possibleTypes": []
  },
  "UIWorkflowMarkdownTextAreaFormElement": {
    "args": [],
    "description": "Represents a markdown-enabled text area input form element in the UI workflow.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Optional ordered and bound list of feedback messages associated with this form element (typically 0 or 1 entries).\nNull or 0 entries means there is no feedback to display.\nClients must respect the order the feedback is returned in.",
        "kind": "",
        "list": true,
        "name": "feedback",
        "nullable": true,
        "type": "UIWorkflowFeedbackElement"
      },
      {
        "args": [],
        "description": "Optional help link providing additional guidance",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Unique identifier for the text input",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The label text to display above the text input",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Optional validation constraints for the markdown text area input",
        "kind": "",
        "list": false,
        "name": "markdownTextAreaConstraints",
        "nullable": true,
        "type": "MarkdownTextAreaFieldConstraints"
      },
      {
        "args": [],
        "description": "The current markdown text area value, if present",
        "kind": "",
        "list": false,
        "name": "markdownTextAreaValue",
        "nullable": true,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowMarkdownTextAreaFormElement",
    "possibleTypes": []
  },
  "UIWorkflowRadioGroupFormElement": {
    "args": [],
    "description": "Represents a radio button group form element in a UI workflow.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Optional ordered and bound list of feedback messages associated with this form element (typically 0 or 1 entries).\nNull or 0 entries means there is no feedback to display.\nClients must respect the order the feedback is returned in.",
        "kind": "",
        "list": true,
        "name": "feedback",
        "nullable": true,
        "type": "UIWorkflowFeedbackElement"
      },
      {
        "args": [],
        "description": "Optional help link providing additional guidance",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Unique identifier for the form element",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The label text to display for this radio group element",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Optional validation constraints for this radio group",
        "kind": "",
        "list": false,
        "name": "radioGroupConstraints",
        "nullable": true,
        "type": "RadioGroupFieldConstraints"
      },
      {
        "args": [],
        "description": "The available radio button options",
        "kind": "",
        "list": true,
        "name": "radioGroupOptions",
        "nullable": false,
        "type": "UIWorkflowRadioOption"
      },
      {
        "args": [],
        "description": "The value of the currently selected radio button option, if present",
        "kind": "",
        "list": false,
        "name": "radioGroupValue",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowRadioGroupFormElement",
    "possibleTypes": []
  },
  "UIWorkflowRadioOption": {
    "args": [],
    "description": "The set of possible radio group option types. Currently just one is available, but in the future we anticipate\nTitle, Name and Company-entity option types, so using a Union for extensibility.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "UIWorkflowRadioOption",
    "possibleTypes": [
      "UIWorkflowLocalizedStringInputOption"
    ]
  },
  "UIWorkflowSelectFormElement": {
    "args": [],
    "description": "Represents a select dropdown form element in a UI workflow.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Optional ordered and bound list of feedback messages associated with this form element (typically 0 or 1 entries).\nNull or 0 entries means there is no feedback to display.\nClients must respect the order the feedback is returned in.",
        "kind": "",
        "list": true,
        "name": "feedback",
        "nullable": true,
        "type": "UIWorkflowFeedbackElement"
      },
      {
        "args": [],
        "description": "Optional help link providing additional guidance",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Unique identifier for the form element",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The label text to display for this select dropdown element",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Optional validation constraints for this select dropdown",
        "kind": "",
        "list": false,
        "name": "selectConstraints",
        "nullable": true,
        "type": "SelectFieldConstraints"
      },
      {
        "args": [],
        "description": "The available options a customer can select from",
        "kind": "",
        "list": true,
        "name": "selectOptions",
        "nullable": false,
        "type": "UIWorkflowSelectOption"
      },
      {
        "args": [],
        "description": "The value of the currently selected option, if present",
        "kind": "",
        "list": false,
        "name": "selectValue",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowSelectFormElement",
    "possibleTypes": []
  },
  "UIWorkflowSelectOption": {
    "args": [],
    "description": "The set of possible select option types. Currently just one is available, but in the future we anticipate\nTitle, Name and Company-entity option types, so using a Union for extensibility.",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "UIWorkflowSelectOption",
    "possibleTypes": [
      "UIWorkflowLocalizedStringInputOption"
    ]
  },
  "UIWorkflowSubject": {
    "args": [],
    "description": "The set of possible workflow subjects",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "UIWorkflowSubject",
    "possibleTypes": [
      "Company",
      "Name",
      "Title"
    ]
  },
  "UIWorkflowTextAreaFormElement": {
    "args": [],
    "description": "Represents a text area input form element in the UI workflow.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Optional ordered and bound list of feedback messages associated with this form element (typically 0 or 1 entries).\nNull or 0 entries means there is no feedback to display.\nClients must respect the order the feedback is returned in.",
        "kind": "",
        "list": true,
        "name": "feedback",
        "nullable": true,
        "type": "UIWorkflowFeedbackElement"
      },
      {
        "args": [],
        "description": "Optional help link providing additional guidance",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Unique identifier for the text input",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The label text to display above the text input",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Optional validation constraints for the text area input",
        "kind": "",
        "list": false,
        "name": "textAreaConstraints",
        "nullable": true,
        "type": "TextAreaFieldConstraints"
      },
      {
        "args": [],
        "description": "The current text area value, if present",
        "kind": "",
        "list": false,
        "name": "textAreaValue",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowTextAreaFormElement",
    "possibleTypes": []
  },
  "UIWorkflowTextFormElement": {
    "args": [],
    "description": "Represents a text input form element in the UI workflow.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Optional ordered and bound list of feedback messages associated with this form element (typically 0 or 1 entries).\nNull or 0 entries means there is no feedback to display.\nClients must respect the order the feedback is returned in.",
        "kind": "",
        "list": true,
        "name": "feedback",
        "nullable": true,
        "type": "UIWorkflowFeedbackElement"
      },
      {
        "args": [],
        "description": "Optional help link providing additional guidance",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Unique identifier for the text input",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The label text to display above the text input",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Optional validation constraints for the text input",
        "kind": "",
        "list": false,
        "name": "textConstraints",
        "nullable": true,
        "type": "TextFieldConstraints"
      },
      {
        "args": [],
        "description": "The current text value, if present",
        "kind": "",
        "list": false,
        "name": "textValue",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowTextFormElement",
    "possibleTypes": []
  },
  "UIWorkflowTitleRatingElement": {
    "args": [],
    "description": "Represents an element in the form to let a customer rate the title specified.\nClients are expected to use their idiomatic title rating control and to make calls to update the customer's\nrating on-demand rather than treat this as part of a larger workflow form submission.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Unique identifier for the rating element",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The title being rated",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UIWorkflowTitleRatingElement",
    "possibleTypes": []
  },
  "UIWorkflowType": {
    "args": [],
    "description": "The set of available workflow types.\nTODO: Move to common types package after review for re-use in other graphlets for CTA vending",
    "enumValues": [
      {
        "description": null,
        "name": "Add"
      },
      {
        "description": null,
        "name": "Delete"
      },
      {
        "description": null,
        "name": "Edit"
      },
      {
        "description": null,
        "name": "Report"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UIWorkflowType",
    "possibleTypes": []
  },
  "URL": {
    "args": [],
    "description": "The type to represent a URL for some resource. Format is as follows:\n\nscheme:[userinfo@]host[:port]path[?query][#fragment]\n\nhttps://en.wikipedia.org/wiki/URL",
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "SCALAR",
    "name": "URL",
    "possibleTypes": []
  },
  "UnknownReleaseDateFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "EXCLUDE_UNKNOWN"
      },
      {
        "description": "If UNKNOWN_ONLY is used with releasedOnOrBefore or releasedOnOrAfter filters then an empty array will be returned.",
        "name": "UNKNOWN_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UnknownReleaseDateFilter",
    "possibleTypes": []
  },
  "UpdateUserProfileFeedback": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Validation feedback on a user's profile update.\nNull is returned when there is no validationFeedback.",
        "kind": "",
        "list": false,
        "name": "validationFeedback",
        "nullable": true,
        "type": "ValidationFeedback"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UpdateUserProfileFeedback",
    "possibleTypes": []
  },
  "User": {
    "args": [],
    "description": "User Type available only for authenticated users\nIncludes private info.\nAlso includes public info in profile field.\nIncludes optional ProStatus and StaffStatus fields.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "User's first name, or nickname if no first name was provided",
        "kind": "",
        "list": false,
        "name": "displayName",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "input",
            "nullable": false,
            "type": "FeedbackGivenInput"
          }
        ],
        "description": "Returns whether the user has given feedback for that particular feature",
        "kind": "",
        "list": false,
        "name": "feedbackGiven",
        "nullable": false,
        "type": "FeedbackGiven"
      },
      {
        "args": [],
        "description": "User's full name, or empty string if no name provided",
        "kind": "",
        "list": false,
        "name": "fullName",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "UserInterestsFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "UserInterestsFilter"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns the current user's list of interests. Currently only 50 interests can be stored.",
        "kind": "",
        "list": false,
        "name": "interests",
        "nullable": false,
        "type": "UserInterestsConnection"
      },
      {
        "args": [],
        "description": "Returns if account is Amazon Account Pool (AAP) account or already converted to AAP account.",
        "kind": "",
        "list": false,
        "name": "isAmazonAccount",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Returns the linked providers available for the authenticated customer.",
        "kind": "",
        "list": true,
        "name": "linkedAuthProviders",
        "nullable": false,
        "type": "LinkedAuthProvider"
      },
      {
        "args": [],
        "description": "A setting of the users preferred language, composed of ISO 369-1 code dash ISO 3166-1/UN M.49 code\nor null if no such preferred language is defined.",
        "kind": "",
        "list": false,
        "name": "preferredLanguage",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "UserPreferredStreamingProvidersInput",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "UserPreferredStreamingProvidersInput"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Returns the list of watch providers of user",
        "kind": "",
        "list": false,
        "name": "preferredStreamingProviders",
        "nullable": false,
        "type": "UserPreferredStreamingProvidersOutput"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "proStatus",
        "nullable": true,
        "type": "ProStatus"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "profile",
        "nullable": false,
        "type": "UserProfile"
      },
      {
        "args": [],
        "description": "Returns the current user's ratings privacy setting.",
        "kind": "",
        "list": false,
        "name": "ratingsPrivacy",
        "nullable": true,
        "type": "RatingsPrivacy"
      },
      {
        "args": [],
        "description": "If staffStatus is null, the user account is not marked as staff",
        "kind": "",
        "list": false,
        "name": "staffStatus",
        "nullable": true,
        "type": "StaffStatus"
      },
      {
        "args": [],
        "description": "Returns the current user's title display settings.",
        "kind": "",
        "list": false,
        "name": "titleDisplay",
        "nullable": false,
        "type": "TitleDisplayOutput"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "User",
    "possibleTypes": []
  },
  "UserBadgesInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Returns badges for a specific user if included.\nDefaults to the current authenticated user based on the x-imdb-customer-id header if omitted.\nWhen userId is provided the data can be cached.\nThrows UNAUTHENTICATED if neither is provided.",
        "list": false,
        "name": "userId",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserBadgesInput",
    "possibleTypes": []
  },
  "UserCategory": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "IMDB_USERS"
      },
      {
        "description": null,
        "name": "TOP_1000_VOTERS"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UserCategory",
    "possibleTypes": []
  },
  "UserConsentInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The type of consent a user has opted in or out of.",
        "list": false,
        "name": "consentType",
        "nullable": false,
        "type": "ConsentType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Mobile ID For Advertising, for requests coming from apps.\nUsed for the THIRD_PARTY_DATA_SHARING consent.",
        "list": false,
        "name": "idfa",
        "nullable": true,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserConsentInput",
    "possibleTypes": []
  },
  "UserConsentOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Detailed consent information.",
        "kind": "",
        "list": false,
        "name": "consent",
        "nullable": true,
        "type": "Consent"
      },
      {
        "args": [],
        "description": "Whether the user has opted in or out of the consent.\nIs a required return field for all but TRACKING_COOKIE consent operations",
        "kind": "",
        "list": false,
        "name": "consentOperation",
        "nullable": true,
        "type": "ConsentOperation"
      },
      {
        "args": [],
        "description": "The type of consent a user has opted in or out of.",
        "kind": "",
        "list": false,
        "name": "consentType",
        "nullable": false,
        "type": "ConsentType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserConsentOutput",
    "possibleTypes": []
  },
  "UserInterestsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "InterestEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "The total number of objects in this set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserInterestsConnection",
    "possibleTypes": []
  },
  "UserInterestsFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": true,
        "name": "includeInterestIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserInterestsFilter",
    "possibleTypes": []
  },
  "UserLinkedAuthProviderStatusesInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "URL customer will return to after linking/unlinking with a provider. Defaults to third party links page if omitted",
        "list": false,
        "name": "returnURL",
        "nullable": true,
        "type": "URL"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserLinkedAuthProviderStatusesInput",
    "possibleTypes": []
  },
  "UserLinkedAuthProviderStatusesOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "providers",
        "nullable": false,
        "type": "AuthProviderStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserLinkedAuthProviderStatusesOutput",
    "possibleTypes": []
  },
  "UserNotification": {
    "args": [],
    "description": "Entity type of a single notification in the Notification Center.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Header text of the notification. Could be the notification type like Now Streaming, New Trailer.",
        "kind": "",
        "list": false,
        "name": "header",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "Unique id of the notification returned from Notification Service.",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Attached image of the notification. Returns null if it does not have an image (e.g., system notification).",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": true,
        "type": "MediaServiceImage"
      },
      {
        "args": [],
        "description": "Last updated time of the notification.",
        "kind": "",
        "list": false,
        "name": "lastUpdated",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Main content of the notification. e.g., XXX from your watchlist is streaming on YYY.",
        "kind": "",
        "list": false,
        "name": "primaryContent",
        "nullable": false,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Secondary text of the notification, e.g., Because you followed XXX. Returns null if it has no value.",
        "kind": "",
        "list": false,
        "name": "secondaryContent",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "URL deep link/navigate to when the notification is clicked. Returns null if it has no link.",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserNotification",
    "possibleTypes": []
  },
  "UserNotificationConnection": {
    "args": [],
    "description": "Pagination for notifications, which always has a known total number of edges.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A page of notifications.",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "UserNotificationEdge"
      },
      {
        "args": [],
        "description": "Details of the page.",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of notifications in the entire set.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserNotificationConnection",
    "possibleTypes": []
  },
  "UserNotificationEdge": {
    "args": [],
    "description": "Item in a page of notifications.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Cursor ID.",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "A notification node.",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "UserNotification"
      },
      {
        "args": [],
        "description": "Position of this item in this context.",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserNotificationEdge",
    "possibleTypes": []
  },
  "UserNotificationsSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort notifications based on their last updated time.\nDESC: Latest dates to earliest dates.",
        "name": "LAST_UPDATED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UserNotificationsSortBy",
    "possibleTypes": []
  },
  "UserNotificationsSortOrder": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "UserNotificationsSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserNotificationsSortOrder",
    "possibleTypes": []
  },
  "UserPreferredStreamingProvidersInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "We can know whether particular streaming provider exists in the users list",
        "list": true,
        "name": "includeFilter",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserPreferredStreamingProvidersInput",
    "possibleTypes": []
  },
  "UserPreferredStreamingProvidersOutput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "streamingProviders",
        "nullable": false,
        "type": "WatchProviderConnection"
      },
      {
        "args": [],
        "description": "Returns the total number of streaming providers stored",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserPreferredStreamingProvidersOutput",
    "possibleTypes": []
  },
  "UserProfile": {
    "args": [],
    "description": "User type\nExtends external type.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The user's profile biography\n\n---------------------\nGraphlet Details:\n- Name: userProfile\n- CTI: IMDb/GraphQL/UserProfile\n- Affected by headers: x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "bio",
        "nullable": true,
        "type": "UserProfileBio"
      },
      {
        "args": [],
        "description": "The date that this IMDb User Profile was created.\nThere are some active users whose accounts do not have a creation date. Field will return null response for those cases.\n\n---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "creationDate",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The user's profile primary image\n\n---------------------\nGraphlet Details:\n- Name: userProfile\n- CTI: IMDb/GraphQL/UserProfile\n- Affected by headers: x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "UserProfileImage"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: contributor\n- CTI: IMDb/GraphQL/Contributor\n- Affected by headers: x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-contributors-tech",
        "kind": "",
        "list": false,
        "name": "userId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "The user's profile username aka nickname\n\n---------------------\nGraphlet Details:\n- Name: userProfile\n- CTI: IMDb/GraphQL/UserProfile\n- Affected by headers: x-imdb-client-name, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "username",
        "nullable": true,
        "type": "UserProfileUsername"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserProfile",
    "possibleTypes": []
  },
  "UserProfileBio": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The status of any PENDING or REJECTED updates to a user's profile bio when a user is viewing their own profile.\nThis will return null if a user is not logged in OR if a logged in user is viewing someone else's profile.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": true,
        "type": "UserProfileBioUpdateStatus"
      },
      {
        "args": [],
        "description": "When a user is viewing someone else's profile this will return the live published profile bio aka the most recently\nACCEPTED update.\n\nWhen a user is logged in AND viewing their own profile AND they have a PENDING update this will return the pending\nprofile bio, otherwise this will return the live published profile bio.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserProfileBio",
    "possibleTypes": []
  },
  "UserProfileBioUpdateStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A UTC timestamp of when the user profile bio update status was most recently updated",
        "kind": "",
        "list": false,
        "name": "lastUpdated",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The user profile bio submitted for update.\n\nThis field will always be returned as part of the mutation response as well as when the updateStatus is PENDING.",
        "kind": "",
        "list": false,
        "name": "modifiedItem",
        "nullable": true,
        "type": "Markdown"
      },
      {
        "args": [],
        "description": "Feedback regarding the user profile bio update",
        "kind": "",
        "list": true,
        "name": "updateFeedback",
        "nullable": true,
        "type": "UpdateUserProfileFeedback"
      },
      {
        "args": [],
        "description": "The status of the user profile bio update.",
        "kind": "",
        "list": false,
        "name": "updateStatus",
        "nullable": false,
        "type": "UserProfileUpdateStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserProfileBioUpdateStatus",
    "possibleTypes": []
  },
  "UserProfileImage": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "When a user is viewing someone else's profile this will return the live published profile image aka the most\nrecently ACCEPTED update.\n\nWhen a user is logged in AND viewing their own profile AND they have a PENDING update this will return the pending\nprofile image, otherwise this will return the live published profile image.",
        "kind": "",
        "list": false,
        "name": "image",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [],
        "description": "The status of any PENDING or REJECTED updates to a user's profile image when a user is viewing their own profile.\nThis will return null if a user is not logged in OR if a logged in user is viewing someone else's profile.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": true,
        "type": "UserProfileImageUpdateStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserProfileImage",
    "possibleTypes": []
  },
  "UserProfileImageUpdateStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A UTC timestamp of when the user profile image update status was most recently updated",
        "kind": "",
        "list": false,
        "name": "lastUpdated",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The user profile image submitted for update.\n\nThis field will only be returned as part of the mutation response when the updateStatus is ACCEPTED or PENDING.\nWhen the updateStatus is REJECTED, modifiedItem will be null",
        "kind": "",
        "list": false,
        "name": "modifiedItem",
        "nullable": true,
        "type": "Image"
      },
      {
        "args": [],
        "description": "Feedback regarding the user profile image update",
        "kind": "",
        "list": true,
        "name": "updateFeedback",
        "nullable": true,
        "type": "UpdateUserProfileFeedback"
      },
      {
        "args": [],
        "description": "The status of the user profile image update",
        "kind": "",
        "list": false,
        "name": "updateStatus",
        "nullable": false,
        "type": "UserProfileUpdateStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserProfileImageUpdateStatus",
    "possibleTypes": []
  },
  "UserProfileInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional userId input to fetch a user's profile. Defaults to the current authenticated user when no userId is provided.",
        "list": false,
        "name": "userId",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserProfileInput",
    "possibleTypes": []
  },
  "UserProfileUpdateStatus": {
    "args": [],
    "description": "Possible statuses for a UserProfile update",
    "enumValues": [
      {
        "description": null,
        "name": "ACCEPTED"
      },
      {
        "description": null,
        "name": "PENDING"
      },
      {
        "description": null,
        "name": "REJECTED"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UserProfileUpdateStatus",
    "possibleTypes": []
  },
  "UserProfileUsername": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The status of any PENDING or REJECTED updates to a user's profile bio when a user is viewing their own profile.\nThis will return null if a user is not logged in OR if a logged in user is viewing someone else's profile.",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": true,
        "type": "UserProfileUsernameUpdateStatus"
      },
      {
        "args": [],
        "description": "When a user is viewing someone else's profile this will return the live published username aka the most recently\nACCEPTED update.\n\nWhen a user is logged in AND viewing their own profile AND they have a PENDING update this will return the pending\nusername, otherwise this will return the live published username.\n\nNull is returned when a user has no username.",
        "kind": "",
        "list": false,
        "name": "text",
        "nullable": true,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserProfileUsername",
    "possibleTypes": []
  },
  "UserProfileUsernameUpdateStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A UTC timestamp of when the user profile username update status was most recently updated",
        "kind": "",
        "list": false,
        "name": "lastUpdated",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The user profile username submitted for update.\n\nThis field will always be returned as part of the mutation response as well as when the updateStatus is PENDING.",
        "kind": "",
        "list": false,
        "name": "modifiedItem",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Feedback regarding the user profile username update",
        "kind": "",
        "list": true,
        "name": "updateFeedback",
        "nullable": true,
        "type": "UpdateUserProfileFeedback"
      },
      {
        "args": [],
        "description": "The status of the user profile username update.",
        "kind": "",
        "list": false,
        "name": "updateStatus",
        "nullable": false,
        "type": "UserProfileUpdateStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserProfileUsernameUpdateStatus",
    "possibleTypes": []
  },
  "UserRatingsSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on their weighted IMDb star rating",
        "list": false,
        "name": "aggregateRatingRange",
        "nullable": true,
        "type": "FloatRangeInput"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles based on the number of user ratings they have received",
        "list": false,
        "name": "ratingsCountRange",
        "nullable": true,
        "type": "IntRangeInput"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserRatingsSearchConstraint",
    "possibleTypes": []
  },
  "UserReaction": {
    "args": [],
    "description": "Defines a reaction made by a user",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The entity id that the user reacted upon, e.g. a viconst",
        "kind": "",
        "list": false,
        "name": "entityId",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Timestamp of when the user last performed this reaction on an entity",
        "kind": "",
        "list": false,
        "name": "lastUpdated",
        "nullable": false,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "The user's reaction",
        "kind": "",
        "list": false,
        "name": "reaction",
        "nullable": false,
        "type": "Reaction"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "UserReaction",
    "possibleTypes": []
  },
  "UserReviewsInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional Reviews filter",
        "list": false,
        "name": "filter",
        "nullable": true,
        "type": "ReviewsFilter"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Defaults to most recent sort (sortBy: SUBMISSION_DATE sortOrder: DESC)",
        "list": false,
        "name": "sort",
        "nullable": true,
        "type": "UserReviewsSort"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Optional userId input to fetch a user's reviews.\nFall back to the requesting customerId (x-imdb-customer-id header) if input is missing.\nThrows BAD_USER_INPUT if userId is invalid.\nThrows UNAUTHENTICATED if both requesting customerId header and userId input are missing.",
        "list": false,
        "name": "userId",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserReviewsInput",
    "possibleTypes": []
  },
  "UserReviewsSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "UserReviewsSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserReviewsSort",
    "possibleTypes": []
  },
  "UserReviewsSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Title text",
        "name": "ALPHABETICAL_TITLE"
      },
      {
        "description": "Helpfulness score of review based on up/down votes",
        "name": "HELPFULNESS_SCORE"
      },
      {
        "description": "Date of review submission",
        "name": "SUBMISSION_DATE"
      },
      {
        "description": "Total vote count",
        "name": "TOTAL_VOTES"
      },
      {
        "description": "Author's rating on review",
        "name": "USER_RATING"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UserReviewsSortBy",
    "possibleTypes": []
  },
  "UserRole": {
    "args": [],
    "description": "The role of of a user modifying the known for for consumption by IMDb admins",
    "enumValues": [
      {
        "description": "A staff administrator role",
        "name": "ADMIN"
      },
      {
        "description": "A customer role",
        "name": "CUSTOMER"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "UserRole",
    "possibleTypes": []
  },
  "UserWatchedTitlesInput": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Default to sort by first watched date in descending order.",
        "list": false,
        "name": "sort",
        "nullable": true,
        "type": "UserWatchedTitlesSort"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserWatchedTitlesInput",
    "possibleTypes": []
  },
  "UserWatchedTitlesSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "WatchedTitlesSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "UserWatchedTitlesSort",
    "possibleTypes": []
  },
  "ValidationFeedback": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Localized message of validation feedback, providing further detail for the user",
        "kind": "",
        "list": false,
        "name": "message",
        "nullable": true,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Status of the validation feedback",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ValidationFeedbackStatus"
      },
      {
        "args": [],
        "description": "Localized displayable title for validation feedback.\nNull is returned when there is no detailed message.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ValidationFeedback",
    "possibleTypes": []
  },
  "ValidationFeedbackContent": {
    "args": [],
    "description": "Represents the localized feedback content to be displayed to the customer within a given feedback dialog/alert",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "An optional help link, to provide additional guidance to customers on how to deal with this specific feedback.\nNot all validation messages will have a dedicated help link available.",
        "kind": "",
        "list": false,
        "name": "helpLink",
        "nullable": true,
        "type": "HelpLink"
      },
      {
        "args": [],
        "description": "Localized message of validation feedback, providing further detail for the user.\nNull is returned when there is no detailed message.",
        "kind": "",
        "list": false,
        "name": "message",
        "nullable": true,
        "type": "LocalizedMarkdown"
      },
      {
        "args": [],
        "description": "Localized displayable title for validation feedback.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedMarkdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ValidationFeedbackContent",
    "possibleTypes": []
  },
  "ValidationFeedbackGroup": {
    "args": [],
    "description": "Represents multiple validation feedback messages of the same status/severity level.\nEnables clients to more easily aggregate/group a list of related messages under the same message dialog/alert.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Bounded, ordered list of feedback messages sharing the same status, to show the customer.\nShould never be more than a few feedback messages.",
        "kind": "",
        "list": true,
        "name": "feedbackItems",
        "nullable": false,
        "type": "ValidationFeedbackContent"
      },
      {
        "args": [],
        "description": "The common status for all feedback messages in this group",
        "kind": "",
        "list": false,
        "name": "status",
        "nullable": false,
        "type": "ValidationFeedbackStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "ValidationFeedbackGroup",
    "possibleTypes": []
  },
  "ValidationFeedbackStatus": {
    "args": [],
    "description": "Possible statuses for returning validation feedback to a user. These may be mapped to visual icons displayed to a user\nto help describe the feedback.",
    "enumValues": [
      {
        "description": null,
        "name": "ERROR"
      },
      {
        "description": null,
        "name": "INFORMATION"
      },
      {
        "description": null,
        "name": "WARNING"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "ValidationFeedbackStatus",
    "possibleTypes": []
  },
  "VanityUrl": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "The name page associated with this vanity URL",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "The full vanity URL, e.g. https://imdb.me/abc",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The path of the vanity URL excluding the leading slash.\nFor example, if full vanity URL is 'https://imdb.me/abc', then 'urlPath' will be 'abc'.",
        "kind": "",
        "list": false,
        "name": "urlPath",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VanityUrl",
    "possibleTypes": []
  },
  "Video": {
    "args": [],
    "description": "Video type\nExtends external type.",
    "enumValues": [],
    "fields": [
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "adParameters",
            "nullable": false,
            "type": "AdParametersApp"
          }
        ],
        "description": "Fetches the ad URL for a video ad on app clients\n\n---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "appAdURL",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "adParameters",
            "nullable": false,
            "type": "AdParametersApp"
          }
        ],
        "description": "Fetches the ad URL for a video ad on app clients\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "appAdURLV2",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "contentType",
        "nullable": true,
        "type": "VideoContentType"
      },
      {
        "args": [],
        "description": "The date the video was uploaded. Not all videos may have the createdDate datum.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "createdDate",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Whether this video contains content inappropriate for more sensitive viewers\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "isMature",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ID",
            "list": false,
            "name": "after",
            "nullable": true,
            "type": "ID"
          },
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Personalized suggested videos for a given videoId. Unique per user. Limit of 50.\n\n---------------------\nGraphlet Details:\n- Name: personalization\n- CTI: IMDb/GraphQL/Personalized Picks\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: 0 seconds\n- Slack Channel: #imdb-pwr-public",
        "kind": "",
        "list": false,
        "name": "personalizedSuggestedVideos",
        "nullable": true,
        "type": "PersonalizedSuggestedVideosConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideoContentFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "VideoContentFilter"
          }
        ],
        "description": "The URLs that can be used by video players to playback the content of the video.\nThis is a very finite set of known encodings thus there is no pagination available\nto the caller, but if the caller only supports a particular mime type(s) or\nresolution(s) it can filter to those criteria.\n\n---------------------\nGraphlet Details:\n- Name: videoPlayback\n- CTI: IMDb/GraphQL/Video Playback\n- Affected by headers: x-imdb-detected-country\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": true,
        "name": "playbackURLs",
        "nullable": false,
        "type": "PlaybackURL"
      },
      {
        "args": [],
        "description": "The URLs containing the preview manifest of the video.\nCurrently the list will only have HLS preview manifest.\n\n---------------------\nGraphlet Details:\n- Name: videoPlayback\n- CTI: IMDb/GraphQL/Video Playback\n- Affected by headers: x-imdb-detected-country\n- Cache TTL: 900 seconds\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": true,
        "name": "previewURLs",
        "nullable": false,
        "type": "PlaybackURL"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "primaryTitle",
        "nullable": true,
        "type": "Title"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "providerType",
        "nullable": false,
        "type": "VideoProviderType"
      },
      {
        "args": [],
        "description": "Cacheable\nSorted by aggregate count, descending\nVends the list of the current reactions, and their associated counts, for this entity\n\n---------------------\nGraphlet Details:\n- Name: reactions\n- CTI: IMDb/GraphQL/Reactions\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-video",
        "kind": "",
        "list": false,
        "name": "reactionsSummary",
        "nullable": true,
        "type": "ReactionsSummary"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "RecommendedVideoTimedTextTrackFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "RecommendedVideoTimedTextTrackFilter"
          }
        ],
        "description": "Returns a recommended VideoTimedTextTrack for a given videoId. To be used in situations clients want to display a\nVideoTimedTextTrack but a user hasn't made an explicit language selection (ex. auto-play). The recommended\nVideoTimedTextTrack is determined using the header x-imdb-user-language and criteria defined by business.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "recommendedTimedTextTrack",
        "nullable": true,
        "type": "VideoTimedTextTrack"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Names related to the given video. Results capped to first 100\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "relatedNames",
        "nullable": true,
        "type": "VideoNameRelationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Titles related to the given video. Results capped to first 100\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "relatedTitles",
        "nullable": true,
        "type": "VideoTitleRelationConnection"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "Videos related to the current video. The results will be capped to 100.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "relatedVideos",
        "nullable": true,
        "type": "VideoConnection"
      },
      {
        "args": [],
        "description": "Runtime is required for vi consts but not for vc consts\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "runtime",
        "nullable": true,
        "type": "VideoRuntime"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "thumbnail",
        "nullable": false,
        "type": "Thumbnail"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "VideoTimedTextTracksFilter",
            "list": false,
            "name": "filter",
            "nullable": true,
            "type": "VideoTimedTextTracksFilter"
          }
        ],
        "description": "Returns a list of available VideoTimedTextTracks for a given videoId, sorted alphabetically.\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": true,
        "name": "timedTextTracks",
        "nullable": true,
        "type": "VideoTimedTextTrack"
      },
      {
        "args": [],
        "description": "Not cacheable\nSorted by most recently reacted\nVends the list of reactions the user has already provided\nRequires the x-imdb-customer-id header from a logged-in user\n\n---------------------\nGraphlet Details:\n- Name: reactions\n- CTI: IMDb/GraphQL/Reactions\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-imdb-detected-country, x-imdb-user-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-video",
        "kind": "",
        "list": true,
        "name": "userReactions",
        "nullable": true,
        "type": "UserReaction"
      },
      {
        "args": [],
        "description": "Dimension sizing information for this video\n\n---------------------\nGraphlet Details:\n- Name: video\n- CTI: IMDb/GraphQL/Video\n- Affected by headers: x-imdb-detected-country, x-imdb-adsystem-overrides, x-imdb-user-language, x-imdb-client-name\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-community-and-video",
        "kind": "",
        "list": false,
        "name": "videoDimensions",
        "nullable": true,
        "type": "VideoDimensions"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "adParameters",
            "nullable": false,
            "type": "AdParametersWeb"
          }
        ],
        "description": "Fetches the ad URL for a video ad on web (desktop and mobile web) clients\n\n---------------------\nGraphlet Details:\n- Name: adsProvider\n- CTI: IMDb/GraphQL/Advertising Provider\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "webAdURL",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "INPUT_OBJECT",
            "list": false,
            "name": "adParameters",
            "nullable": false,
            "type": "AdParametersWeb"
          }
        ],
        "description": "Fetches the ad URL for a video ad on web (desktop and mobile web) clients\n\n---------------------\nGraphlet Details:\n- Name: advertising\n- CTI: IMDb/GraphQL/Advertising\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-adsystem-overrides, x-imdb-client-ip, x-imdb-client-name, x-imdb-client-version, x-imdb-consent-info, x-imdb-detected-country, x-imdb-user-language, user-agent\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-adtech-public",
        "kind": "",
        "list": false,
        "name": "webAdURLV2",
        "nullable": true,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "Video",
    "possibleTypes": []
  },
  "VideoAdFeedbackUrlInput": {
    "args": [],
    "description": "Parameters used to construct an ad feedback URL for a video ad",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The video ad in XML format for which an ad feedback URL is requested.",
        "list": false,
        "name": "videoAdXml",
        "nullable": false,
        "type": "String"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "VideoAdFeedbackUrlInput",
    "possibleTypes": []
  },
  "VideoAppearance": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "HORIZONTAL"
      },
      {
        "description": null,
        "name": "SQUARE"
      },
      {
        "description": null,
        "name": "VERTICAL"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoAppearance",
    "possibleTypes": []
  },
  "VideoConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "List of videos",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "VideoEdge"
      },
      {
        "args": [],
        "description": "Indicates the possible video facets available for filtering on.",
        "kind": "",
        "list": false,
        "name": "facets",
        "nullable": true,
        "type": "VideoFacets"
      },
      {
        "args": [],
        "description": "Additional information useful for pagination",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of videos that fit the selection criteria.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoConnection",
    "possibleTypes": []
  },
  "VideoContentFilter": {
    "args": [],
    "description": "Allows for the caller to specify the mime types and/or definitions that should be included",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "The list of definitions to include URLs for. Note that M3U8 does not support any definitions.",
        "list": true,
        "name": "definitions",
        "nullable": true,
        "type": "VideoDefinition"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The list of mime types to include URLs for. Note that M3U8 does not support any definitions.",
        "list": true,
        "name": "mimeTypes",
        "nullable": true,
        "type": "VideoMimeType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "VideoContentFilter",
    "possibleTypes": []
  },
  "VideoContentType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A localized version of the content type for display purposes",
        "kind": "",
        "list": false,
        "name": "displayName",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The ID of the content type. This should not be hard-coded, and should always be fetched at runtime.\nThese IDs may change over time",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoContentType",
    "possibleTypes": []
  },
  "VideoContentTypeId": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "CLIP"
      },
      {
        "description": null,
        "name": "DEMO_REEL"
      },
      {
        "description": null,
        "name": "FEATURETTE"
      },
      {
        "description": null,
        "name": "FEATURE_FILM"
      },
      {
        "description": null,
        "name": "FILM_SHORT"
      },
      {
        "description": null,
        "name": "INTERVIEW"
      },
      {
        "description": null,
        "name": "MUSIC_VIDEO"
      },
      {
        "description": null,
        "name": "NEWS"
      },
      {
        "description": null,
        "name": "OTHER"
      },
      {
        "description": null,
        "name": "PROMOTIONAL"
      },
      {
        "description": null,
        "name": "REVIEW"
      },
      {
        "description": null,
        "name": "TRAILER"
      },
      {
        "description": null,
        "name": "TV_MINISODE"
      },
      {
        "description": null,
        "name": "TV_PROGRAM"
      },
      {
        "description": null,
        "name": "WEB_CLIP"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoContentTypeId",
    "possibleTypes": []
  },
  "VideoDefinition": {
    "args": [],
    "description": "IMDb supports a number of resolutions for the video/mp4 and video/webm mime types.",
    "enumValues": [
      {
        "description": null,
        "name": "DEF_240p"
      },
      {
        "description": null,
        "name": "DEF_360p"
      },
      {
        "description": null,
        "name": "DEF_480p"
      },
      {
        "description": null,
        "name": "DEF_720p"
      },
      {
        "description": null,
        "name": "DEF_1080p"
      },
      {
        "description": null,
        "name": "DEF_AUTO"
      },
      {
        "description": null,
        "name": "DEF_SD"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoDefinition",
    "possibleTypes": []
  },
  "VideoDimensions": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The bucketed classification of the video's aspect ratio, either VERTICAL HORIZONTAL or SQUARE\nThis value is primarily meant for logging metadata, and as such these buckets are subject to change\nand should not be assumed to apply to any particular aspect ratio",
        "kind": "",
        "list": false,
        "name": "appearance",
        "nullable": false,
        "type": "VideoAppearance"
      },
      {
        "args": [],
        "description": "The aspect ratio of the video expressed as a value X where X:1 is the aspect ratio",
        "kind": "",
        "list": false,
        "name": "aspectRatio",
        "nullable": false,
        "type": "Float"
      },
      {
        "args": [],
        "description": "The height of the source uploaded video file in pixels. Note that individual encodings may have smaller values due to scaling",
        "kind": "",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The width of the source uploaded video file in pixels. Note that individual encodings may have smaller values due to scaling",
        "kind": "",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoDimensions",
    "possibleTypes": []
  },
  "VideoEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Video"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoEdge",
    "possibleTypes": []
  },
  "VideoFacets": {
    "args": [],
    "description": "Response facets are impacted by the VideosQueryFilter. All types, nameConstraints, and titleConstraints filter options\nwill be included in the facet results, even if just set to a count of 0",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Video names with counts of how many videos are of that name, sorted by their counts in descending order",
        "kind": "",
        "list": true,
        "name": "names",
        "nullable": true,
        "type": "VideoNameFacet"
      },
      {
        "args": [],
        "description": "Video titles with counts of how many videos are of that title, sorted by their counts in descending order",
        "kind": "",
        "list": true,
        "name": "titles",
        "nullable": true,
        "type": "VideoTitleFacet"
      },
      {
        "args": [],
        "description": "Video types with counts of how many videos are of that type, sorted by their counts in descending order",
        "kind": "",
        "list": true,
        "name": "types",
        "nullable": true,
        "type": "VideoTypeFacet"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoFacets",
    "possibleTypes": []
  },
  "VideoMedia": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "IMDb viconst",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "primaryImage",
        "nullable": true,
        "type": "MediaServiceImage"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "runtime",
        "nullable": true,
        "type": "VideoRuntime"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoMedia",
    "possibleTypes": []
  },
  "VideoMimeType": {
    "args": [],
    "description": "MIME is an internet standard that explains the kind of file, in this case we support\nthe following video types.\n\nhttps://en.wikipedia.org/wiki/MIME",
    "enumValues": [
      {
        "description": "A computer file format for a multimedia playlist. One common use of the M3U file format is\ncreating a single-entry playlist file pointing to a stream on the Internet - application/x-mpegurl\nhttps://en.wikipedia.org/wiki/M3U",
        "name": "M3U8"
      },
      {
        "description": "The ISO standard video file format based on Quicktime - video/mp4\nhttps://www.iana.org/assignments/media-types/video/mp4",
        "name": "MP4"
      },
      {
        "description": "A video file format designed as a royalty-free alternative to use in HTML5 video - video/webm\nhttps://en.wikipedia.org/wiki/WebM",
        "name": "WEBM"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoMimeType",
    "possibleTypes": []
  },
  "VideoNameFacet": {
    "args": [],
    "description": "Provides information on how many videos in a gallery match the specified video name",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoNameFacet",
    "possibleTypes": []
  },
  "VideoNameFilterConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match videos related to all of the requested names",
        "list": true,
        "name": "allNameIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "VideoNameFilterConstraints",
    "possibleTypes": []
  },
  "VideoNameRelationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "List of name relations",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "VideoNameRelationEdge"
      },
      {
        "args": [],
        "description": "Additional information useful for pagination",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of names related to this video",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoNameRelationConnection",
    "possibleTypes": []
  },
  "VideoNameRelationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Name"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoNameRelationEdge",
    "possibleTypes": []
  },
  "VideoPlacementType": {
    "args": [],
    "description": "Enum representing how a video ad is played in the context of the content on a page.",
    "enumValues": [
      {
        "description": "Video ad that plays after the video content on the page.",
        "name": "POSTROLL"
      },
      {
        "description": "Video ad that plays prior to video content on the page.",
        "name": "PREROLL"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoPlacementType",
    "possibleTypes": []
  },
  "VideoProviderType": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The ID representing the Video source provider type. eg: 'amzn1.imdb.video.providertype.staff'",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoProviderType",
    "possibleTypes": []
  },
  "VideoRecommendationsAdItem": {
    "args": [],
    "description": "Clients are to request the corresponding ad data. See VideoRecommendationsAdType documentation for corresponding queries.\nAny other metadata for ads in this context goes here",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "adType",
        "nullable": false,
        "type": "VideoRecommendationsAdType"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "transitionDelay",
        "nullable": true,
        "type": "Float"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoRecommendationsAdItem",
    "possibleTypes": []
  },
  "VideoRecommendationsAdType": {
    "args": [],
    "description": "An enum representing which ad types are supported in Query.videoRecommendations\n\nDISPLAY_AD indicates a call to \n - Query.displayAdForApp, for apps",
    "enumValues": [
      {
        "description": null,
        "name": "DISPLAY_AD"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoRecommendationsAdType",
    "possibleTypes": []
  },
  "VideoRecommendationsConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "VideoRecommendationsItemsEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoRecommendationsConnection",
    "possibleTypes": []
  },
  "VideoRecommendationsContext": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Specifies how the videos will be displayed to customers",
        "list": false,
        "name": "displayType",
        "nullable": false,
        "type": "VideoRecommendationsDisplayType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A list of the different VideoRecommendationsAdType(s) which are supported by clients\nOnly VideoRecommendationsAdType(s) specified in supportedAdTypes will be returned\nIf supportedAdTypes is empty, there will be no ads returned",
        "list": true,
        "name": "supportedAdTypes",
        "nullable": false,
        "type": "VideoRecommendationsAdType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "VideoRecommendationsContext",
    "possibleTypes": []
  },
  "VideoRecommendationsDisplayType": {
    "args": [],
    "description": "Different options for how the videos will be displayed to customers",
    "enumValues": [
      {
        "description": "PORTRAIT_ORIENTATION indicates the videos will all be shown in a portrait video player",
        "name": "PORTRAIT_ORIENTATION"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoRecommendationsDisplayType",
    "possibleTypes": []
  },
  "VideoRecommendationsItem": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [],
    "kind": "UNION",
    "name": "VideoRecommendationsItem",
    "possibleTypes": [
      "VideoRecommendationsAdItem",
      "VideoRecommendationsVideoItem"
    ]
  },
  "VideoRecommendationsItemsEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "VideoRecommendationsItem"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoRecommendationsItemsEdge",
    "possibleTypes": []
  },
  "VideoRecommendationsVideoItem": {
    "args": [],
    "description": "The video to be displayed to customers\nAny other metadata for the video in this context goes here\n\n'video' will be null when we try to return a video that is unavailable (e.g. availability block, geo-block)",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "video",
        "nullable": true,
        "type": "Video"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoRecommendationsVideoItem",
    "possibleTypes": []
  },
  "VideoRuntime": {
    "args": [],
    "description": "Types",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "unit",
        "nullable": false,
        "type": "TimeUnit"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoRuntime",
    "possibleTypes": []
  },
  "VideoSort": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "by",
        "nullable": false,
        "type": "VideoSortBy"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "order",
        "nullable": false,
        "type": "SortOrder"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "VideoSort",
    "possibleTypes": []
  },
  "VideoSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "DATE"
      },
      {
        "description": null,
        "name": "DURATION"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoSortBy",
    "possibleTypes": []
  },
  "VideoTimedTextTrack": {
    "args": [],
    "description": "Represents a single VideoTimedTextTrack that can be used to display text that is synced with a video's audio during\nvideo playback. Contains a URL, language, and a descriptive displayName. For a given video language (ex. en-US) pairing\nonly a single VideoTimedTextTrack will be returned, based on accessibility criteria defined by business.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A short description of the VideoTimedTextTrack experience suitable for displaying to the customer to set\nexpectations. This may be used in the video player menu. The displayName language is the language of the\nVideoTimedTextTrack. (Ex. `English` for `en-US`, `Fran\u00e7aise` for`fr-FR`)",
        "kind": "",
        "list": false,
        "name": "displayName",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The language for a VideoTimedTextTrack",
        "kind": "",
        "list": false,
        "name": "language",
        "nullable": false,
        "type": "Language"
      },
      {
        "args": [],
        "description": "A fragment to include in ref markers that references this VideoTimedTextTrack, for example 'cc-es-SP'.\nThe length of this string will not exceed 11 characters.",
        "kind": "",
        "list": false,
        "name": "refTagFragment",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "The type for a VideoTimedTextTrack",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "VideoTimedTextTrackType"
      },
      {
        "args": [],
        "description": "A URL that can be used in a video player to display the contents of the VideoTimedTextTrack.\nIt may or may not be valid for a limited time and thus is intended for immediate use by the caller.",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "URL"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoTimedTextTrack",
    "possibleTypes": []
  },
  "VideoTimedTextTrackFormat": {
    "args": [],
    "description": "The VideoTimedTextTrackFormat format(s) supported by IMDb",
    "enumValues": [
      {
        "description": " SubRip Subtitle ",
        "name": "SRT"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoTimedTextTrackFormat",
    "possibleTypes": []
  },
  "VideoTimedTextTrackType": {
    "args": [],
    "description": "The VideoTimedTextTrackType types supported by IMDb",
    "enumValues": [
      {
        "description": null,
        "name": "CLOSED_CAPTION"
      },
      {
        "description": null,
        "name": "SUBTITLE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VideoTimedTextTrackType",
    "possibleTypes": []
  },
  "VideoTimedTextTracksFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "If no VideoTimedTextTrackFormat is provided it will default to SRT.",
        "list": false,
        "name": "format",
        "nullable": true,
        "type": "VideoTimedTextTrackFormat"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "VideoTimedTextTracksFilter",
    "possibleTypes": []
  },
  "VideoTitleFacet": {
    "args": [],
    "description": "Provides information on how many videos in a gallery match the specified video title",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoTitleFacet",
    "possibleTypes": []
  },
  "VideoTitleFilterConstraints": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match videos related to any of the requested titles",
        "list": true,
        "name": "anyTitleIds",
        "nullable": true,
        "type": "ID"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "VideoTitleFilterConstraints",
    "possibleTypes": []
  },
  "VideoTitleRelationConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "List of title relations",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "VideoTitleRelationEdge"
      },
      {
        "args": [],
        "description": "Additional information useful for pagination",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of names related to this video",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoTitleRelationConnection",
    "possibleTypes": []
  },
  "VideoTitleRelationEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "Title"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "position",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoTitleRelationEdge",
    "possibleTypes": []
  },
  "VideoTypeFacet": {
    "args": [],
    "description": "Provides information on how many videos in a gallery match the specified video type",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Video Type information including display label",
        "kind": "",
        "list": false,
        "name": "type",
        "nullable": false,
        "type": "VideoContentType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoTypeFacet",
    "possibleTypes": []
  },
  "VideoTypeWithVideos": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The video type common for all of the associated videos",
        "kind": "",
        "list": false,
        "name": "videoType",
        "nullable": false,
        "type": "VideoContentType"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "SCALAR",
            "list": false,
            "name": "first",
            "nullable": false,
            "type": "Int"
          }
        ],
        "description": "The first page of videos in each category",
        "kind": "",
        "list": false,
        "name": "videos",
        "nullable": true,
        "type": "VideoTypesConnection"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoTypeWithVideos",
    "possibleTypes": []
  },
  "VideoTypesConnection": {
    "args": [],
    "description": "Pagination for videos by type, page info is intended for use with the related videos field",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "VideoEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of objects in the entire set",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "VideoTypesConnection",
    "possibleTypes": []
  },
  "VideosQueryFilter": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match videos based on their maturity classification.\nAffects all values, including actual videos returned and total videos count.",
        "list": false,
        "name": "maturityLevel",
        "nullable": true,
        "type": "MaturityLevel"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return videos meeting the specified names",
        "list": false,
        "name": "nameConstraints",
        "nullable": true,
        "type": "VideoNameFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return videos meeting the specified titles",
        "list": false,
        "name": "titleConstraints",
        "nullable": true,
        "type": "VideoTitleFilterConstraints"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Return only videos which are one of these types",
        "list": true,
        "name": "types",
        "nullable": true,
        "type": "VideoContentTypeId"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "VideosQueryFilter",
    "possibleTypes": []
  },
  "ViewPortSize": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "height",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "width",
        "nullable": false,
        "type": "Int"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "ViewPortSize",
    "possibleTypes": []
  },
  "VisibilityLevel": {
    "args": [],
    "description": "Enum values for the valid visibility levels for data items",
    "enumValues": [
      {
        "description": null,
        "name": "HIDDEN"
      },
      {
        "description": null,
        "name": "PRO_SITE_ONLY"
      },
      {
        "description": null,
        "name": "PUBLIC"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "VisibilityLevel",
    "possibleTypes": []
  },
  "WatchOption": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Description of the watch option with more details.",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "platform",
            "nullable": false,
            "type": "PlatformLinkFormatId"
          }
        ],
        "description": "Returns a link that navigates either to the content or a landing page for the content.",
        "kind": "",
        "list": false,
        "name": "link",
        "nullable": false,
        "type": "URL"
      },
      {
        "args": [],
        "description": "Returns true if the watch option's provider is promoted. False or null means that it is not promoted\nPromoted provider feature is no longer supported by the Ads team - https://sim.amazon.com/issues/W2W-170. The field will always return false.",
        "kind": "",
        "list": false,
        "name": "promoted",
        "nullable": true,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Provider of the watch option",
        "kind": "",
        "list": false,
        "name": "provider",
        "nullable": false,
        "type": "WatchProvider"
      },
      {
        "args": [],
        "description": "The name of the provider for the watch option.",
        "kind": "",
        "list": false,
        "name": "providerName",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The provider suffix that can be added to the refTag attached to the link",
        "kind": "",
        "list": false,
        "name": "providerRefTagFragment",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Description of the watch option with shortened details.",
        "kind": "",
        "list": false,
        "name": "shortDescription",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The short display text for the watch option. (call to action for the button)\nThis can be used for buttons where concise naming is required.",
        "kind": "",
        "list": false,
        "name": "shortTitle",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The display text for the watch option. (call to action for the button)\nThis can be used for a descriptive call to action.",
        "kind": "",
        "list": false,
        "name": "title",
        "nullable": false,
        "type": "LocalizedString"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchOption",
    "possibleTypes": []
  },
  "WatchOptionCategoryType": {
    "args": [],
    "description": "Watch option category types.\n\nThere is no filtering support for below category types; graphlet will throw an exception.\nThese are present in the enum due to them being valid response watch option category types for other APIs.\nNot all APIs support filtering:\n    - PHYSICAL\n\nIMDbTV is no longer a supported watch option category type. Using the enum will not have any effect.",
    "enumValues": [
      {
        "description": null,
        "name": "IMDB_TV"
      },
      {
        "description": null,
        "name": "PHYSICAL"
      },
      {
        "description": null,
        "name": "PODCAST"
      },
      {
        "description": null,
        "name": "RENT_OR_BUY"
      },
      {
        "description": null,
        "name": "SUBSCRIPTION"
      },
      {
        "description": null,
        "name": "THEATRICAL"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "WatchOptionCategoryType",
    "possibleTypes": []
  },
  "WatchOptionQueryFilter": {
    "args": [],
    "description": "The filters to be used in the query.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Include watch options for provided watch option categories only.",
        "list": true,
        "name": "includeWatchOptionCategories",
        "nullable": true,
        "type": "WatchOptionCategoryType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "WatchOptionQueryFilter",
    "possibleTypes": []
  },
  "WatchOptionsLocation": {
    "args": [],
    "description": "The location of the client. A lat/long or postal code location must be given for the client input to be valid. If both\nlat/long and postal code are provided we default to using lat/long.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "latLong",
        "nullable": true,
        "type": "LatLong"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "",
        "list": false,
        "name": "postalCodeLocation",
        "nullable": true,
        "type": "PostalCodeLocation"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "WatchOptionsLocation",
    "possibleTypes": []
  },
  "WatchOptionsSearchConstraint": {
    "args": [],
    "description": "Watch option constraints are limited to region of the request.\nRegion is determined by the x-imdb-detected-country header (gateway determines from request).\n\nWatchOptionsSearchConstraint currently supports a limited set of providers:\n* 'amzn1.imdb.w2w.provider.amazon' (Amazon physical purchase)\n* 'amzn1.imdb.w2w.provider.prime_video': (Prime Video purchase/rental)\n* 'amzn1.imdb.w2w.provider.prime_video.PRIME' (Prime Video subscription)\n\nExample: if you want to match titles that are available for purchase/rent on Prime Video in the US,\nspecify anyWatchProviderIds: ['amzn1.imdb.w2w.provider.prime_video'] AND anyWatchRegions: ['US']\n\nExample: if you want to exclude titles that are available for physical purchase on Amazon in the UK,\nspecify excludeAnyWatchProviderIds: ['amzn1.imdb.w2w.provider.amazon'] AND anyWatchRegions: ['GB']",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles WITH watch options by the specified providers.\n* Use query `watchProviders` to fetch a curated list of options to use for this constraint.",
        "list": true,
        "name": "anyWatchProviderIds",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that are available to watch in any of the specified regions. Regions supplied\nin this field will override values from the x-imdb-detected-country header for all\nwatch option constraints.\n\nCountry code in ISO 3166 (IMDbLocaleConfig:region_codes.json)\nExample: To limit to Watch Provider availability in United States or Great Britain: ['US', 'GB']",
        "list": true,
        "name": "anyWatchRegions",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles WITHOUT watch options by the specified providers.\n* Use query `watchProviders` to fetch a curated list of options to use for this constraint.\n\nIf the same input is specified in the any and exclude constraints,\nthen the results should be empty.",
        "list": true,
        "name": "excludeWatchProviderIds",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Override the regions to exclude for the given request.\nCountry code in ISO 3166 (IMDbLocaleConfig:region_codes.json)\nExample: To exclude Watch Provider availability from United States or Great Britain: ['US', 'GB']",
        "list": true,
        "name": "excludeWatchRegions",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that have the specified type of watch options.",
        "list": true,
        "name": "hasWatchOptionTypes",
        "nullable": true,
        "type": "SearchWatchOptionType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "WatchOptionsSearchConstraint",
    "possibleTypes": []
  },
  "WatchProvider": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Description of the watch option with more details.\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "---------------------\nGraphlet Details:\n- Name: identity\n- CTI: IMDb/GraphQL/Identity\n- Affected by headers: x-amzn-transitive-authentication-token, x-imdb-customer-id, x-amzn-customer-id, x-auth-session-customer-id, x-amzn-sessionid, x-imdb-client-ip, x-imdb-client-name, x-imdb-detected-country, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-trust",
        "kind": "",
        "list": false,
        "name": "id",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "Indicates whether the provider is a popular one in the client's region\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "isPopular",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [
          {
            "defaultValue": "",
            "description": "",
            "kind": "ENUM",
            "list": false,
            "name": "platform",
            "nullable": false,
            "type": "PlatformId"
          }
        ],
        "description": "Indicates whether the watch provider is supported for the client's location and platform\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "isSupported",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Watch provider logos.\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "logos",
        "nullable": true,
        "type": "WatchProviderLogos"
      },
      {
        "args": [],
        "description": "The name of this watch option provider, for example 'Prime Video'\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "Fragment to include in ref markers that reference this WatchProvider, for example 'netflix'\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "refTagFragment",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Category type which describes the watch provider so client can categorize\n\n---------------------\nGraphlet Details:\n- Name: watch\n- CTI: IMDb/GraphQL/Watch\n- Affected by headers: x-imdb-client-name, x-imdb-client-version, x-imdb-detected-country, x-imdb-detected-time-zone, x-imdb-user-language\n- Cache TTL: Varies. Reach out to graphlet owner\n- Slack Channel: #imdb-coverage-tech",
        "kind": "",
        "list": false,
        "name": "watchOptionCategoryType",
        "nullable": true,
        "type": "WatchOptionCategoryType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchProvider",
    "possibleTypes": []
  },
  "WatchProviderConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "WatchProviderEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchProviderConnection",
    "possibleTypes": []
  },
  "WatchProviderEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "WatchProvider"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchProviderEdge",
    "possibleTypes": []
  },
  "WatchProviderLogos": {
    "args": [],
    "description": "Types",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Square image. Ex. It may be used in front of providers in the WatchOptions dialog",
        "kind": "",
        "list": false,
        "name": "icon",
        "nullable": true,
        "type": "MediaServiceImage"
      },
      {
        "args": [],
        "description": "Rectangular image. Ex. It may be used as a slate in the WatchOptions carousel",
        "kind": "",
        "list": false,
        "name": "slate",
        "nullable": true,
        "type": "MediaServiceImage"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchProviderLogos",
    "possibleTypes": []
  },
  "WatchProvidersQueryFilter": {
    "args": [],
    "description": "The filters to be used in the watch providers query.",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Include watch options for provided watch option categories only.",
        "list": true,
        "name": "includeWatchOptionCategories",
        "nullable": true,
        "type": "WatchOptionCategoryType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "WatchProvidersQueryFilter",
    "possibleTypes": []
  },
  "WatchedStatus": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The time the first watch signal was received.",
        "kind": "",
        "list": false,
        "name": "firstWatched",
        "nullable": true,
        "type": "DateTime"
      },
      {
        "args": [],
        "description": "Whether this title has been watched before.",
        "kind": "",
        "list": false,
        "name": "isWatched",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Lists all the sources of the remaining watch signals.",
        "kind": "",
        "list": true,
        "name": "remainingWatchedSourceTypes",
        "nullable": true,
        "type": "TitleWatchedSourceType"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchedStatus",
    "possibleTypes": []
  },
  "WatchedTitleEdge": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "cursor",
        "nullable": false,
        "type": "ID"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "node",
        "nullable": false,
        "type": "TitleWatchedStatus"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchedTitleEdge",
    "possibleTypes": []
  },
  "WatchedTitlesConnection": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": true,
        "name": "edges",
        "nullable": false,
        "type": "WatchedTitleEdge"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "pageInfo",
        "nullable": false,
        "type": "PageInfo"
      },
      {
        "args": [],
        "description": "Total number of the titles this customer has watched.",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchedTitlesConnection",
    "possibleTypes": []
  },
  "WatchedTitlesSortBy": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": "Sort by first watched date.",
        "name": "FIRST_WATCHED_DATE"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "WatchedTitlesSortBy",
    "possibleTypes": []
  },
  "WatchlistStatistics": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Displayable Count of total number of users who have added the title to their watchlist",
        "kind": "",
        "list": false,
        "name": "displayableCount",
        "nullable": true,
        "type": "LocalizedDisplayableCount"
      },
      {
        "args": [],
        "description": "The total number of users who have added the title to their watchlist",
        "kind": "",
        "list": false,
        "name": "totalCount",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WatchlistStatistics",
    "possibleTypes": []
  },
  "WebAdCreativeInfo": {
    "args": [],
    "description": "AdCreativeInfo with additional web-specific fields.\nThis should be merged with the AdSlot type used for apps in future schema consolidation.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Type of ad product, provided if ad contains creative from Amazon Ad Exchange",
        "kind": "",
        "list": false,
        "name": "aaxAdType",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Ad product type information, provided if ad contains creative",
        "kind": "",
        "list": false,
        "name": "adProductType",
        "nullable": true,
        "type": "AdProductType"
      },
      {
        "args": [],
        "description": "ID of the creative, provided if ad contains creative",
        "kind": "",
        "list": false,
        "name": "creativeId",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "Flag that determines if the ad slot is eligible to run 3p auction",
        "kind": "",
        "list": false,
        "name": "isEligibleFor3pAd",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag that determines if the slot is eligible for automatic ad refresh",
        "kind": "",
        "list": false,
        "name": "isEligibleForRefresh",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag used to communicate if the ad returned is premium",
        "kind": "",
        "list": false,
        "name": "isPremium",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Height and width of the returned creative",
        "kind": "",
        "list": false,
        "name": "size",
        "nullable": false,
        "type": "CreativeSize"
      },
      {
        "args": [],
        "description": "HTML markup for the slot containing the ad creative",
        "kind": "",
        "list": false,
        "name": "slotMarkup",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebAdCreativeInfo",
    "possibleTypes": []
  },
  "WebAdSlot": {
    "args": [],
    "description": "AdSlot with additional web-specific fields.\nThis should be merged with the AdSlot type used for apps in future schema consolidation.",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Ad feedback URL to be linked in the sponsored label of the ad.\nThis will be null for ad slots not containing a creative, such as the SIS pixel or placeholders.",
        "kind": "",
        "list": false,
        "name": "adFeedbackUrl",
        "nullable": true,
        "type": "URL"
      },
      {
        "args": [],
        "description": "The creative metadata and slotsMarkup returned for the given ad slot",
        "kind": "",
        "list": false,
        "name": "creativeInfo",
        "nullable": false,
        "type": "WebAdCreativeInfo"
      },
      {
        "args": [],
        "description": "The name of the ad slot",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebAdSlot",
    "possibleTypes": []
  },
  "WebAdTargetingParameters": {
    "args": [],
    "description": "Parameters specific to web ad targeting",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "True if the client is requesting content that meets the AdBlockPlus Acceptable Ads program,\nfalse if the request is for standard ad content.",
        "list": false,
        "name": "isAbpAcceptable",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "The IMDb site variant on which the ads are intended to be shown",
        "list": false,
        "name": "site",
        "nullable": false,
        "type": "AdSite"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Mappings of requested ad slot names to requested ad slot sizes.\nRequired for non-mobile sites, but is optional in the schema.\nThe resolver is responsible for safely handling empty input.",
        "list": true,
        "name": "slotSizeMap",
        "nullable": true,
        "type": "SlotSize"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "URL of the page being targeted.\nIf not provided, defaults to homepage URL corresponding to site field.",
        "list": false,
        "name": "url",
        "nullable": true,
        "type": "URL"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "WebAdTargetingParameters",
    "possibleTypes": []
  },
  "WebAdsConfigOutput": {
    "args": [],
    "description": "Output from the webAdsConfig operation containing all information needed to request ads",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "APS slot information for Amazon Publisher Services integration",
        "kind": "",
        "list": true,
        "name": "apsSlotInfoMap",
        "nullable": false,
        "type": "WebApsSlotInfo"
      },
      {
        "args": [],
        "description": "Flag indicating if ads slots are enabled on the page.\nThis can be false if ads are blocked by targeting, not allowed on a specific page,\nor if the BigRedButton is used to disable display ads.",
        "kind": "",
        "list": false,
        "name": "areSlotsEnabled",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag indicating if the page has premium ads",
        "kind": "",
        "list": false,
        "name": "hasPremiumAd",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "HTML markup to be included in the head of the document",
        "kind": "",
        "list": false,
        "name": "headerMarkup",
        "nullable": false,
        "type": "String"
      },
      {
        "args": [],
        "description": "Flag indicating if ad refresh is enabled",
        "kind": "",
        "list": false,
        "name": "isAdRefreshEnabled",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "PLAID overrides for the page",
        "kind": "",
        "list": true,
        "name": "plaidOverrides",
        "nullable": false,
        "type": "PlaidOverride"
      },
      {
        "args": [],
        "description": "Breakpoint to ad size mappings for responsive AdSlot",
        "kind": "",
        "list": true,
        "name": "responsiveSlotSizes",
        "nullable": false,
        "type": "WebResponsiveSlotSize"
      },
      {
        "args": [],
        "description": "List of ad slots available on the page",
        "kind": "",
        "list": true,
        "name": "slots",
        "nullable": false,
        "type": "WebAdSlot"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebAdsConfigOutput",
    "possibleTypes": []
  },
  "WebAdsInput": {
    "args": [],
    "description": "Parameters used to make a display ad request for web pages.\nNote: There is some ambiguity between AdParametersWeb and WebAdTargetingParameters, each of which predate\nthe web ads schemas, and must be extended to capture all parameters for web display ads.\nIn the future, inputs for ad request resolvers should be consolidated to contain one platform-specific parameters\nobject (e.g. app vs. web), and one that is format specific (e.g. display vs. video).\nSIM for schema consolidation: https://sim.amazon.com/issues/IMDBADTECH-5463",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "A set of parameters needed from web clients to target ads.\nThese parameters include page type, subpage type, and other targeting information.\nThis input type is shared with the video ad for web resolver schema.",
        "list": false,
        "name": "adParameters",
        "nullable": false,
        "type": "AdParametersWeb"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A set of parameters used to target display ads, across all site variants",
        "list": false,
        "name": "displayAdTargetingParameters",
        "nullable": false,
        "type": "DisplayAdTargetingParameters"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "A set of parameters specific to web ad targeting, across ad formats.\nThis input type is shared with the display ad for app resolver schema.",
        "list": false,
        "name": "webAdTargetingParameters",
        "nullable": false,
        "type": "WebAdTargetingParameters"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "WebAdsInput",
    "possibleTypes": []
  },
  "WebAdsOutput": {
    "args": [],
    "description": "Output for the webAds query",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Flag indicating if any premium ads are present",
        "kind": "",
        "list": false,
        "name": "hasPremiumAd",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Flag indicating if request was for automatic ad refresh.\nThe resolver will set this as true if refreshableSlots input was populated.",
        "kind": "",
        "list": false,
        "name": "isRefreshRequest",
        "nullable": false,
        "type": "Boolean"
      },
      {
        "args": [],
        "description": "Mapping of slots with resizing re-fetch disabled to their blocked breakpoints",
        "kind": "",
        "list": true,
        "name": "responsiveResizingDisabledSlots",
        "nullable": false,
        "type": "WebResponsiveResizingDisabledSlot"
      },
      {
        "args": [],
        "description": "A list of ad slots and their creative info",
        "kind": "",
        "list": true,
        "name": "slots",
        "nullable": false,
        "type": "WebAdSlot"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebAdsOutput",
    "possibleTypes": []
  },
  "WebApsSlotInfo": {
    "args": [],
    "description": "Information about an APS slot for Amazon Publisher Services integration",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Identifiers for the ad slot",
        "kind": "",
        "list": false,
        "name": "apsSlot",
        "nullable": false,
        "type": "ApsSlot"
      },
      {
        "args": [],
        "description": "Parameters for the ad slot",
        "kind": "",
        "list": true,
        "name": "apsSlotParams",
        "nullable": false,
        "type": "ApsSlotParam"
      },
      {
        "args": [],
        "description": "The name of the ad slot",
        "kind": "",
        "list": false,
        "name": "slotName",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebApsSlotInfo",
    "possibleTypes": []
  },
  "WebResponsiveResizingDisabledBreakpoint": {
    "args": [],
    "description": "Viewport breakpoint with disabled flag",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The width in pixels of the breakpoint",
        "kind": "",
        "list": false,
        "name": "breakpoint",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "Whether responsive resizing is disabled for this breakpoint",
        "kind": "",
        "list": false,
        "name": "isDisabled",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebResponsiveResizingDisabledBreakpoint",
    "possibleTypes": []
  },
  "WebResponsiveResizingDisabledSlot": {
    "args": [],
    "description": "Slot with responsive resizing disabled",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The breakpoints for which responsive resizing is disabled",
        "kind": "",
        "list": true,
        "name": "breakpoints",
        "nullable": false,
        "type": "WebResponsiveResizingDisabledBreakpoint"
      },
      {
        "args": [],
        "description": "The name of the slot",
        "kind": "",
        "list": false,
        "name": "name",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebResponsiveResizingDisabledSlot",
    "possibleTypes": []
  },
  "WebResponsiveSlotSize": {
    "args": [],
    "description": "Mapping between slot names and their size configurations for different viewport breakpoints",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "List of viewport breakpoints and corresponding ad sizes",
        "kind": "",
        "list": true,
        "name": "breakpoints",
        "nullable": false,
        "type": "WebViewportBreakpointSlotSize"
      },
      {
        "args": [],
        "description": "The name of the ad slot",
        "kind": "",
        "list": false,
        "name": "slotName",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebResponsiveSlotSize",
    "possibleTypes": []
  },
  "WebViewportBreakpointSlotSize": {
    "args": [],
    "description": "Viewport breakpoint configuration for responsive ad sizing",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The maximum window width to serve this ad size",
        "kind": "",
        "list": false,
        "name": "breakpoint",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The ad size for this breakpoint (e.g. 728x90)",
        "kind": "",
        "list": false,
        "name": "slotSize",
        "nullable": false,
        "type": "CreativeSize"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebViewportBreakpointSlotSize",
    "possibleTypes": []
  },
  "WebsiteLink": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "label",
        "nullable": true,
        "type": "String"
      },
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "url",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebsiteLink",
    "possibleTypes": []
  },
  "WebviewVideoPlayer": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Audio language of the video.",
        "kind": "",
        "list": false,
        "name": "audioLanguage",
        "nullable": false,
        "type": "Language"
      },
      {
        "args": [],
        "description": "Language of the burned-in captions. Returns null if there is no burned-in captions.",
        "kind": "",
        "list": false,
        "name": "burnedInCaptionsLanguage",
        "nullable": true,
        "type": "Language"
      },
      {
        "args": [],
        "description": "Description of the video.",
        "kind": "",
        "list": false,
        "name": "description",
        "nullable": true,
        "type": "LocalizedString"
      },
      {
        "args": [],
        "description": "The customized webview Url.\nClient's info, which is got from the header, will be used to customize this Url\nto contain client-related params.",
        "kind": "",
        "list": false,
        "name": "webviewUrl",
        "nullable": false,
        "type": "String"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WebviewVideoPlayer",
    "possibleTypes": []
  },
  "WeightUnit": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "KILOGRAM"
      },
      {
        "description": null,
        "name": "POUND"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "WeightUnit",
    "possibleTypes": []
  },
  "WideReleaseFilter": {
    "args": [],
    "description": "Filter of wide-released or non-wide-released release dates",
    "enumValues": [
      {
        "description": null,
        "name": "EXCLUDE_WIDE_RELEASE"
      },
      {
        "description": null,
        "name": "WIDE_RELEASE_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "WideReleaseFilter",
    "possibleTypes": []
  },
  "WinsFilter": {
    "args": [],
    "description": [],
    "enumValues": [
      {
        "description": null,
        "name": "EXCLUDE_WINS"
      },
      {
        "description": null,
        "name": "WINS_ONLY"
      }
    ],
    "fields": [],
    "inputFields": [],
    "kind": "ENUM",
    "name": "WinsFilter",
    "possibleTypes": []
  },
  "WithNameDataSearchConstraint": {
    "args": [],
    "description": "The constraints here are combined (AND).\n\nexamples: \n\nwithNameDataConstraint: {\n    allDataAvailable: [TRIVIA],\n    noDataAvailable: [TRIVIA]\n}\nwill not match any names.\n\nwithNameDataConstraint: {\n    allDataAvailable: [TRIVIA, BIRTH_PLACE],\n    anyDataAvailable: [BIRTH_DATE, QUOTES]\n    noDataAvailable: [DEATH_PLACE]\n}\nwill match names that have (trivia data AND a birth place) AND no death place AND (either a birth date OR quotes).",
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names that have ALL of the selected data available",
        "list": true,
        "name": "allDataAvailable",
        "nullable": true,
        "type": "NameDataType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names that have AT LEAST ONE of the selected data available",
        "list": true,
        "name": "anyDataAvailable",
        "nullable": true,
        "type": "NameDataType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match names that have NONE of the selected data available",
        "list": true,
        "name": "noDataAvailable",
        "nullable": true,
        "type": "NameDataType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "WithNameDataSearchConstraint",
    "possibleTypes": []
  },
  "WithTitleDataSearchConstraint": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [],
    "inputFields": [
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that have ALL of these data available",
        "list": true,
        "name": "allDataAvailable",
        "nullable": true,
        "type": "TitleDataType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that have AT LEAST ONE of these data available",
        "list": true,
        "name": "anyDataAvailable",
        "nullable": true,
        "type": "TitleDataType"
      },
      {
        "args": [],
        "defaultValue": "",
        "description": "Match titles that do NOT have ALL of these data",
        "list": true,
        "name": "noDataAvailable",
        "nullable": true,
        "type": "TitleDataType"
      }
    ],
    "kind": "INPUT_OBJECT",
    "name": "WithTitleDataSearchConstraint",
    "possibleTypes": []
  },
  "WorkAuthorizationCountries": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "Total number of work authorization items for the person",
        "kind": "",
        "list": false,
        "name": "total",
        "nullable": false,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The work authorization items matching input arguments (e.g. 'limit')",
        "kind": "",
        "list": true,
        "name": "workAuthorizations",
        "nullable": false,
        "type": "WorkAuthorizationInCountry"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WorkAuthorizationCountries",
    "possibleTypes": []
  },
  "WorkAuthorizationInCountry": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "A country",
        "kind": "",
        "list": false,
        "name": "country",
        "nullable": false,
        "type": "LocalizedDisplayableCountry"
      },
      {
        "args": [],
        "description": "Whether authorized to work in this country",
        "kind": "",
        "list": false,
        "name": "isAuthorized",
        "nullable": false,
        "type": "Boolean"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "WorkAuthorizationInCountry",
    "possibleTypes": []
  },
  "YearDisplayableProperty": {
    "args": [],
    "description": [],
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "",
        "kind": "",
        "list": false,
        "name": "value",
        "nullable": false,
        "type": "Markdown"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "YearDisplayableProperty",
    "possibleTypes": []
  },
  "YearRange": {
    "args": [],
    "description": "A range of years",
    "enumValues": [],
    "fields": [
      {
        "args": [],
        "description": "The end year",
        "kind": "",
        "list": false,
        "name": "endYear",
        "nullable": true,
        "type": "Int"
      },
      {
        "args": [],
        "description": "The start year",
        "kind": "",
        "list": false,
        "name": "year",
        "nullable": true,
        "type": "Int"
      }
    ],
    "inputFields": [],
    "kind": "OBJECT",
    "name": "YearRange",
    "possibleTypes": []
  }
}